Based on the provided context, there is no explicit information given about the process followed to deploy a trained deep learning model. The text mainly focuses on discussing different weakly supervised learning tasks and their respective terms used in the literature.

However, we can make some educated assumptions about the process based on common deep learning practices.


After training a deep learning model, the following steps are typically taken for deployment:

1. Model serialization: This involves saving the model's architecture, weights, and other relevant information into a file. This file can be used for later deployment or sharing the model with others. In the context of Keras, a popular deep learning library, this can be done using the `model.save()` function.

2. Platform selection: Depending on the use case, the trained model can be deployed on various platforms. For instance, for real-time inference, the model can be deployed on a local machine or a cloud server. For web applications, the model can be integrated using Flask or Django frameworks. For mobile applications, the model can be converted into a Core ML model (for iOS) or TensorFlow Lite model (for Android) using tools provided by Apple and Google, respectively.

Without more specific information from the context, these are the general steps followed for deploying a deep learning model.