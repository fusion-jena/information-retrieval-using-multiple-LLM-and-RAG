Based on the provided context, there is no information about data augmentation techniques such as flipping, rotating, or scaling being applied in the described deep learning pipeline. The context focuses on the covsel package and its functions for collinearity filtering and model-specific embedding in a geographic context.

The covsel.filteralgo() function is used for collinearity filtering, which is Step A of the process. This function takes a numeric vector of species presences and absences, a data frame of continuous covariate data, and optional weights and forced covariates as inputs. The collinearity filtering is based on a correlation coefficient threshold (corcut).

The covsel.embed() function is used for model-specific embedding, which is Step B of the process. This function takes the selected covariates from Step A, fits models with embedded selection procedures, and uses GLM with elastic-net regularization and GAM with null-space prioritization. The inputs for this function include the species presence/absence vector, the covariate data frame, and optional weights.

The covsel.filter() function is a wrapper function that applies the collinearity filtering algorithm at each target level, such as variable level, category level, or all remainders. The inputs for this function are the species presence/absence vector, the covariate data frame, and the correlation coefficient threshold (corcut).

In summary, the provided context discusses the covsel package and its functions for collinearity filtering and model-specific embedding, but it does not mention data augmentation techniques such as flipping, rotating, or scaling.