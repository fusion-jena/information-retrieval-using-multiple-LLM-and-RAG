In the context provided, several data preprocessing steps are taken before training a deep learning model. These steps include normalization, cleaning, and categorizing data.

Firstly, normalization is performed by subtracting the mean and dividing by the standard deviation of the continuous columns. This step is implemented using the "normalize" data pre-processor from the fastai library. Normalization helps to ensure that all features have a similar scale, which can improve the training of the deep learning model.

Secondly, cleaning of the data is performed by replacing null values with column median values. This step is implemented using the "fillMissing" data pre-processor from the fastai library. Replacing missing values with median values can help prevent the deep learning model from being biased towards certain data points.

Lastly, categorizing of the data is performed by mapping categorical columns to distinct categories using the "categorify" data pre-processor from the fastai library. This step helps to ensure that the deep learning model can effectively handle categorical data.

Additionally, the "add datepart" helper function of the library allows the specification of the date column, which generates additional predictors such as "Year", "DayofWeek", "DayOfYear", "Is Month_End", and so on. These additional predictors can help the deep learning model capture temporal patterns in the data.

Therefore, the data preprocessing steps involved before training a deep learning model include normalization, cleaning, and categorizing data. These steps are implemented using the fastai library and are crucial for ensuring that the deep learning model can effectively learn from the data.