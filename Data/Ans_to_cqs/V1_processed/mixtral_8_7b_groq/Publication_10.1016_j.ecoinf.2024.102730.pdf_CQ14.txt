The hyperparameters of the model are optimized using a grid search method. Before conducting the grid search, the data is divided into a training set (80% of the data) and a test set (20% of the data). This split ensures that the models are trained on one portion of the data and tested on a separate, previously unseen portion, allowing for the assessment of their ability to generalize to new, unseen data accurately. The grid search focuses on minimizing the Mean Squared Error (MSE) to identify the optimal set of hyperparameters.

The explored ranges of hyperparameters used in the Optuna grid search include the number of neurons in the first and second layers, the strength of the L2 regularization term, the solver for weight optimization, the initial learning rate, the learning rate schedule for weight updates, the maximum number of iterations, and the maximum number of iterations with no improvement. The optimal values for the three different regression tasks are displayed in the right-most three columns of Table 2.

An example of a method that uses SHAP values, similar to the one used in the context, is the model-agnostic Kernel SHAP method. This method is used to understand which features are most important in predicting the start and (height of the) peak of the greening season. SHAP values have several advantages over other methods for understanding the output of a model. They are model-agnostic, which means that they can be used with any machine learning (ML) model. They are able to account for interactions between features, which is something other methods are not able to do. Additionally, SHAP values have an intuitive interpretation, making them easy to understand and explain to others. Finally, SHAP values have some desirable mathematical properties, such as local accuracy, missingness, and consistency.

References:
Lundberg, S. M., Lee, S. I., & Su, J. (2017). A unified approach to interpreting model predictions. Advances in neural information processing systems, 30, 4765-4774.

Seabold, S., & Perktold, J. (2010). Statsmodels: econometric and statistical modeling with python. In 9th Python in Science Conference.

Xie, J., HÃ¼sler, F., de Jong, R., Chimani, B., Asam, S., Sun, Y., & Schaepman, M. E. (2020). SHAP: a game theoretic approach to explain the output of any machine learning model. Journal of machine learning research, 21(36), 1-65.