The provided context does not contain specific information about strategies employed to handle randomness in the deep learning pipeline. However, it does mention that deep learning algorithms were considered for developing water quality prediction models, but they were not used due to the limited number of samples.

In general, deep learning models, like other machine learning algorithms, can have randomness introduced in various stages of the pipeline, such as data preprocessing, model initialization, and model optimization. To handle this randomness, several strategies can be employed.

1. Random Seed Value: To ensure reproducibility of results, a fixed random seed value can be set for functions that involve randomness, such as data shuffling, sampling, and weight initialization. This ensures that the same sequence of random numbers is generated every time the model is trained.

2. Data Preprocessing: Randomness can be introduced during data preprocessing steps like data shuffling and data splitting (e.g., train-test split, cross-validation). To handle this, a fixed random seed value can be set for these operations.

3. Model Initialization: Deep learning models involve initializing a large number of parameters. These parameters can be initialized with random values. To handle this, some deep learning frameworks allow users to set a fixed seed value for parameter initialization.

4. Model Optimization: Optimization algorithms used in deep learning, like Stochastic Gradient Descent (SGD), can have randomness introduced through the mini-batch sampling process. To handle this, a fixed random seed value can be set for the optimization algorithm.

5. Regularization: Techniques like dropout and dropconnect, which are used to prevent overfitting in deep learning models, involve randomness. These techniques randomly drop out or disconnect neurons during training. To handle this, a fixed random seed value can be set for these techniques.

In conclusion, while the provided context does not contain specific information about strategies employed to handle randomness in the deep learning pipeline, several strategies can be employed in general, such as setting a fixed random seed value for functions involving randomness, data preprocessing, model initialization, model optimization, and regularization.