The criteria used to split the data for training a deep learning model are not explicitly stated in the provided context. However, it does mention the use of a supervised learning approach called Random Forest for land cover classification. In supervised learning, the data is typically split into training and validation sets to train and evaluate the model's performance.

In the context, the training data for the Random Forest classifier was created by collecting points within sampling plots distributed across different vegetation types. These sampling plots were created by calculating 5% of the total area covered by the boundary and dividing that area by the number of vegetation types intersecting the boundary. The points were then divided into two classes: 'non-woody' and 'woody', where 'woody' cover included vegetation with woody stems, such as trees and shrubs.

Although not explicitly mentioned, the validation set could have been created by holding out a portion of the collected points for evaluating the model's performance. This approach is commonly used in machine learning to ensure that the model can generalize well to unseen data.

In deep learning, the data splitting criteria can be similar, where a portion of the data is used for training, and the remaining portion is used for validation and testing. The training set is used to train the model's parameters, while the validation set is used to tune hyperparameters and prevent overfitting. The test set is then used to evaluate the model's performance on unseen data.

In summary, while the specific criteria used to split the data for deep learning model training are not provided in the context, it is common practice to split the data into training, validation, and test sets in supervised learning. In the context, the training data was created by collecting points within sampling plots distributed across different vegetation types and divided into two classes: 'non-woody' and 'woody'. The validation set could have been created by holding out a portion of the collected points for evaluating the model's performance.