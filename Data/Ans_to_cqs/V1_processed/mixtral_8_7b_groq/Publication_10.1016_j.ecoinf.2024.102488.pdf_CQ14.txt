The hyperparameters of the models used in the study mentioned in the context are optimized using a grid-search strategy. This strategy involves systematically searching for the best combination of hyperparameters within a predefined range or set of values. By trying out different combinations of hyperparameters, the model can find the set that results in the best performance.

In the study, the authors used a stacking ensemble model for land use and land cover (LULC) classification of a wetland area. The base models used in this ensemble model include KNN, RF, AdaBoost, XGBoost, and LightGBM. To optimize the hyperparameters of these base models, the authors used a grid-search strategy.

The specific details of the grid-search strategy used in the study are not provided in the context. However, it is mentioned that the stacking ensemble model was developed using the scikit-learn library in Python 3.7. Scikit-learn provides a convenient way to perform grid search for hyperparameter tuning through its GridSearchCV function.

GridSearchCV takes as input a model, a parameter grid, and a cross-validation strategy. It then performs an exhaustive search over the specified parameter grid, training the model with different combinations of hyperparameters and evaluating its performance using cross-validation. The combination of hyperparameters that results in the best performance is then returned as the optimal set of hyperparameters.

In addition to grid search, other hyperparameter optimization strategies include random search, Bayesian optimization, and evolutionary algorithms. Random search involves randomly sampling hyperparameters from a predefined range or distribution, instead of systematically searching through all possible combinations. Bayesian optimization uses a probabilistic model to guide the search for the optimal hyperparameters, while evolutionary algorithms use genetic algorithms to evolve the hyperparameters towards an optimal solution.

Overall, the use of hyperparameter optimization strategies such as grid search can help improve the performance of machine learning models by finding the set of hyperparameters that result in the best performance.