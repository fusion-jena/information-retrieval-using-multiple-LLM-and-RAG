Based on the provided context, there is no explicit information about the postprocessing steps involved after the model training for the specific models or experiments mentioned. However, it is common practice in machine learning to calculate various metrics and evaluate model performance using techniques such as confusion matrices and saliency maps.

In the context of the active learning experiments, the evaluation is based on required computational time for different active learning strategies, as shown in Table 1. The strategies include uncertainty, diversity, adaptive, and combination-based methods. However, these strategies are related to the active learning process and not postprocessing steps after model training.

For models like VGG16 and ResNet152V2, which are mentioned in the context, common postprocessing steps after training include:

1. Calculating metrics: Various metrics, such as accuracy, precision, recall, and F1-score, are calculated to evaluate the model's performance.
2. Generating confusion matrices: Confusion matrices are generated to visualize the performance of the model across different classes. This helps in understanding the misclassifications made by the model.
3. Creating saliency maps: Saliency maps can be generated to visualize the important regions in the input data that contribute to the model's predictions. This can help in interpreting the model's decision-making process.

In the context of the BirdNet model, the study by McGinn et al. (2023) investigates the topology of fine-grained, sub-species sound events in the embedding space afforded by BirdNet. While this study does not explicitly mention postprocessing steps after model training, it does discuss the formation of distinct clusters for different call types of the same species in the embedding space.

In summary, while the provided context does not explicitly mention the postprocessing steps involved after the model training, common practices include calculating metrics, generating confusion matrices, and creating saliency maps.