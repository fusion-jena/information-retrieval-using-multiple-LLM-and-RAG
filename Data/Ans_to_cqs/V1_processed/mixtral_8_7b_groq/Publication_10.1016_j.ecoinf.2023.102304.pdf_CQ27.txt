Based on the provided context, there is no information about the process followed to deploy a trained deep learning model, such as model serialization or platform selection. The context mainly focuses on the optimization of parameters for detecting forest disturbances using remote sensing data and indices.

However, I can provide a general process that is typically followed to deploy a trained deep learning model:

1. Model Serialization: Once the deep learning model is trained and validated, it is important to save the model's architecture and learned parameters so that it can be easily loaded and used for making predictions on new data. Model serialization involves saving the model as a file (or a set of files) on disk. Common formats for model serialization include JSON, YAML, and protocol buffers.

2. Platform Selection: The next step is to choose a platform for deploying the model. The choice of platform depends on various factors such as the required latency, throughput, scalability, and security. Some popular platforms for deploying deep learning models include local machines, virtual machines, containers, and cloud services (e.g., AWS SageMaker, Google Cloud AI Platform, and Microsoft Azure Machine Learning).

3. Model Serving: Once the model is deployed on the chosen platform, it needs to be served so that it can receive input data, process it, and generate output predictions. Model serving involves creating an API endpoint that accepts input data in a specific format and returns the predicted output. There are several libraries and frameworks available for model serving, such as TensorFlow Serving, TorchServe, and Clipper.

4. Monitoring and Maintenance: After the model is deployed and serving predictions, it is important to monitor its performance and maintain it to ensure that it continues to provide accurate predictions. Monitoring involves tracking various metrics such as prediction accuracy, latency, and throughput. Maintenance involves updating the model with new data, retraining the model periodically, and fixing any bugs or issues that arise.

Therefore, while the provided context does not provide information on the specific process followed to deploy a deep learning model, the above steps provide a general idea of the process involved in deploying a deep learning model.