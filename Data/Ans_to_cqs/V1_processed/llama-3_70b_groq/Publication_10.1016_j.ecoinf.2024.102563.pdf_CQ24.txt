Unfortunately, the provided context does not explicitly mention strategies for handling randomness in the deep learning pipeline, such as random seed values. The context primarily focuses on digital soil mapping, remote sensing, and image classification using various machine learning algorithms, including artificial neural networks, random forests, and support vector machines. 

However, in general, handling randomness in deep learning pipelines is crucial to ensure reproducibility and consistency of results. Some common strategies employed to handle randomness include:

1. Fixing the random seed value: This involves setting a fixed random seed value at the beginning of the experiment to ensure that the same sequence of random numbers is generated every time the code is run.
2. Using reproducible random number generators: Some deep learning frameworks, such as TensorFlow, provide reproducible random number generators that can be used to generate the same sequence of random numbers across different runs.
3. Averaging results over multiple runs: This involves running the experiment multiple times with different random seed values and averaging the results to reduce the impact of randomness.

It is essential to note that these strategies are not explicitly mentioned in the provided context, and I am providing general information on handling randomness in deep learning pipelines.