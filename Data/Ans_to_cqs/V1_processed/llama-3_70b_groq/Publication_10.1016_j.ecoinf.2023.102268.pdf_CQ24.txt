Unfortunately, the provided context does not explicitly mention strategies employed to handle randomness in the deep learning pipeline, such as setting a random seed value. The context primarily focuses on the application of a pre-trained ResNet-50 convolutional neural network (CNN) for feature extraction and a support vector machine (SVM) classifier for signal classification. It discusses the data preparation, feature extraction, and classification workflows, but does not delve into the specifics of handling randomness in the pipeline.

However, it is worth noting that the context does mention techniques like cross-validation (10-fold, in this case) to evaluate the performance of the classification model and define a score-to-posterior-probability transformation function. This suggests that the authors are aware of the importance of mitigating overfitting and ensuring the robustness of their model, but the specific strategies for handling randomness are not discussed.

In general, deep learning pipelines often employ techniques like setting a random seed value, data augmentation, and ensemble methods to handle randomness and improve model robustness. However, these strategies are not explicitly mentioned in the provided context.