Unfortunately, the provided context does not explicitly mention strategies employed to handle randomness in the deep learning pipeline, such as random seed value. The context primarily focuses on the application of deep learning in agricultural pest recognition, specifically using Faster R-CNN, and discusses various related topics like cloud computing, smart agriculture, and comparative studies of machine learning and deep learning techniques.

However, in general, handling randomness in deep learning pipelines involves techniques like:

1. Fixing the random seed: Setting a fixed random seed value ensures reproducibility of results and helps in debugging.
2. Data shuffling: Shuffling the training data can help reduce the impact of randomness in the model's performance.
3. Ensemble methods: Combining the predictions of multiple models trained with different random seeds can improve the overall model's robustness.
4. Hyperparameter tuning: Performing hyperparameter tuning using techniques like grid search, random search, or Bayesian optimization can help find the optimal hyperparameters that are less sensitive to randomness.

Since these strategies are not mentioned in the provided context, I cannot provide a more specific answer.