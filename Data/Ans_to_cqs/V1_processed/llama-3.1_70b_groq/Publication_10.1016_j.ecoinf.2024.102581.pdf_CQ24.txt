The provided context does not explicitly mention the use of random seed values or strategies to handle randomness in the deep learning pipeline. However, it does mention the use of data augmentation techniques to cover all possible cases that might occur in the real world. The applied data augmentation techniques include:

* Random rotation
* Random cropping
* Random flipping
* Random color jittering
* Random noise addition

These techniques are used to augment the data during the learning phase of the CNN, which helps to ensure that the model is robust to different types of variations in the input data. While this is not directly related to handling randomness in the deep learning pipeline, it does help to reduce the impact of randomness on the model's performance.

It's worth noting that the context does mention the use of a search space of CNN hyperparameters to be explored, which includes a range of values for different hyperparameters. This suggests that the approach may be using some form of random search or grid search to find the optimal hyperparameters, but the exact strategy used to handle randomness is not specified.