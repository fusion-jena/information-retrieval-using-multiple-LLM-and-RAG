Unfortunately, the provided context does not mention strategies for handling randomness in the deep learning pipeline or the use of random seed values. The context appears to be focused on statistical analysis, species distribution modeling, and machine learning applications in ecology and environmental science, but it does not specifically address deep learning or randomness in the pipeline.

However, I can suggest that typically, in deep learning, randomness is handled by setting a random seed value to ensure reproducibility of results. This is often done using libraries such as NumPy or TensorFlow, which allow users to set a seed value for random number generation. Additionally, techniques such as data augmentation, dropout, and ensemble methods can help to reduce the impact of randomness on model performance.

But, I must emphasize that this is not directly related to the provided context, and I'm just providing general information on the topic. If you're looking for specific information on how randomness is handled in the context of the provided references, I'm afraid I don't know.