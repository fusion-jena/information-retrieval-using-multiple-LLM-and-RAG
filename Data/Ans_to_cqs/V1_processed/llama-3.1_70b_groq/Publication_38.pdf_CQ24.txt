Unfortunately, the provided context does not explicitly mention any strategies employed to handle randomness in the deep learning pipeline, such as setting a random seed value. The text primarily focuses on the performance comparison of different algorithms, including CNNFULL, CNNFAST, Random Forest, and commercial systems, in a binary classification problem for detecting bat calls.

However, it does mention the use of a Random Forest baseline, which is a type of ensemble learning method that can help reduce the impact of randomness by averaging the predictions of multiple decision trees. But this is not directly related to handling randomness in the deep learning pipeline.

Therefore, based on the provided context, I do not have enough information to provide a specific answer to the query about strategies employed to handle randomness in the deep learning pipeline.