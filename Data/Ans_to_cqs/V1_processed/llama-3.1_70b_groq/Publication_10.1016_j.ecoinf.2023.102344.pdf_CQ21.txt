The provided context does not explicitly mention the postprocessing steps involved after model training. However, based on the information provided, we can infer some of the postprocessing steps that might have been involved.

The context mentions the use of confusion matrices to evaluate the performance of the models. Specifically, Figure 8 shows the confusion matrices of optimized pre-trained networks with numerical inputs through different models (EfficientNet-B0, ResNet101, MobileNetV2, and InceptionV3). This suggests that confusion matrices were used as a postprocessing step to evaluate the performance of the models.

Additionally, the context mentions the calculation of various metrics such as accuracy, precision, recall, specificity, fall-out, and F1-score. These metrics are typically calculated after model training to evaluate the performance of the models. Therefore, it is likely that metrics calculation was a postprocessing step involved after model training.

There is no mention of saliency maps or any other postprocessing steps in the provided context. Therefore, we cannot confirm whether saliency maps or other postprocessing steps were involved.

In summary, based on the provided context, the postprocessing steps that were likely involved after model training are:

* Confusion matrix calculation
* Metrics calculation (accuracy, precision, recall, specificity, fall-out, and F1-score)

We do not know if saliency maps or other postprocessing steps were involved.