The provided text focuses on the architecture and comparative analysis of different deep learning models for streamflow forecasting. It doesn't delve into specific strategies for handling randomness within the deep learning pipeline. 

However, it does mention the use of:

* **Randomization-based feedforward neural networks:** This suggests the potential use of random initialization of weights and biases, a common technique to introduce randomness in neural networks.
* **Weight_random_range and bias_random_range:** These parameters, likely related to the initialization of weights and biases, indicate a degree of randomness introduced during model construction.

To get a comprehensive answer about randomness handling strategies in this specific pipeline, you would need to consult the original research paper or code implementation referenced in the text.