To monitor the model performance during training, the authors use several strategies. They evaluate the performance of the proposed model, EMViT-Net, using popular performance evaluation indicators such as precision, recall, f1-score, and accuracy. These metrics help determine how well the model classifies images from the EMDS-6 dataset.

For model optimization, they set the learning rate to 0.002 and the batch size to 32. The model is then trained for 100 epochs using the AdamW optimizer and the GELU activation function. This combination of hyperparameters and functions is selected based on their effectiveness with the proposed model and the considered dataset.

Additionally, the authors employ the default loss function, cross-entropy, to calculate the loss of the proposed network. To visualize the progress of the training process, they plot the loss and accuracy curves for both training and validation sets. These graphs provide insights into how well the model learns over time and whether it might suffer from underfitting or overfitting issues.

Overall, the authors implement a comprehensive approach to monitoring the model performance during training, combining various evaluation metrics, careful selection of hyperparameters, and visualization tools to ensure optimal results.