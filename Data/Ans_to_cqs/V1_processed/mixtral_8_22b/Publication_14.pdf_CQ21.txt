After the model training, several postprocessing steps can be performed depending on the specific requirements of the project. Some common postprocessing steps include:

1. Evaluation metrics: Calculating various evaluation metrics such as accuracy, precision, recall, F1 score, etc., to assess the performance of the model. This step involves comparing the predicted labels with the actual labels and calculating these metrics.

2. Confusion Matrix: Creating a confusion matrix to visualize the performance of the model. It shows the number of correct and incorrect predictions made by the model for each class.

3. Saliency Maps: Generating saliency maps to understand which parts of the input data contributed most towards the final prediction. This helps in understanding how the model arrived at its decision.

4. Hyperparameter Tuning: Fine-tuning hyperparameters such as learning rate, regularization parameters, etc., based on the results obtained from the initial training phase.

In the given context, it appears that the authors evaluated their model using a true positive rate and a true negative rate. They also mention varying the acceptance value to trade-off between recall and precision. However, there is no explicit mention of other postprocessing steps like creating a confusion matrix or generating saliency maps. Therefore, we cannot definitively state what postprocessing steps were taken beyond evaluating the model using certain metrics.