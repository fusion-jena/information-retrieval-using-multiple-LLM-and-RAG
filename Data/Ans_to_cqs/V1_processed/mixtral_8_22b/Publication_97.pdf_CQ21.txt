Based on the given context, there isn't explicit information about specific postprocessing steps such as saliency maps, metrics calculation, or confusion matrices. However, it does mention some aspects related to the evaluation and application of the trained model.

After training the convolutional neural network (CNN) with the generated batches of training and validation data, the authors assessed its performance using sub-images generated from image #2 (from Table 1). Additionally, they utilized images #4 and #6 for visualizing and demonstrating the effectiveness of their algorithm. This suggests that the postprocessing steps might involve generating predictions on unseen data and visually inspecting those results to evaluate the model's performance.

Furthermore, the context mentions references to various techniques and resources relevant to deep learning, including understanding the geometry of encoder-decoder CNNs [58], batch normalization [59], dropout regularization [60], and large-scale machine learning frameworks like TensorFlow [62]. These references indicate potential postprocessing methods or tools that could be employed depending on the desired analysis or presentation of the model's output.

In summary, while the exact postprocessing steps aren't explicitly stated in the provided context, one can infer that evaluating the model's performance on new data and potentially employing additional techniques or tools mentioned in the referenced works may constitute part of the postprocessing process.