To address the issue of minority classes during training, the authors implement a strategy in two steps. Firstly, they utilize a function called compute\_class\_weights from the sklearn library in Python. This function computes the weights that should be assigned to each class based on their respective class numbers. Secondly, these computed class weights are then used as input when training the model. This is achieved by setting the class weight parameter using the previously calculated weights. The fit function within sklearn accepts such parameters and applies them during the training process.

Therefore, the strategy implemented to monitor the model performance during training involves utilizing class weights to balance the impact of minority classes. By assigning higher weights to underrepresented classes, the model becomes more sensitive to those classes, reducing bias towards majority classes and improving overall performance.