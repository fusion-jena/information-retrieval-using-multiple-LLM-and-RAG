A Convolutional Neural Network (CNN) is used in this study. The authors propose a CNN model that transforms input images of 512x512 pixels with three color channels into a 2048 feature vector. This feature vector is subjected to classification using a fully connected layer. The softmax function is then employed to convert the input vector into a probability distribution, determining the likelihood for each class. The CNN model is trained using a two-stage process involving a pretrained convolutional part of the network and fine-tuning with smaller learning rates. Data augmentation and dropout techniques are utilized to improve model robustness. The implementation of the CNN classifier is performed using Python programming language, Keras high-level deep learning library, and TensorFlow with GPU execution as the backend engine.