Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Results

We  calibrated  models  for  classification  challenges  using  different  numbers  of  training 
steps, and considered two factors to find optima for training TensorFlow (Khalighifar et al. 
2019): correct identification rate and processing time. As a result, for all challenges except 
Challenge 3, we chose 4000 training steps as an optimum number. For Challenge 3, given 
the number of species (41 species), 8000 training steps proved to be the optimum number. 
The details of results associated with each classification task are as follows:

Challenge 1

We  created  a  confusion  matrix  to  depict  TensorFlow’s  initial  results  with  20  species 
(Fig. 3). The overall correct identification rate was 94.3%. We achieved 100% correct iden-
tification rate for 11, and 90% or above for 17, species. The lowest identification rates were 
for closely-related species Platymantis isarog and P. montanus, with 70 and 75% correct

Funding  No funding was used for this research.

Data  availability  Data  are  publicly  available  via  Cornell  University’s  Laboratory  of  Ornithology  and 
Macaulay Library of Natural Sounds (https ://www.macau layli brary .org).

Compliance with ethical standards 

Conflict of interest  All authors declare that they have no conflicts of interest.

References

Abadi M et al. (2016) Tensorflow: a system for large-scale machine learning. Paper presented at the 12th 

USENIX Symposium on Operating Systems Design and Implementation, Savannah, USA,

1 3Biodiversity and Conservation (2021) 30:643–657 

655

Aide TM, Corrada-Bravo C, Campos-Cerqueira M, Milan C, Vega G, Alvarez R (2013) Real-time bioacous-

tics monitoring and automated species identification. PeerJ 1:e103

Araya-Salas M, Smith-Vidaurre G (2017) warbleR: an R package to streamline analysis of animal acoustic 

signals. Methods Ecol Evol 8:184–191

647

Model architecture

Convolutional neural networks (CNNs) are a subset of DNNs that are specialized for image 
classification  tasks  and  pattern  recognition.  One  of  the  main  advantages  of  CNNs  is  the 
ability to perform automated feature extraction, eliminating the need for hand-crafted fea-
ture  extraction.  CNN  architecture  is  built  on  three  types  of  layers:  (1)  convolutional  lay-
ers,  which  are  the  most  important  because  they  apply  hierarchical  feature  extraction  and 
decomposition  of  input  images;  (2)  pooling  layers,  which  carry  out  operations  to  reduce 
numbers of parameters and necessary computation; and (3) fully connected layers, which 
perform the actual classification at the end of the pipeline.

other models in challenges involving classifying images into thousands of classes (Russa-
kovsky et al. 2015).

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the postprocessing steps involved after the model training (e.g., Saliency maps, Metrics calculation, Confusion matrix)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
After the model training process, several postprocessing steps can be performed depending on the specific requirements of the project. Some common postprocessing steps include metrics calculation, saliency maps, and creating a confusion matrix.

Metrics calculation involves evaluating the performance of the trained model by calculating various metrics such as accuracy, precision, recall, F1 score, etc. These metrics help in understanding how well the model has learned from the data and its ability to generalize to unseen data.

Saliency maps are visualizations that highlight the regions of an input image that contribute significantly towards the final prediction made by the model. They provide insights into what features the model is focusing on while making predictions.

Creating a confusion matrix is another useful postprocessing step that helps in identifying the strengths and weaknesses of the model. A confusion matrix is a table that summarizes the performance of a classification algorithm based on the true labels and predicted labels. It provides information about the false positives, false negatives, true positives, and true negatives, which can be further used to calculate other evaluation metrics like precision, recall, and F1 score.

In the given context, it is mentioned that a confusion matrix was created to depict TensorFlow's initial results with 20 species. This suggests that creating a confusion matrix was one of the postprocessing steps performed after the model training process. However, it is not explicitly stated whether any other postprocessing steps were carried out.