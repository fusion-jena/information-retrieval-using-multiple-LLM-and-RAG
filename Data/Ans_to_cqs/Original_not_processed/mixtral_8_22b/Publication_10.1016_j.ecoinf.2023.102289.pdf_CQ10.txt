Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

A.1.2. Loading the pre-trained module 

By default, LaDeco employs the deeplabv3 þ resnet269 model. The deeplabv3 part is a semantic segmentation algorithm developed by Google 
(Chen et al., 2018), and Resnet269 is a 269-layer Resnet neural network (Zhang et al., 2020). Users can switch to other pre-trained models as needed 
(Please refer to https://cv.gluon.ai/api/model_zoo.html#). 

A.1.3. Setting the threshold 

The primary function of LaDeco is to calculate the pixel percentage of each landscape element in the image. Users can set a threshold to filter out 

negligible values; for example, values below 1% can be rounded to zero. This threshold is customizable. 

A.1.4. Output format

Cambridge University Press, New York.  

Kolhar, S., Jagtap, J., 2021. Convolutional neural network based encoder-decoder 

architectures for semantic segmentation of plants. Eco. Inform. 64, 101373 https:// 
doi.org/10.1016/j.ecoinf.2021.101373. 

Li, X., Zhang, C., Li, W., Li, Weidong, Li, W., Li, Weidong, Li, Wei, Li, Weidong, Ricard, R. 
M., Meng, Q., Zhang, W., 2015. Assessing street-level urban greenery using Google 
Street View and a modified green view index. Urban Forest. Urban Green. 14 (3), 
675–685. https://doi.org/10.1016/j.ufug.2015.06.006. 

Lin, T.Y., Maire, M., Belongie, S., Hays, J., Perona, P., Ramanan, D., Zitnick, C.L., 2014. 
Microsoft coco: common objects in context. Eur. Conf. Comput. Vis. 740–755. 

Mzoughi, O., Yahiaoui, I., 2023. Deep learning-based segmentation for disease 

identification. Eco. Inform. 75, 102000 https://doi.org/10.1016/j. 
ecoinf.2023.102000. 

Ode, A., Tveit, M.S., Fry, G., 2008. Capturing landscape visual character using indicators:

A.1.1. MXNet platform installation 

LaDeco runs on MXNet's framework, chosen for its wide variety of SS models that meet diverse research requirements. For operation, MXNet 
requires the GluonCV library, which provides pretrained models and computational functions. Both can be installed on their respective websites (see 
https://mxnet.apache.org/ for MXNet installation and https://cv.gluon.ai/ for GluonCV installation). These sites guide the user through automatic 
package installations, thus simplifying the environmental setup. (Note: Users can opt for either CPU or GPU processing. If a GPU is chosen, Cuda and 
Cudnn must be installed in advance to enhance the computation speed.) 

A.1.2. Loading the pre-trained module

2.3. MXNet and GluonCV 

MXNet  is  an  open-source  AI  platform  that  offers  a  comprehensive 
suite of neural network models and functionalities for AI development 
(Chen et al., 2015). MXNet serves as the central computational module; 
when combined with GluonCV, GluonNLP, and GluonTS, it constitutes a 
robust development system. In this study, we used GluonCV to develop 
LaDeco. 

GluonCV offers a set of 25 segmentation models, ten of which have 
been trained on the ADE20K dataset and are therefore well-suited for 
landscape applications (Ho and Ho, 2022). The ADE20K dataset devel-
oped by the MIT Torralba team contributes significantly to the SS field. 
This dataset focused on the recognition of 150 indoor and outdoor ob-
jects  (Zhou  et  al.,  2018a,  2018b).  In  this  study,  55  outdoor  visual 
landscape elements from the ADE20K dataset were used. 

3. Methodology and materials

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What is the code repository link of the deep learning pipeline (e.g., Link to GitHub, GitLab, BitBucket)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Unfortunately, there isn't enough information available to provide the exact code repository link of the deep learning pipeline. However, since LaDeco uses MXNet and GluonCV libraries, one could look into these repositories for more details about the implementation. Here are the links to the official repositories:

* Apache MXNet: <https://github.com/apache/incubator-mxnet>
* GluonCV: <https://github.com/dmlc/gluon-cv>