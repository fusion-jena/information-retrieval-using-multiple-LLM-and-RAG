Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

The graph illustrates the loss while training the neural network 
and the average loss is reduced to 0.54%. That means the model 
is  affected  by  training  data.  A  total  of  4000  iteration  were  run 
and  it  took  14  hours  to  complete  the  training.  The  model 
improved swiftly in terms of precision, recall and mean average 
precision  before  plateauing  after  about  1000  iterations,  and 
around 1000 iterations the loss showed a rapid decline. 

For  each  epoch,  64  images  are  randomly  selected  and  used  to 
train  the  model.  Each  image  is  used  multiple  times  due  to  the 
limited  number  of  samples.  Figure  8,  shows  some  training 
samples, and the number zero indicates the fish class. 

Figure 8. Training samples.

In  order  to  train  the  model,  it  is important to provide not only 
the  class  of  the  object  but  also  the  bounding  box  data  of  the 
object  as  correct  answer.  In  this  context,  we  parsed  the  x,  y 
coordinates, width and height of the fish in the annotation of the 
image’s  dataset.  In  addition,  we  used  data  augmentation  to 
extend the amount of data. 

The  model  has  better  performance  as  number  of  epochs 
increases.  However,  when  number  of  epochs  exceeds  200,  the 
network  seems  to  be  overfitted  to  training  data.  As  a  result, 
Table  I  shows  the  hyper-parameters  used  to  train  and  validate 
the Yolo model. 

Number 
of 
iterations 
4000 

Number 
of 
epochs 
200 

Learning 
rate 

Batch 
size 

Subdivisions 

0.001 

16 

64 

Table 1. Hyper-parameters to train the Yolo model.

Figure 5. A flowchart of training and detection process of 
YOLO-Fish model. 

A  series  of  experiments  were  conducted  to  evaluate  the 
performance  of  the  model.  The  indexes  for  evaluation  of  the 
trained model are defined as follows: 

                           Recall = TP / TP + FN           (3) 
                           Precision = TP / TP + FP       (4)

this  confusion  matrix  Fig.6  shows  all 

Another  evaluation  metric  for  object  detection  which  is,  the 
Average Precision (AP) was also used in this study. It can show 
the  overall  performance  of  a  model  under  different  confidence 
thresholds, and is defined as follows: 

                           AP = ∑n (rn+1 − rn) pinterp (rn+1)     (5) 

With:                   pinterp (rn+1) = max 
                           r˜: r˜≥rn+1, p(r˜) 
Where:               p(r˜) is the measured precision at recall r. 

Figure 6. Confusion matrix relating TP, TN, FP and FN.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What metrics are used to evaluate the performance of the deep learning model (e.g., accuracy, precision, recall)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:

Two main metrics are used to evaluate the performance of the deep learning model: recall and precision. Recall measures the proportion of true positive predictions out of the total actual positives, calculated using the formula TP/(TP+FN). On the other hand, precision measures the proportion of true positive predictions out of the total predicted positives, calculated using the formula TP/(TP+FP). Additionally, another evaluation metric called Average Precision (AP) is employed to assess the overall performance of the model across various confidence thresholds. This metric is computed using the formula ∑n (rn+1 - rn) pinterp (rn+1), where pinterp (rn+1) represents the maximum value of p(r~) such that r~ >= rn+1 and p(r~) denotes the measured precision at recall r.