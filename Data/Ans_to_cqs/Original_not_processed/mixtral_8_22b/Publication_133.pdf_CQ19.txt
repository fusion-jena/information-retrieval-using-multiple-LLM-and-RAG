Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Model Training
Deep learning models
iteratively: generating
learn data
predictions of the training set samples, evaluating them by

3https://github.com/ultralytics/yolov5/tree/v4.0
4https://cocodataset.org/#home

the loss function, and modifying their parameters according
to the loss function’s gradient. Thus,
the loss declines in
each training round (aka epoch), and the model’s annotation
accuracy increases (Figure 2 and Supplementary Figure 1).
As the number of parameters of a typical deep learning
model
is large, overﬁtting is a major concern. A common
(partial) remedy is the use of validation data, which are set-
aside while training, yet their annotations by the models are
the training
monitored. The validation data help to limit
duration, thereby reducing the risk of overﬁtting. In this study
we used 30 epochs per training task, based on our validation
runs (Figure 2).
The data of

1

May 2021 | Volume 9 | Article 600931

fevo-09-600931

May 17, 2021

Time: 21:42

# 2

Gerovichev et al.

Deep Learning for Insect Ecoinformatics

INTRODUCTION

Deep Learning for Insect Ecoinformatics

data points describe the performance attained by a model that
accepts all identiﬁcations, as its Tcs is minimal (0). Such a plot
can guide users in adjusting model parameters to their needs. If
fewer detections are accepted (low recall), precision increases.

Tables 3, 4 illustrate the types of recall (Table 3) and precision
(Table 4) errors made by the model when the conﬁdence
threshold was set to 0.7. The model rarely confused between our
three focal species (gray areas in Tables 3, 4). It made some false
positive predictions, particularly for the class “Psyllaephagus”
(bold text in Table 4, not tagged by the expert but predicted
by the model). Most of the missed predictions, however, were
false negatives (bold text in Table 3, tagged by the expert but not
identiﬁed by the model).

INTRODUCTION

State of the Art: Machine Learning for
Insect Ecoinformatics
Ecologists strive to document and interpret the abundance
and distribution of organisms. Field observations are a major
means to this end, and the observational data that have
accumulated over the decades form a solid basis for our
view of ecosystems. In recent years, technological advances
enabled the solidiﬁcation of observational ecology into a
new scientiﬁc branch, ecoinformatics, which applies big-data
methods to ecological questions (Rosenheim and Gratton, 2017).
Ecoinformatics focuses on curating and mining large databases,
collected over long time periods across multiple locations (see
the GBIF Home Page1). The available data vary in format and
reliability (Gueta and Carmel, 2016) as they originate from
multiple sources, such as long-term ecological monitoring (Lister
and Garcia, 2018), citizen science projects (Hallmann et al., 2017),
or museum catalogs (Short et al., 2018).

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which frameworks are used to build the deep learning model (e.g., TensorFlow, PyTorch)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Based on the given information, it is not explicitly stated which specific frameworks were used to build the deep learning model. However, there is a reference to a GitHub repository for YOLOv5 (You Only Look Once version 5), which is a popular object detection algorithm. This suggests that the authors may have used this framework or similar ones like TensorFlow or PyTorch to develop their deep learning model. Unfortunately, without more explicit details, we cannot definitively determine which frameworks were utilized.