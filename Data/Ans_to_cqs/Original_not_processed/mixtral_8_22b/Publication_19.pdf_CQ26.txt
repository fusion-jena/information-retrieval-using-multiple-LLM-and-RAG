Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

results.  
   This 
However, a number of issues need to be addressed further.  First 
the data is highly unbalanced, and therefore, using SMOTE [23] 
or  similar  data  balancing  techniques  may  help  improve  the 
results further.  Secondly, recent architectures like EfficientNet 
[19]  that  performed  well  in  creating  smaller  networks  can  be 
explored  further.  In  fact,  our  initial  investigations  show  that 
EfficientNetB1 produced performance similar to Inception-V3 
(F1-score  macro  average  =  0.94)  on  this  data  set  as  well  but 
with a much smaller model size (~ 54 MB).  
   This  paper  showed  that  potentially  significant  gains  can  be 
achieved in reducing both the time to reporting, and the effort 
required 
traps.  
Consequently,  using  deep  learning  technologies  on  the  edge 
with  an  IoT  infrastructure  can  potentially  revolutionize  the 
camera  trap  value-chain.  Finally,  since  the  inference  is  being

B.  The Training Regime 
  A 60-20-20 train/validate/test regime was used to randomly 
split the data into training, validation and testing sets.  Table I 
shows the class-wise breakdown. As the Table shows, the data 
was  unbalanced  and  the  ghost  images  accounted  for  40.15% 
percentage  of  the  images.    Similarly,  the  “other”  class 
accounted for only 5.2% of the total number of images.  In this 
first stage, SMOTE [23], oversampling or class weights were 
not used. These techniques will be pursued in a second phase of 
this research.  

TABLE I.  

THE TRAINING BREAKDOWN OF DATA 

Class 
Name 

Ghost 
Goat 
Fox 
Donkey 
Other 
Sheep 
Total 

Training
8,188 
5,767 
3,482 
1,178 
1,062 
723 
20,400 

Number of Images 

Validation 
2,705 
1,923 
1,161 
393 
354 
232 
6,768 

Testing  Total
2,754 
1,923 
1,161 
393 
354 
231 
6,816 

13,647 
9,613 
5,804 
1,964 
1,770 
1,186 
33,984 

%
40.15 
28.28 
17.07 
5.77 
5.20 
3.48 
100

TABLE II.  

HYPERPARAMETERS DETERMINED USING GRID SEARCH 

Model Name 

Inception-V3 
MobileNet-V2 
ResNet-18 
DenseNet-121 

Batch 
Size 
48 
32 
32 
16 

Learning 
Rate 
0.05 
0.01 
0.005 
0.001 

Parameters 
# of 
Epochs 
75 
100 
150 
100 

Input Image Size 

299 (cid:3400) 299 (cid:3400) 3 
224 (cid:3400) 224 (cid:3400) 3 
224 (cid:3400) 224 (cid:3400) 3 
224 (cid:3400) 224 (cid:3400) 3 

C.  Results 

  As  Table  III  show  all  models  performed  reasonably  well 
with macro-F1 averages above 91%. Because the models are to 
be deployed on IoT edge devices, the size of each model is an 
important  consideration.  As  Table  III  shows 
the  best 
performing model was Inception-V3 with a macro Average F1 
score of 0.93, and the smallest size of 175 MB.   

TABLE III.  

BEST RESULTS FOR EACH NN ARCHITECTURE 

Model 

InceptionV3 
DenseNet-121 
ResNet-18 
MobileNetV2 

Model Size 
(MB) 
175 
446 
480 
507 

Accuracy 

94% 
93% 
92% 
93%

Keywords—deep  learning,  transfer  learning,  convolutional 
neural  networks,  animal  classification,  camera  trap,  wildlife 
monitoring, edge computing, TensorFlow lite, raspberry pi, IoT 

I.  INTRODUCTION

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What techniques are used to address data bias during preprocessing of the deep learning pipeline (e.g., Stratified splitting, oversampling, undersampling, Diverse data collection)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The authors of the study acknowledge that their dataset is highly unbalanced, which could lead to biased results. To mitigate this issue, they propose several techniques such as SMOTE (Synthetic Minority Oversampling Technique), oversampling, or class weights. However, these techniques have not been implemented yet and will be explored in future work. Additionally, the authors mention that they used a 60-20-20 train/validate/test split regime to divide the data randomly into training, validation, and testing sets. They also provide a table showing the class-wise breakdown of the data, highlighting the imbalance between classes. Although the authors do not explicitly state that they use stratified sampling, it can be assumed that they did so based on the information provided about the random split and the class-wise distribution of the data. Overall, while the authors recognize the importance of addressing data bias, they have not fully implemented any specific technique to tackle this issue in their current study.