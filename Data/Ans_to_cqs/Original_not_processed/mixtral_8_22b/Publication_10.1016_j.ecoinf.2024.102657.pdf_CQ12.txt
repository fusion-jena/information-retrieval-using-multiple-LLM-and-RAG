Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

2.2.1. CNN structure 

A CNN is a type of neural network commonly used for image clas-
sification  which  includes  convolutional  layers  within  its  architecture. 
Each  convolutional  layer  applies  a  2-dimensional  convolution  of  the 
input  image or  feature  matrix by  a  collection  of learned  kernels.  The 
kernels are matrices containing learned weights of the network, whose 
size  are  typically  small  relative  to  the  size  of  the  input  images.  For 
example, many convolutional layers use a kernel of size 3 × 3. For each 
kernel, the convolution operation computes the dot product between the

grams, and created the metadata .csv file necessary for training the CNN 
and k-NN. Identical in structure to the metadata file outlined above, this 
file contained the metadata for the training set as opposed to the met-
adata for the entire dataset. 

No additional preprocessing was applied to the spectrograms as the 
goal was to do the least amount of preprocessing possible in order to 
demonstrate  the  power  of  human-machine  teaming.  Further,  when 
assessing the accuracy of the CNN on noise-filtered data versus raw data, 
the accuracy levels were similar: after 10 trials, the CNN’s accuracy on 
the  filtered  data  averaged  to  99.22%  and  the  accuracy  on  the  non- 
filtered data averaged to 99.25%.

Additionally,  we  created  a  metadata  .csv  file  that  listed  all  of  the 
necessary classification information for training the CNN and k-NN . The 
.csv file had five columns. The first, dialect_folder, listed the file path to 
the folder containing the bird song. Each folder was labeled with the 
dialect type and the year it was collected, for example, “ABLA_2022”. 
Note, each folder name contained the label of the songs inside, as this 

EcologicalInformatics82(2024)1026572B. Story et al.

Fig. 1. Architecture for the DialectDecoder pipeline. The user inputs the ∼2 s song clips and the location data from a metadata file into the system (Input). Then, 
DialectDecoder prepares the labeled data for processing (Preprocess). Next, the program trains the CNN and k-NN (Train) to classify unknown songs. Then, Dia-
lectDecoder classifies or prompts the user to classify new songs the program has not seen before (Classify). Finally, after human classification has been completed, the 
program adds in the user classified songs to the dataset for retraining (Retrain) and retrains the networks with the new data. 

Fig. 2. Example spectrograms of the 9 different dialects.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What type of deep learning model is used in the pipeline (e.g., CNN, RNN, Transformer)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The pipeline uses a Convolutional Neural Network (CNN) as the deep learning model. This is evident from several parts of the given text. Firstly, the text explicitly mentions that "a CNN is a type of neural network commonly used for image classification." Secondly, the process of creating a metadata.csv file for training the CNN and k-NN further confirms the use of a CNN. Lastly, the figure caption for Figure 1 also refers to the training of a CNN in the DialectDecoder pipeline. Therefore, based on these references, it can be concluded that the pipeline employs a CNN as the deep learning model.