Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

CVPR 770–778 (2015).

 29.  Zagoruyko, S. & Komodakis, N. Wide residual networks. arXxiv:1605.07146 (2017).
 30.  Szegedy,  C.,  Vanhoucke,  V.,  Ioffe,  S.,  Shlens,  J.  &  Wojna,  Z.  Rethinking  the  inception  architecture  for  computer  vision. 

arXxiv:1512.00567 (2015).

 31.  Tan, M. et al. MnasNet: Platform-aware neural architecture search for mobile. arXxiv:1807.11626 (2019).
 32.  Deng, J. et al. ImageNet: A large-scale hierarchical image database. in 2009 IEEE Conference on Computer Vision and Pattern 

Recognition 248–255 (2009).

 33.  Hernández-García, A. & König, P. Further advantages of data augmentation on convolutional neural networks. arXxiv:1906.11052 

11139, 95–103 (2018).

 34.  Fard, F. S., Hollensen, P., Mcilory, S. & Trappenberg, T. Impact of biased mislabeling on learning with deep networks. in 2017 

International Joint Conference on Neural Networks (IJCNN) 2652–2657 (2017).

information passes through the end of the network. (1) ResNet-10128 was proposed to address this problem by 
using skip connections that allow useful layer output to pass over groups of layers (or residual blocks) and thus 
penetrate much further into deep networks. (2) Wide-ResNet-10129, on the other hand, is wider but shallower 
than ResNet-101. This difference in architecture allows information to more easily pass through the network 
while providing a greater number of channels to maintain performance. (3)  InceptionV330 has fewer layers but 
achieves  greater  computational  efficiency  by,  for  example,  using  factorized  convolution,  which  breaks  down 
channels into simpler linear sequences while maintaining spatial context within the image. (4) MnasNet-A131 
was designed to be faster for mobile devices and thus has the fewest layers of the models compared here. The

Scientific Reports |         (2021) 11:7580  | 

https://doi.org/10.1038/s41598-021-87210-1

4

Vol:.(1234567890)www.nature.com/scientificreports/Model

#Params 
(million)

Model speed 
(ms)

Top-1 accuracy Top-2 accuracy Top-3 accuracy Top-4 accuracy Top-5 accuracy Macro recall

Wide-ResNet101 124.9

InceptionV3

ResNet101

MnasNet-A1

24.0

42.6

1.0

5.46

3.34

3.33

3.28

0.9171

0.9162

0.9133

0.8579

0.9627

0.9610

0.9633

0.9335

0.9782

0.9767

0.9787

0.9609

0.9850

0.9834

0.9852

0.9730

0.9897

0.9882

0.9892

0.9814

0.8552

0.8519

0.8499

0.7689

Macro 
precision

0.8831

0.8881

0.8740

0.8250

by class sample size. We used the SGD (stochastic gradient descent) optimizer with an initial learning rate of 
0.01 for all models except MansNet, which was initially set at 0.1. The learning rate was reduced by a factor of 
10 after steps of 30 epochs. We used batch normalization and models were trained for 150 epochs using Nvidia 
Tesla K80 or P100 GPUs.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Where is the code repository of the deep learning pipeline available (e.g., GitHub, GitLab, BitBucket)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The given context does not provide any direct information about where the code repository of the deep learning pipeline is available. It only provides details about various deep learning architectures such as ResNet-101, Wide-ResNet-101, InceptionV3, and MnasNet-A1, along with their respective parameters, model speeds, top-k accuracies, macro precision, and macro recall. Therefore, it is not possible to determine from the given context where the code repository of the deep learning pipeline is located.