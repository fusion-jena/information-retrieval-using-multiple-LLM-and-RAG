Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

2.5. Description of hyperparameters and training aspects 

The  five  detection  models  were  trained  using  a  manually  labeled 
image dataset for alate detection. After conducted initial computational 
experiments with different combinations of epochs of 300, 400 and 500 
with batch sizes of 8, 16, and 32, it was determined that the optimal 
hyperparameters for our training were 400 epochs with a batch size of 8 
and were constant when comparing the five detection models using 640 
× 640, and 1280 × 1280 pixels input resolutions on each model type. 
The batch defines the number of samples to be worked through before 
moving on to update the internal model parameters (Radiuk, 2017). The 
epoch  number  used  in  training  determines  the  number  of  times  the 
detection model processes the dataset dedicated to training the model 
(Brownlee,  2018).  The  computer  infrastructure  used  for  training 

2.6. Evaluation metrics of the trained models

advance  and  standardize  sampling  strategies  and  pest  monitoring  in 
sorghum in general, the primary objective of this research is to develop a

Usually,  growers  or  entomologists  manually  monitor  pests  using 
morphology keys, pest guides, and images to match key characteristics 
with  common  genera  and  species  names  reported  in  the  literature 
(Bishop and Hutchings, 2011). However, using machine learning, and 
specifically, deep learning approaches, has the potential to expedite this 
important component to the monitoring process by automating several 
tasks using imagery (Grijalva et al., 2023a; Grijalva et al., 2023b; Wang 
et al., 2023). Species detection and classification of organisms found in 
production sorghum fields are common tasks during standard scouting 
events  or  bouts.  Machine  learning  can  automate  these  tasks  with  the 
slightest  use  of  labor  and  time  (Chen  et  al.,  2021).  Many  traditional 
machine  learning  algorithms  have  been  used  to  classify  pests;  these 
include  the  Normal  Bayes  classifier  (a.k.a.,  Naïve  Bayes  classifier),  K

2.7. Web application development 

In order to allow researchers and stakeholder users to interact and 
use  our  best  trained  model  to  detect  alates  on  sorghum  leaves,  we 
created and deployed a web application (Fig. 3). This application allows 
a user to upload images of sorghum leaves, then the model will process 
the  images  within  the  backend  of  the  application.  Once  images  are 

EcologicalInformatics80(2024)1025403I. Grijalva et al.                                                                                                                                                                                                                                 

Fig. 2. Examples of training images at 1280 × 1280 pixels input resolution (A, B, C, D) with annotations of alates and augmentation techniques using the cloud-based 
Roboflow environment (Dwyer and Nelson, 2022).

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "How are the hyperparameters of the model optimized (e.g., grid search, random search)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
After conducting initial computational experiments with different combinations of epochs of 300, 400, and 500 with batch sizes of 8, 16, and 32, it was determined that the optimal hyperparameters for their training were 400 epochs with a batch size of 8. These hyperparameters were kept constant when comparing the five detection models using 640 x 640 and 1280 x 1280 pixels input resolutions on each model type. Although not explicitly mentioned, it appears that the authors may have employed a form of manual grid search or trial-and-error approach to determine the optimal hyperparameters for their model. In a grid search, one would systematically test various combinations of hyperparameter values and select the combination that yields the best performance. Similarly, in a trial-and-error approach, one might iteratively adjust hyperparameters based on observed results until satisfactory performance is achieved.