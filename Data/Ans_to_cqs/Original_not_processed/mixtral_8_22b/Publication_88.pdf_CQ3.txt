Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Table 1. Number of samples in the training, validation and test sets for Amazon database.

Set

Tiles

Available Def.
Samples

Available No-def.
Samples

Balanced Samples
(per Class)

Total Samples

Training

Validation

1, 7, 9, 13

5, 12

2706

963

78,431

39,697

Test

2, 3, 4, 6, 8, 10, 11, 14, 15

40,392

1,675,608

8118

2889

-

16,236

5778

1,716,000

The EF network architecture consisted of three convolutional layers (Conv) including the
Rectiﬁed Linear Unit (ReLU), two Max-pooling layers (MaxPool), and two Fully Connected layers
(FC), with a softmax layer at the end with two outputs, corresponding to “deforestation” and
“no-deforestation” classes. The ﬁlter and output size of each layer are summarized in Table 3.

132456789101112131415Remote Sens. 2020, 12, 910

11 of 28

Table 2. Number of samples in the training, validation and test sets for Cerrado database.

Set

Tiles

Available Def.
Samples

Available No-def.
Samples

Balanced Samples
(per Class)

Total Samples

For training the EF and SN models, we selected the following setup empirically: batch size equal
to 32 with 100 number of epochs, early stopping after 10 epochs with no improvement (over the
validation set) and a dropout rate of 0.2 in the ﬁnal FC layer. Additionally, Adam optimizer was
selected empirically with weight decay equal to 0.9 and learning rate equal to 10−3. As loss function,
we used the binary cross-entropy.

6 of 28

Figure 3. Procedure to train the SVMs ﬁlter bank. Mini-patches are extracted from input patches,
and they are vectorized to compose the training set of SVMs.

2.3.2. Training the SVMs Filter Bank

After the global training set is built, m subsets of N random selected samples are created to train
m SVMs ﬁlters. These m subsets are composed of n samples per class, which are randomly selected
from the global training set. The weights of the SVMs ﬁlters are learned using a conventional forward
supervised learning layer by layer in a greedy fashion. To make the most of available training samples
and to avoid data duplication in the subsets, in our study, the value of n was set to the ratio between
the number of training samples (N) and the amount (m) of SVM ﬁlters.

2.3.3. Generation of Feature Maps

Layer

Filter Size Output Size

Parameters

Input
Conv1
MaxPool1
Conv2
MaxPool2
Conv3
MaxPool3
Total params
Treinable params

-
3 × 3
1 × 1
3 × 3
1 × 1
3 × 3
1 × 1
-
-

15 × 15 × 16
13 × 13 × 12
11 × 11 × 12
9 × 9 × 12
7 × 7 × 12
5 × 5 × 12
3 × 3 × 15
-
-

-
1740
-
1308
-
1308
-
4356
4356

The buffer of both references was obtained applying the morphological dilation, using as
structuring elements a disk of radius 2. This operation expanded the boundaries of the deforested
polygons. Then, a difference between the dilated and original images was performed, resulting in the
outer edge, and the patches with the central pixel in these regions were not considered for training,
validation or test.

Remote Sens. 2020, 12, 910

13 of 28

2.6. Inﬂuence of the Number of Training Samples

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the data annotation techniques used in the deep learning pipeline (e.g., bounding box annotation, instance segmentation)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Based on the given information, it appears that the authors did not explicitly mention any specific data annotation techniques used in their deep learning pipeline. However, considering the nature of the problem being addressed - detecting deforestation in satellite imagery - it can be inferred that some form of semantic segmentation might have been employed. Semantic segmentation involves assigning a label or category to every pixel in an image, making it suitable for identifying areas affected by deforestation.

In this case, the dataset consists of tiles labeled as either 'available def.' (presumably indicating deforestation) or 'available no-def.' (indicating no deforestation). It seems likely that the authors would have used these labels to create pixel-wise masks for supervised learning purposes. Unfortunately, without explicit confirmation from the paper, one cannot definitively state what type of data annotation technique was utilized.