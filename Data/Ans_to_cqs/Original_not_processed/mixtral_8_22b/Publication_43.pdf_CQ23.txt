Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Deep CNNs, such as ResNet and GoogLeNet, are generally trained based on the prediction loss
minimization. Let x and y be the input images and corresponding output class labels, the objective of
the training is to iteratively minimize the average loss deﬁned as

J(w) =

1
N

N
∑
i=1

L( f (w; xi), yi) + λR(w)

(1)

This loss function measures how different is the output of the ﬁnal layer from the ground truth.
N is the number of data instances (mini-batch) in every iteration, L is the loss function, f is the
predicted output of the network depending on the current weights w, and R is the weight decay with
the Lagrange multiplier λ. It is worth mentioning that in the case of GoogLeNet, the losses of the

Remote Sens. 2017, 9, 1220

6 of 22

two auxiliary classiﬁers are weighted by 0.3 and added to the total loss of each training iteration.
The Stochastic Gradient Descent (SGD) is commonly used to update the weights.

wt+1 = µwt − α∆J(wt)

(2)

,

recall =

True Positives
True Positives + False Negatives

,

F1 measure = 2 ×

precision × recall
precision + recall

and

5.1. Finding the Best CNN-Based Detector

For the experiments with GoogLeNet and ResNet-based models, we have used the open source
software library Tensorﬂow ([18]). For training CNNs, the image patches are resized from 80 × 80-pixels
to 299 × 299 by GoogLeNet and to 224 × 224 by ResNet. Such rescaling is due to the fact that the
architecture of all the layers of GoogLeNet and ResNet are adapted according to these input sizes,
independently from the original resolution of the input images.

5.1.1. CNN Training With Fine-Tuning and Data-Augumentation

To improve the accuracy and reduce overfitting we (i) used fine-tuning by initializing the evaluated
models with the pre-trained weights of ImageNet, and (ii) applied data augmentation techniques to
increase the size of the dataset from 100 to 6000 images. In particular, for data-augmentation we applied:

•
•
•
•

In general, ﬁne-tuning the entire network (i.e., updating all the weights) is only used when the
new dataset is large enough, otherwise, the model could suffer overﬁtting especially among the
ﬁrst layers of the network. Since these layers extract low-level features, e.g., edges and color,
they do not change signiﬁcantly and can be utilized for several visual recognition tasks. The last
learnable layers of the CNN are gradually adjusted to the particularities of the problem and
extract high level features.

In this work, we have used ﬁne-tuning on ResNet and GoogleNet. We initialized the used CNNs
with the pre-trained weights of the same architectures on ImageNet dataset (around 1.28 million
images over 1000 generic object classes) ([13]).

In this work, we considered the two most accurate CNNs, ResNet ([42]) and GoogLeNet ([43]).
ResNet won the ﬁrst place on the 2015 ILSVRC (ImageNet Large Scale Visual Recognition Competition
(ILSVRC)) and is currently the most accurate and deepest CNN available. It has 152 layers and
25.5 million parameters. Its main characteristic with respect to the previous CNNs is that ResNet
creates multiple paths through the network within each residual module. GoogLeNet won the ﬁrst
place of the 2014 ILSVRC. GoogLeNet is based on inception v3 and has 23.2 million parameters and
22 layers with learnable weights organized in four parts: (i) the initial segment, made up of three
convolutional layers, (ii) nine inception v3 modules, where each module is a set of convolutional and
pooling layers at different scales performed in parallel then concatenated together, (iii) two auxiliary
classiﬁers, where each classiﬁer is actually a smaller convolutional network put on the top of the

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What measures were taken to ensure the generalizability of the deep learning model (e.g., Diverse dataset, cross-validation, Stratified splitting)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Two primary measures were taken to ensure the generalizability of the deep learning model: fine-tuning and data augmentation.

Firstly, fine-tuning was employed by initializing the evaluated models with the pre-trained weights of ImageNet. This technique allows the model to leverage the knowledge gained from a larger and more diverse dataset, thereby improving its ability to generalize to new datasets. However, it should be noted that fine-tuning the entire network may lead to overfitting if the new dataset is small. Therefore, only the last learnable layers of the CNN were gradually adjusted to the specific task while keeping the first layers intact since they extract low-level features that remain consistent across various visual recognition tasks.

Secondly, data augmentation techniques were applied to increase the size of the dataset from 100 to 6000 images. These techniques included random rotations, horizontal flips, vertical flips, and zoom ranges. By artificially expanding the dataset, the model becomes exposed to a wider range of variations, which enhances its capacity to generalize well to unseen data.

These strategies collectively contribute to ensuring the robustness and adaptability of the deep learning model, enabling it to perform effectively even when presented with previously unobserved examples.