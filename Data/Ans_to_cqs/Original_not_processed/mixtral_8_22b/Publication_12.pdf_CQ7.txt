Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

We further improved Waveman by modifying BatNet and opti-
mizing parameter setting of batch size. We add new kind of BNorm
layers behind the 22 convolutional layers to prevent overfitting when
we trained models using BatNet (Fig. 2C). Therefore the model
“learned” to generalize from a trend in both “known” and “unknown”
datasets rather than to maximize the performance on the “known”
datasets (usually called training datasets, Ioffe and Szegedy, 2015).
Computers can only train with small volumes of images at once as they
have too little Random Access Memory or Graphic memory. Batch size
was set to limit the image number. In this study, we set a large batch
size equal to 128, which means training with 128 images for each
iteration.

size of 256*256 pixels were converted to 64*64 pixels to save training
time and reduce high memory graphics use. The size-reduced images
packaged into two datasets: training dataset with 85% of images
(111,244/130,858) and validation dataset with 15% (19,614/130,858)
using a Python script Making_dataset.py in Waveman. To balance the
image number for all the species, we provided an upper limit for when a
species had too much data (Supplementary information 1, S1). We also
developed a method to increase the number of images for the rare
species (S2), in which signals were rescaled exponentially, and we
shifted the window slightly either side of the call to change background
noise. Both these measures ensure rare species with small image num-
bers will not be under-represented and under-classified relative to
common species (S1), as though we cannot incorporate the same level
as call variation as in common species this measure rebalances the

rate equaled 1e-3 (only a network called ResNet_v2 was set to 1e-5). We
trained a model using the training dataset (incl. 111,244 images) for
50–60 times using Graphic Processing Unit (GPU, Nvidia 1080ti, US)
for two hours and 10 min. After training the model contained refined
parameters and a graph which were saved for the downstream analysis.

2.2. Testing and further refinements of Waveman

We used filtered data (i.e., validation dataset in which 19,614
images were selected) to test different model and taxon bias. Then we
collected audio-files from a corridor for the 15 species to test how to
lower the misidentification and false positives. Finally, we optimized
the BatNet and collected audio from different human and natural
conditions to test the generalization of the model by recording the same
species under different conditions these audio-files are unfiltered and
were directly imported into Waveman.

2.2.1. Comparison of BatNet and other three networks

2.1.4. Training models with the reference library

The network is key to optimizing the parameters in the model using
the reference dataset. The higher the efficiency of extracting acoustic
feature from spectrum images, the higher the accuracy. We built a new
network specifically for the tropical bats (termed BatNet), which was
incorporated into our software Waveman. The BatNet has 22 convolu-
tional layers for extracting useful acoustic features (Simonyan and
Zisserman, 2014) and eight shortcut connections between layers to
avoid the problem of information loss as layer number increases. There
are two key parameter settings of batch size equal to 64, and learning

3

X. Chen, et al.

Biological Conservation 241 (2020) 108269

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the criteria used to split the data for deep learning model training (e.g., train, test, validation)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
In this study, the authors used a total of 130,858 images for their deep learning model training. They divided this dataset into two parts: a training dataset containing 85% of the images (111,244 images) and a validation dataset containing 15% of the images (19,614 images). This division was done using a Python script named Making\_dataset.py within their software Waveman.

To maintain a balanced representation of all species in the dataset, the authors imposed an upper limit on the number of images per species if it had too many images. Additionally, they developed a method to augment the number of images for rare species by rescaling signals exponentially and shifting the window around the calls to alter the background noise. These steps ensured that rare species would not be underrepresented compared to more common ones.

The learning rate for most networks was set to 1e-3, except for one network (ResNet\_v2) where it was set to 1e-5. Each model was trained using the training dataset for 50-60 iterations on a GPU (Nvidia 1080ti) for approximately 2 hours and 10 minutes. After training, the resulting models contained refined parameters and graphs, which were then saved for subsequent analyses.

For testing purposes, the authors used the validation dataset, which consisted of 19,614 images. They employed this dataset to evaluate various models and assess potential taxonomic biases. Furthermore, they gathered additional audio files featuring 15 species from a corridor to investigate ways to minimize misidentifications and false positives. Lastly, they optimized the BatNet and tested its generalizability by collecting audio recordings of the same species under diverse environmental conditions.