Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

tolerance 
aggregation,  data  redundancy  management, 
handling, licenses of use and data protection, real-time queries on the

MongoDB (Reniers et al., 2019). This solution was implemented inside 
the  DataHarvester  class.  In  the  domain  of  Remote  Sensing,  the  Data-
harvester component is a set of synchronous or asynchronous processes 
which is capable to detect new satellite images from the space agency 
database.  Once  a  new  image  is  found,  the  component  downloads  the 
data  using  the  internal  scripts  (Bellini  et  al.,  2021).  Different  imple-
mentations  of  the  DataHarvester  class  can  target  other  databases, 
ensuring flexibility of use of nasawebservice for different user needs. For 
instance,  a  client  could  use  different  open-source  NoSQL  frameworks 
such as HBase introduced by Google Bigtable, Elasticsearch developed 
by Java on Apache Lucene, or eventually one of the many SQL database 
solutions.  Whichever  storage  solution  chosen  by  the  user,  the  stored 
MODIS data provides support, together with other data types, for agri-

In this framework, several Python solutions have been proposed to 
acquire and ingest remote sensing data. Among high-level interpreted 
programming languages (e.g., R, JavaScript, Ruby, PHP), the general- 
purpose  Python  language  has  seen  terrific  success  in  scientific 
computing,  data  science,  machine  learning,  and  remote  sensing  data 
processing (Raschka et al., 2020). For the satellite data ingestion pro-
cess, several Python packages have been devoted for interfacing with the 
USGSâ€™s Inventory Service API (USGS library), providing a command-line 
interface or a Python API to search and download Landsat Collections 
scenes  (landsatxplore  package,  Forget  et  al.,  2018);  searching,  down-
loading  and  retrieving  metadata  of  Sentinel  satellite  images  from  the 
ESA  Copernicus  Open  Access  Hub  (Sentinelsat  package,  Wille  et  al., 
2017);  downloading,  mosaicking,  and  reprojecting  MODIS  data

chosen between text/csv (i.e., comma-separated values) or application/ 
json format, following the common MIME (Multipurpose Internet Mail 
Extensions) types guidelines (Ned and Borenstein, 1996). A more com-
plete and detailed review of Global Subset methods can be found on the 
Open API documentation page of the web service. On the contrary, the 
Fixed  Sites  APIs  interface,  not  implemented  in  the  current  version  of 
nasawebservice,  provides  data  for  selected  fields  and  flux  towers, 
belonging to a certain research network (e.g., FLUXNET Canada), across 
the world.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What methods are utilized for collecting raw data in the deep learning pipeline (e.g., surveys, sensors, public datasets)? "

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The given context does not explicitly mention the term 'deep learning', but it discusses the collection of remote sensing data, which can be used in various applications including deep learning models. The method described involves utilizing a DataHarvester class within the domain of Remote Sensing. This component consists of synchronous or asynchronous processes capable of detecting new satellite images from a space agency's database. Once detected, the component downloads the data using internal scripts.

Different implementations of the DataHarvester class can target other databases, ensuring flexibility of use for diverse user requirements. Users may choose among various open-source NoSQL frameworks such as HBase, Elasticsearch, or traditional SQL database solutions. Regardless of the chosen storage solution, the stored MODIS data supports multiple data types.

Furthermore, the context mentions several Python solutions designed for acquiring and ingesting remote sensing data. These include USGS's Inventory Service API, landsatxplore package, and Sentinelsat package. These tools provide functionalities like searching, downloading, and retrieving metadata of satellite images from sources like the ESA Copernicus Open Access Hub.

However, the context does not directly address the specific methods employed for gathering raw data through means such as surveys, sensors, or public datasets. Instead, it focuses primarily on obtaining remote sensing data via satellite imagery and related technologies.