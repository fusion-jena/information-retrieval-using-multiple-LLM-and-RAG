Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

0.2672 
1.1551 
0.7954 
0.9286 
1.3280 
0.9879  

helps  the  network  learn  the  probabilities  of  the  values  around  the 
continuous locations of the target bounding boxes (X. Li et al., 2020b). 
Thus, it focuses on the values near a label y, by explicitly increasing the 
probabilities of yi and yi + 1. This metric is used for the bounding box 
estimation. 

Classification loss (cls loss) measures the error in the predicted class 
probabilities  for  each  object  in  the  image  compared  with  the  ground 
truth.  When it is lower, the model is more accurate in predicting the 
class of the objects. This value was computed using a cross-entropy loss 
function (Terven and Cordova-Esparza, 2023).

To determine the ideal training–test split for our model, we used k- 
fold  cross-validation  (k  = 5,  epochs  = 500,  imagesize  = 640).  The 
epochs provide the number of repetitions for training, and the image size 
is  expressed in  pixels. k-fold  cross-validation  (Rodriguez et  al., 2010) 
was used to determine the best training test set for the model. Hereby, 
the data are split into k different training–test sets. The model was not 
trained on the entire dataset but on each training split. The result was an 
investigation of the best data split. Functions of the Python library scikit- 
learn  (scikit-learn  developers,  2023)  were  used  to  split  the  data  and 
investigate the results of each trained model. In addition, YOLO training 
losses and mAP50 values of each model were investigated. The split with 
the  highest  mAP50  value  indicates  the  highest  number  of  correctly 
predicted labels for the model trained on a specific split. We used the

split  data  with  the  highest  mAP50  (0.987)  for  the  prediction  of  our 
model.

Table  7  depicts  the  six  models  in  greater  detail  by  comparing 
different loss training values, which indicate how well the model learned 
during training. The goal of training was to minimize the loss value. The 
YOLO loss function was divided into three parts (Zafar et al., 2018). 

The box loss is a regression loss that measures the error in the pre-
dicted bounding box coordinates and dimensions relative to the ground 
truth. When the value is lower, the bounding boxes are more accurate (Li 
et al., 2023; Wang et al., 2023). This value is computed by YOLO using 
Intersection  over  Union  (IoU)  (Zheng  et  al.,  2016)  and  distributional 
focal  loss  (DFL)  (X.  Li  et  al.,  2020b).  The  IoU  measures  the  distance 
between the ground truth and the actual box (Zheng et al., 2016). DFL

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What optimization techniques are applied in the deep learning pipeline (e.g., SGD, Adam)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Based on the given information, there isn't any explicit mention of specific optimization techniques such as Stochastic Gradient Descent (SGD), Adam, or others being used in the deep learning pipeline. However, some insights can be derived from the context provided.

For instance, the text mentions that the model was trained for a certain number of epochs, which suggests that some form of gradient descent optimization technique might have been employed during the training process. Epochs refer to one complete pass through the entire training dataset, and they are typically associated with iterative optimization methods like gradient descent.

Moreover, the use of a cross-entropy loss function for classification loss computation implies that the model could potentially be optimized using backpropagation, which is often paired with stochastic gradient descent or other similar optimization algorithms.

However, without direct evidence stating the exact optimization techniques used, it would be speculative to definitively claim that techniques like SGD or Adam were utilized in this case. Therefore, based on the provided context, it cannot be confirmed what optimization techniques were applied in the deep learning pipeline.