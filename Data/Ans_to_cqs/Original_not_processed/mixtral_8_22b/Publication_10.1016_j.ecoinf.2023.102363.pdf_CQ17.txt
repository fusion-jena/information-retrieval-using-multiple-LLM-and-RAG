Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

2.2. Model fine-tuning 

To  fine-tune  the  base  model  with  Gulf  of  Mexico  data  the  feature 
extractor remains frozen. Models are trained with the same parameters 
as the base model but we use a cyclical learning rate of 0.0004 and is set 
to run for 50 epochs, with early stopping set to deploy if the validation 
loss does not improve within 10 epochs. A dropout rate of 0.2 is used 
during  fine-tuning,  and  DropConnect  is  employed.  Drop  out  layers 
randomly  discard  the  output  of  the  hidden  nodes  during  training, 
DropConnect randomly discards the input of the hidden layer (Sun et al., 
2022). 

2.2.1. Data acquisition

The model is constructed using the EfficientNet B0 network (Tan and 
Le, 2019) which had been trained for generic image classification. The 
EfficientNet feature extraction layers are frozen (transfer learning) with 
only the weights of the final dense classification layers updated during 
training.  Training  was  conducted  within  the  Google  Collaboratory 
‘Colab’  platform  (Bisong,  2019),  using  the  Tesla  K80  GPU,  accessed 
through  cloud  computing.  An  Adam  optimizer  was  used  to  control 
gradient descent during training (Kingma and Ba, 2014), with parame-
ters set to: learning rate of 0.001, decay factor of 0.75 and a step size of 

EcologicalInformatics78(2023)1023632E.L. White et al.

Nazari, Z., Nazari, M., Sayed, M., Danish, S., 2018. Evaluation of class noise impact on 
performance of machine learning algorithms. IJCSNS Int. J. Comput. Sci Netw. 
Secur. 18, 149. 

Neal, B., Mittal, S., Baratin, A., Tantia, V., Scicluna, M., Lacoste-Julien, S., Mitliagkas, I., 
2018. A modern take on the bias-variance tradeoff in neural networks. arXiv 
preprint:1810.08591.  

Oswald, J.N., Rankin, S., Barlow, J., Oswald, M., Lammers, M.O., 2003. Realtime call 

classification algorithm (ROCCA): software for species identification of 26 delphinid 
whistles. Detection, classification and localization of marine mammals using passive 
acoustics, 2013 (10). 

Pace, F., White, P., Adam, O., 2012. Hidden Markov modeling for humpback whale 

(Megaptera novaeanglie) call classification. In: Proceedings of Meetings on Acoustics 
ECUA2012. The Journal of the Acoustical Society of America, p. 17. 

Belgith, E.H., Rioult, F., Bouzidi, M., 2018, November. Acoustic diversity classifier for

(Fig.  1),  considering  its  performance  in  the  new  environment  with 
limited re-training. Starting with a pre-trained model (EfficientNet B0, 
Tan and Le, 2019), we freeze the networks original feature extractor. We 
then train fully connected layers, which operate on the output of the 
EfficientNet  B0  network,  to  classify  the  PAM  data  frames  into  the 
specified sound source classes. Audio data is input to the network in a 
novel  spectrogram representation (White  et  al.,  2022). Networks  pre- 
trained on image data have been proven to perform well on classifica-
tion  tasks  using  spectrograms  as  image  input,  transformed  from  raw 
audio data (Allen et al., 2021; Shiu et al., 2020; Stowell, 2022). In this 
work  we fine-tune the  parameters  of the fully connected layers  itera-
tively  on  small  batches  of  training  data  acquired  from  a  new  region. 
Through  an  experimental  approach  to  retraining  we  demonstrate  the

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the regularization methods used to prevent overfitting in the deep learning pipeline (e.g., dropout, L2 regularization)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Two regularization methods were used to prevent overfitting in the deep learning pipeline: dropout and DropConnect. Dropout randomly discards the output of hidden nodes during training, while DropConnect randomly discards the input of the hidden layer. These techniques help to reduce co-adaptation between neurons and improve generalization by introducing randomness during training. Additionally, early stopping was also employed, where training would stop if the validation loss did not improve within 10 epochs. This helps to avoid overfitting by preventing the model from continuing to learn when it has already started to fit too closely to the training data.