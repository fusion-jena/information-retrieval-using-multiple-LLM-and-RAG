Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

(cid:0) 3, 10

(cid:0) 4;  

The following configuration optimized the performance of the model 
and was accordingly adopted for analysis: Adam solver (Kingma and Ba, 
(cid:0) 4,  constant  learning 
2014),  10 neurons  per  hidden  layer, alpha  = 10
rate, and rectifier activation function, also called Rectified Linear Unit 
(ReLU) activation function, defined as: 

(

)

{

ReLU

k

=

k, if k > 0;
0, if kâ©½0.

(14) 

In the case of the RF, the hyperparameters include the number of 
decision trees in the forest, the maximum depth of the decision tree, the 
number of features considered by each tree when splitting a node, etc. 
This  set  of  hyperparameters  was  tested  using  the  grid  configuration 
shown below:  

1.  Number of decision trees: from 100 to 1000 (in steps of 100);  
2.  Number of features to consider at every split (max features): auto,

sqrt, log2, None;  

3.  Maximum number of levels in decision tree: None, or from 10 to 100 

(in steps of 10);

model (Sowmya et al., 2020). The best model is selected comparing the 
performance scores of all possible combinations of hyperparameters.

EcologicalInformatics76(2023)10213312A. Pagano et al.                                                                                                                                                                                                                                 

Table 5 
Results and model comparison.  

Predictor 

Model name 

Nr. of input features 

Input features 

Multi Layer Perceptron (MLP) 

Random Forest (RF) 

MLP1 
MLP2 
MLP3 
MLP4 
MLP5 
MLP6 
MLP7 
MLP8 
MLP9 
MLP10 
MLP11 
MLP12 

RF1 
RF2 
RF3 
RF4 
RF5 
RF6 
RF7 
RF8 
RF9 
RF10 
RF11 
RF12 

10 
9 
8 
7 
6 
5 
4 
6 
5 
4 
5 
4 

10 
9 
8 
7 
6 
5 
4 
6 
5 
4 
5 
4

This section describes the design and implementation of the exam-
ined ML models. As a starting point, four models were initially tested: 
Linear Regression (LR), Support Vector Machine (SVR), Random Forest 
(RF),  and  Multi-Layer  Perceptron  (MLP).  From  preliminary  results, 
omitted  here  for  the  sake  of  brevity,  only  MPL  and  RF  models  were 
selected  for  their  ability  to  model  the  nonlinear  evapotranspiration 
phenomena. The models were implemented using the scikit-learn library 
(Pedregosa  et  al.,  2011),  an  open-source  ML  library,  for  the  python 
programming language. Furthermore, the code developed in this work is 
released open source to the scientific community (Git Repository, 2023). 
This  will  allow  repeatability  and  ease  future  research  efforts  in  the 
development of environmentally sustainable irrigation solutions. In the 
following, an introduction to Artificial Neural Networks (ANNs) and RF

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What type of deep learning model is used in the pipeline (e.g., CNN, RNN, Transformer)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Based on the given information, it appears that the authors have utilized two types of machine learning models - Random Forest (RF) and Multi-Layer Perceptron (MLP). However, neither of these models falls under the category of deep learning models such as Convolutional Neural Networks (CNN), Recurrent Neural Networks (RNN), or Transformers. Therefore, based on the provided context, there is no indication of any specific deep learning model being used in the pipeline.