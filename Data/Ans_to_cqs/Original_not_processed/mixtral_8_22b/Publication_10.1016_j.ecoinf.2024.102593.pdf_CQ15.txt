Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

DNN  are  algorithms  consisting  of  neurons  arranged  in  successive 
layers that apply computations based on learnable parameters (weights 
and  bias)  and  activation  functions  to  inputs  from  previous  layers, 
through to an output consistent with the training data. Different types of 
layers  (convolutional,  pooling,  flatten,  etc.)  may  combine  in  large 
numbers to create complex algorithms that are difficult to interpret and 
often referred to as ‘black boxes’ (McGinn et al., 2023; Stowell, 2022). It 
is virtually impossible to follow how they use millions of parameters to 
reach a particular decision for any given input. Consequently, there is an 

array of tools and procedures to try to understand some of their inner 
workings. Here, we focus on the improved utilisation of one technique 
referred to as “analysis of embeddings”.

accuracy  limits  that  we  encountered  training  DNN  models  with  the 
detailed-labelled NIPS4Bplus dataset (Bravo Sanchez et al., 2021). We 
drilled down on the results using another high-quality model (BirdNET) 
and  compared  it  to  our  SincNet  trained  models.  For  that,  we  experi-
mented  with  dimensionality  reduction  of  embeddings  and  an  initial 
dimensionality reduction technique (t-SNE). We generated embeddings 
using  the  BirdNET  model  on  a  randomly  selected  40%  sample  of  the

Neural information processing scaled for bioacoustics-from neurons to Big Data. In: 
Proceedings of Neural Information Processing Scaled for Bioacoustics: From Neurons 
to Big Data, 2013. http://sabiod.univ-tln.fr/NIPS4B2013_book.pdf. 

Gupta, Gaurav, Kshirsagar, Meghana, Zhong, Ming, Gholami, Shahrzad, Ferres, Juan 

Lavista, 2021. Comparing recurrent convolutional neural networks for large scale 
bird species classification. Sci. Rep. 11 (1), 17085. https://doi.org/10.1038/s41598- 
021-96446-w. 

He, Kaiming, Zhang, Xiangyu, Ren, Shaoqing, Sun, Jian, 2015. ‘Deep residual learning 

for image recognition’. arXiv. http://arxiv.org/abs/1512.03385. 

Hershey, Shawn, Chaudhuri, Sourish, Ellis, Daniel P.W., Gemmeke, Jort F., Jansen, Aren, 
Moore, Channing, Plakal, Manoj, et al., 2017. CNN Architectures for Large-Scale 
Audio Classification. In: International Conference on Acoustics, Speech and Signal 
Processing (ICASSP).. https://arxiv.org/abs/1609.09430.

We  trained  some  models  from  scratch  using  the  two  datasets 
mentioned  above.  For  NIPS4Bplus  we  used  the  rich  labels  associated 
with the dataset. In the case of BirdCLEF 2020 we relied on automatic 
detailed labels generated with the noise filtering algorithm. We did not 
use species included in the Brazil extract of BirdCLEF 2020 (these are all 
species  that  are  not  included  in  the  classes  of  the  BirdNET-Analyzer 
model)  in  model  training  using  only  the  “complementary  train 
extract”  to allow comparisons of the performance of BirdNET and our 
trained models on unseen classes. Our trained models include a SincNet 
model from our earlier work (Bravo Sanchez et al., 2021) and residual 
network models that we call ResNet152-architecture.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What optimization techniques are applied in the deep learning pipeline (e.g., SGD, Adam)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer: The provided context does not explicitly mention specific optimization techniques such as Stochastic Gradient Descent (SGD) or Adaptive Moment Estimation (Adam) that are commonly used in the deep learning pipeline. However, it can be inferred that optimization techniques were indeed employed during the training process of the mentioned Deep Neural Network (DNN) models. This is because DNN models consist of neurons arranged in successive layers that apply computations based on learnable parameters (weights and bias) and activation functions to inputs from previous layers, through to an output consistent with the training data. These weights and biases are typically adjusted iteratively via backpropagation and gradient descent methods like SGD or Adam to minimize the error between predicted and actual outputs. Therefore, while the exact optimization techniques used in this study remain undisclosed, it is highly probable that similar techniques were utilized.