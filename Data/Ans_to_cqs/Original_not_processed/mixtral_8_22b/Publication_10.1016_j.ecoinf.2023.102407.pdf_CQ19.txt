Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Blondel, M., Prettenhofer, P., Weiss, R., Dubourg, V., Vanderplas, J., Passos, A., 
Cournapeau, D., Brucher, M., Perrot, M., Duchesnay, ´E., 2011. Scikit-learn: machine 
learning in Python. J. Machine Learn. Res. 12, 2825–2830. 

Pejchar, L., Mooney, H.A., 2009. Invasive species, ecosystem services and human well- 
being. Trends Ecol. Evol. 24, 497–504. https://doi.org/10.1016/j.tree.2009.03.016. 
Pham, H., Dai, Z., Xie, Q., Le, Q.V., 2021. Meta pseudo labels. In: Proceedings of the IEEE 

Computer Society Conference on Computer Vision and Pattern Recognition, 
pp. 11557–11567. https://doi.org/10.1109/CVPR46437.2021.01139. 

Phillips, S.J., Dudík, M., 2008. Modeling of species distributions with Maxent: new 

extensions and a comprehensive evaluation. Ecography 31, 161–175. https://doi. 
org/10.1111/j.0906-7590.2008.5203.x.

et  al.,  2021;  Pham  et  al.,  2021).  A  common  approach  is  to  exploit  a 
teacher–student structure in the training process, which refers to use a 
trained teacher model to teach a student model. However, in most cases, 
a single ANN or deep neural network model is used as the teacher model 
to assign labels (Ali et al., 2022; Asghar et al., 2020). When PL based on a 
single-teacher model is used to predict species distributions, the teacher 
model can be easily biased towards specific environmental data, and the 
labeled data by this model may not represent diverse habitat conditions 
of  the  species  and  may  lead  to  overfitting  of  the  student  model.  In 
addition,  predictive  errors  of  a  single-teacher  model  can  accumulate 
during the training process, reducing the general efficiency of PL (Arazo 
et  al.,  2020).  This  can  be  alleviated  by  considering  different  teacher 
models for label generation and using the most promising model among

within the study area for MaxEnt and set up the hyperparameters as in 
Bean et al. (2012). The training settings and hyperparameters used for 
each SDM are described in Table 3.

Pygam (Serv´en and 
Brummitt, 2018) 

Elapid 

Scikit-learn (Pedregosa 
et al., 2011) 

Scikit-learn 

XGBoost (Chen and 
Guestrin, 2016) 
Lightgbm (Ke et al., 
2017) 

Pytorch (Paszke et al., 
2019) 

Pytorch  

matrix (Table 4) that represents the agreement between the observations 
and  model predictions as true  positive (TP), true  negative (TN),  false 
positive (FP), and false negative (FN). To obtain the confusion matrix, 
most SDMs used an arbitrary threshold to convert the continuous output 
(i.e.,  probability)  of  the  model  into  binary  predictions,  such  as  the 
presence or absence of a species. 

Sensitivity represents the ability of a model to precisely infer pres-

ence data: 

Sensitivity =

TP
TP + FN

(1) 

Specificity  indicates  the  ability  of  a  model  to  accurately  identify 

absence data: 

Specificity =

TN
TN + FP

(2) 

The TSS measures the overall predictive performance of the model in 

distinguishing between presence and absence data:

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which frameworks are used to build the deep learning model (e.g., TensorFlow, PyTorch)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:

Two frameworks mentioned in the given context are PyTorch and Scikit-learn. PyTorch is explicitly stated as being used for building the deep learning models, while Scikit-learn is also listed as one of the tools utilized within the research. Other frameworks mentioned include Elapid, Lightgbm, and XGBoost, but these do not directly relate to deep learning models.