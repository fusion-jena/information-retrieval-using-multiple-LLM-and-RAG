Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

5.1. Data augmentation accuracy

A common practice to improve the accuracy of a deep learning
model is to do data augmentation. In this section, we compare the ac-
curacy of the network when data augmentation is included during
training. The compared training variations are the following:

(cid:129) No augmentation. The patches only are resized to 32 × 32 and

normalized.

Fig. 8. Training loss.

Fig. 9. Training accuracy.

Fig. 7. Custom LeNet-5 network for cactus recognition.

135

E. López-Jiménez, et al.

Ecological Informatics 52 (2019) 131–138

Fig. 10. Validation accuracy.

Fig. 12. Normalized confusion matrix.

(cid:129) Vertical and horizontal ﬂip. In addition to the resize and nor-
malization, the patches are ﬂip vertically or horizontally with prob-
ability 0.5. Both ﬂips are independent events.

given the error reported by the loss metric and the contribution of each
parameter to that error (the contribution of each parameter is calcu-
lated by back-propagating the error gradient).

Training a neural network requires to set several hyper-parameters
such as the learning rate, number of epochs and batch size. The learning
rate is a special one since it deﬁnes how much the weights are ‘moved’
to decrease the loss. A bigger one could cause the network not to learn,
on the other hand, a smaller one could require much more steps for
learning. To decrease this issue, we train the network with Adam op-
timizer (Kingma and Ba, 2015), a variant of the stochastic gradient
optimization where the learning rate is adjusted automatically. The rest
of the parameters are set empirically, more details are presented in the
experiments section.

5. Experiments

In this section, we present the experimental characterization of the
proposed approach. The implemented network was trained with Adam
optimizer (Kingma and Ba, 2015) on a Inter Core i7 machine with
NVIDIA GeForce 1080 GPU. The hyperparameters were set as follows:
learning rate 0.01, number of epochs 150, batch size 2500.

5.4. Dataset extension

The proposed approach has shown good performance (accuracy) for
cactus recognition in aerial images. One way to improve the current
accuracy could be to make deeper the current CNN, however, im-
proving the accuracy with a deeper network will tend to memorize the
dataset due to the model capacity (Goodfellow et al., 2016), causing
model overﬁtting. A better improvement to the current work is to in-
clude more examples in the dataset. Such examples should be obtained
under diﬀerent conditions, some variations are diﬀerent daylight con-
ditions or diﬀerent year seasons. Diﬀerent season pictures will provide
a distinctive context because the rainy season changes all valley's ve-
getation.

Fig. 11. Confusion matrix.

Fig. 13. Example of a cactus image. The axes indicate pixel indices.

136

E. López-Jiménez, et al.

Ecological Informatics 52 (2019) 131–138

Fig. 14. Learned kernels and feature maps. The axes indicate pixel indices.

6. Conclusions

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What metrics are used to evaluate the performance of the deep learning model (e.g., accuracy, precision, recall)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The text does not explicitly mention which specific evaluation metrics are used to assess the performance of the deep learning model. However, based on the information given, we can infer that the authors use accuracy as a metric to measure the performance of their model. This is evident from Figures 9 and 10, which display the training and validation accuracies respectively. Additionally, Figure 11 shows a confusion matrix, which is another commonly used method to evaluate classification models. Although not mentioned directly, precision and recall might also have been considered, as they are often used alongside accuracy to gain a comprehensive understanding of a model's performance.