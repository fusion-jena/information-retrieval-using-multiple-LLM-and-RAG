Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Supplementary materials

Suppl. material 1: Notebook used to deﬁne and train the unstained/stained CNN.

Authors:  Paul B. Frandsen, Abel Brown
Data type:  Mathematica notebook
Filename: stained_unstained_RGB256.nb - Download ﬁle (16.96 MB) 

Suppl. material 2: Annotated notebook used to deﬁne and train the unstained/stained
CNN.

Authors:  Paul B. Frandsen, Abel Brown
Data type:  PDF
Filename: stained_unstained_RGB256.pdf - Download ﬁle (6.24 MB) 

Suppl. material 3: Notebook used to deﬁne and train the clubmoss/spikemoss CNN.

Authors:  Paul B. Frandsen, Abel Brown
Data type:  Mathematica notebook
Filename: clubmoss_spikemoss_RGB256.nb - Download ﬁle (5.81 MB) 

 
 
 
 
 
 
Applications of deep convolutional neural networks to digitized natural ...

9

Suppl. material 4: Annotated notebook used to deﬁne and train the clubmoss/
spikemoss CNN

Authors:  Paul B. Frandsen, Abel Brown
Data type:  PDF
Filename: clubmoss_spikemoss_RGB256.pdf - Download ﬁle (2.68 MB)

Table 1. 

Constitutive layers and tensor/vector shapes for the unstained/stained CNN.

Layer

Input

ConvolutionLayer

BatchNormalizationLayer

Ramp (ReLU)

PoolingLayer

ConvolutionLayer

BatchNormalizationLayer

Ramp (ReLU)

PoolingLayer

ConvolutionLayer

BatchNormalizationLayer

Ramp (ReLU)

PoolingLayer

Type

3-tensor

3-tensor

3-tensor

3-tensor

3-tensor

3-tensor

3-tensor

3-tensor

3-tensor

3-tensor

3-tensor

3-tensor

3-tensor

Shape

3×256×256

16×252×252

16×252×252

16×252×252

16×126×126

32×122×122

32×122×122

32×122×122

32×61×61

64×57×57

64×57×57

64×57×57

64×28×28

Applications of deep convolutional neural networks to digitized natural ...

5

ConvolutionLayer

BatchNormalizationLayer

Ramp (ReLU)

PoolingLayer

FlattenLayer

DropoutLayer

LinearLayer

Ramp (ReLU)

LinearLayer

SoftmaxLayer

Output

Table 2. 

3-tensor

3-tensor

3-tensor

3-tensor

vector

vector

vector

vector

vector

vector

class

48×26×26

48×26×26

48×26×26

48×13×13

8112

8112

Deep learning can greatly surpass conventional machine learning by incorporating multi-
layered neural networks capable of processing natural data in their raw form (LeCun et al.
2015).   Deep   convolutional   neural   networks   (CNNs)   are   especially   well   suited   to   image
classiﬁcation and may even achieve superhuman performance (He et al. 2015). Already,
CNNs are playing important roles in healthcare, speech recognition, and driverless cars.
Natural history collections (NHCs) also beneﬁt society in numerous ways, most notably
supporting   public   health,   safety,   and   agriculture   (Suarez   and   Tsutsui   2004).   NHCs   are
likewise fundamental to understanding biodiversity and they underlie studies of evolution,
habitat loss, biological invasion, and climate change. The billions of specimens in NHCs
could   undoubtedly   provide   even   greater   social   and   scientiﬁc   insight,   but   their   data   are

included two convolutional layers and two pooling layers (Table 2; https://doi.org/10.6084/
m9.ﬁgshare.5501716). The code used to deﬁne and train these CNNs can be found in our
Mathematica notebooks (Suppl. materials 1, 3, 2, 4).

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What techniques are used to address data bias during preprocessing of the deep learning pipeline (e.g., Stratified splitting, oversampling, undersampling, Diverse data collection)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The supplementary materials do not explicitly mention any specific techniques used to address data bias during preprocessing of the deep learning pipeline. However, based on common practices in deep learning, some possible techniques include stratified splitting, oversampling, undersampling, and diverse data collection.

Stratified splitting involves dividing the dataset into training and testing sets while maintaining a similar distribution of classes or labels in both sets. This helps prevent overfitting and ensures that the model generalizes well to new data.

Oversampling is a technique where samples from the minority class are duplicated to balance the dataset. Undersampling, on the other hand, involves removing samples from the majority class to achieve a more balanced dataset. Both methods aim to mitigate the effects of imbalanced datasets on model performance.

Diverse data collection refers to collecting a wide range of examples representing different variations within each class. This helps improve the robustness and accuracy of the model when dealing with real-world data.

While these techniques are commonly employed to address data bias, it is essential to note that the choice of method depends on the nature and characteristics of the dataset being used. Without further information about the specific dataset used in this study, we cannot definitively state which techniques were applied.