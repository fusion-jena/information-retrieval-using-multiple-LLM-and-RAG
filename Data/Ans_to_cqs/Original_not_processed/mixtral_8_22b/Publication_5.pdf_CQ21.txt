Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Korea for model training and testing. TensorFlow (https://tensorflow.org (accessed on 24 June 2021)), which is an end-to-end open source platform for DL, was used to develop our species richness estimation model. In developing DL models, there are several hyperparameters that need to be tuned prior to training the model, but there are common sets of rules or heuristics governing parameter tuning. After iterative grid search parameter tuning, using a small subset of our data, 5 hidden layers (ùêáùëó,ùëó=1,2,‚ãØ,5) were used, and the number of neurons (n) in Remote Sens. 2021, 13, 2490

The training process was performed for a number of iterations in which all the training
data were exposed to the network until the loss function reached its minimum value. The
model score reached its maximum after approximately 5000 iterations with a NVIDIA
Titan X GPU (3584 CUDA cores). The number of trainable parameters was 85,569 and the
computational run-time was approximately 4 h with a training batch size of 1024.

Deep learning approaches have shown promising results in many scientiÔ¨Åc applica-
tions [67,68] but do not always guarantee better outcomes [69,70]. Therefore, we compared
the performance of the proposed DL model with a RF regression model as a baseline, since
RF showed reasonable results and is popular in various machine learning applications [71].
To determine the best values of the hyperparameters (number of trees, maximum tree
depths, and the maximum number of features) in the RF model, a grid search was used.

10 of 20

Table 1. Comparison of statistical accuracy metrics between the random forest and deep learning
models.

Model Types

MAE (Mean
Absolute Error)

RMSE (Root Mean
Square Error)

Bias

Correlation

Random Forest
Deep Learning

61.1028
28.8105

78.9512
38.5759

0.5656
10.2055

0.8843
0.9752

Neural Netw. Mach. Learn. 2012, 4, 26‚Äì31.

65. Chollet, F. Deep Learning with R; Manning Publications: Shelter Island, NY, USA, 2018.
66.

Srivastava, N.; Hinton, G.; Krizhevsky, A.; Sutskever, I.; Salakhutdinov, R. Dropout: A simple way to prevent neural networks
from overÔ¨Åtting. J. Mach. Learn. Res. 2014, 15, 1929‚Äì1958.

67. Bhatnagar, S.; Gill, L.; Ghosh, B. Drone image segmentation using machine and deep learning for mapping raised bog vegetation

communities. Remote Sens. 2020, 12, 2602. [CrossRef]

68. Kim, Y.J.; Kim, H.-C.; Han, D.; Lee, S.; Im, J. Prediction of monthly Arctic sea ice concentrations using satellite and reanalysis data

based on convolutional neural networks. Cryosphere 2020, 14, 1083‚Äì1104. [CrossRef]

69. Korotcov, A.; Tkachenko, V.; Russo, D.P.; Ekins, S. Comparison of deep learning with multiple machine learning methods and

70.

71.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the postprocessing steps involved after the model training (e.g., Saliency maps, Metrics calculation, Confusion matrix)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
After the model training, several postprocessing steps can be taken depending on the specific application and goals of the analysis. Some common postprocessing steps include:

1. Model evaluation: This involves calculating various metrics such as mean absolute error (MAE), root mean square error (RMSE), bias, and correlation coefficient to evaluate the performance of the model. These metrics help assess how well the model predicts the target variable and identify any potential biases or errors in the predictions.
2. Visualization: Visualizing the output of the model can provide insights into the patterns and relationships learned by the model. For example, saliency maps can highlight the most important input features contributing to the predicted output. Similarly, confusion matrices can show the distribution of correct and incorrect classifications made by the model.
3. Hyperparameter optimization: Tuning the hyperparameters of the model can improve its performance further. Grid search or other optimization techniques can be employed to find the optimal set of hyperparameters.
4. Ensemble modeling: Combining multiple models can often lead to improved performance compared to individual models. Techniques such as bagging, boosting, or stacking can be applied to create ensembles of models.

In this study, the authors evaluated their deep learning model against a random forest regression model as a baseline. They calculated MAE, RMSE, bias, and correlation coefficients to compare the two models. Additionally, they optimized the hyperparameters of both models using grid search. However, no visualizations or ensemble modeling techniques were mentioned in the paper.