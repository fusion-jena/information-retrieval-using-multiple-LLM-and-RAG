Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Table 4 
Average performance (Avg) and standard deviation (SD) for five trained models. Average precision, recall and F1-score for trained ResNet50 and EfficientNetB3 
(EffNetB3) models modified for multitask learning (MTL) with transfer learning using pre-trained weights from ImageNet. The models are trained and validated on the 
TLm  dataset. The models ResNet50, EfficientNetB3 are trained without MTL.  

Model 

Level 

ResNet50MTL 
EffNetB3MTL 

ResNet50MTL 
EffNetB3MTL 

ResNet50MTL 
EffNetB3MTL 

ResNet50 
EffNetB3 

L1 Order 
L1 Order 

L2 Family 
L2 Family 

L3 Species 
L3 Species 

Species 
Species 

Avg 

0.990 
0.986 

0.987 
0.984 

0.955 
0.948 

0.955 
0.953 

Precision 

SD (10

(cid:0) 3) 

(1.0) 
(4.4) 

(0.8) 
(3.1) 

(4.3) 
(5.2) 

(3.3) 
(2.5) 

Avg 

0.991 
0.993 

0.986 
0.988 

0.961 
0.966 

0.957 
0.966 

Recall 

SD (10

(cid:0) 3) 

(1.1) 
(0.5) 

(0.9) 
(0.7) 

(9.8) 
(5.1) 

(7.3) 
(2.5) 

Avg 

0.991 
0.989 

0.987 
0.986 

0.957 
0.956 

0.955 
0.959

Appendix C. The training of the models 

The best model with transfer learning was chosen based on the minimum total loss after nine epochs, as seen in Fig. C.5. Note that we observe 
overfitting after nine epochs, where the validation loss starts to increase, although the bias is still very low. The increase is indicated by a higher 
difference between training and validation loss and bias is the loss evaluated on the training dataset. 

Note that the largest variation is 0.6%, which is very similar to the variation of 0.8% when training with different values of α in Fig. B.4. This 

indicates a minimal impact on the change of accuracy for different choices of α. 

References 

An, G., Akiba, M., Omodaka, K., Nakazawa, T., Yokota, H., 2021. Hierarchical deep 

learning models using transfer learning for disease detection and classification based 
on small number of medical images. Scient. Rep. 11 (1) https://doi.org/10.1038/ 
s41598-021-83503-7.

(cid:0) 4 was finally 
chosen after comparing with stochastic gradient descent (SGD) with the 
(cid:0) 4  and learning rate of 
(cid:0) 4, weight decay of 1.0⋅10
momentum of 1.0⋅10
(cid:0) 3. SGD was tested with the parameters as recommended by L. 
1.0⋅10
Smith  (Smith,  2018),  but  achieved  a  1%–2%  decrease  in  accuracy 
compared to using the Adam optimizer. 

The  ResNet50  architecture  (He  et  al.,  2016)  was  modified  and 
trained with transfer learning using pre-trained weights from ImageNet 
(Smith,  2018).  Models  trained  with  transfer  learning  outperformed 
models trained with random weights with an increase of 4% in the F1-

The  performances  of  ResNet50  and  EfficientNetB3  with  transfer 
learning are very similar; however, at the species level (3), ResNet50 has 
a  higher  standard  deviation  (0.32%).  State-of-the-art  models  trained 
with transfer learning and without MTL have an F1-score of 96%, similar 
to models trained with MTL at the species level. The models trained with 
ResNet  and  EfficientNet  have  the  absolute  best  performance  and 
outperform the benchmark YOLOv5 model on the TL dataset referenced 
in (Bjerge et al., 2023a). This is expected since the tasks performed by 
YOLOv5 include both object detection as well as classification. No other 
state-of-the-art CNN models were evaluated since it is not expected to 
achieve scores higher than 96% to 99% already achieved and the main 
purpose  was  to  demonstrate  that  different  CNNs  can  be  modified  for

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What process was followed to deploy the trained deep learning model (e.g., Model serialization, Platform selection)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Unfortunately, there isn't enough information available to provide a detailed response about the deployment process of the trained deep learning model. However, I can infer some general steps typically involved in such processes.

After training a deep learning model, the next step usually involves saving or serializing the model so that it can be used later for prediction or inference. This often includes saving the model's architecture, its learned weights, and any additional metadata required to load and use the model.

Once the model is saved, it needs to be deployed onto a platform suitable for running predictions. Depending on the application requirements, this could range from edge devices like mobile phones or IoT devices, to cloud servers, or even high-performance computing clusters.

In many cases, the choice of platform depends on factors such as computational resources needed, latency requirements, data privacy concerns, and cost considerations. For instance, if real-time predictions are necessary, a powerful local device might be preferred over a remote server due to lower network latencies. On the other hand, if large amounts of data need processing, a scalable cloud solution may be more appropriate.

However, without specific details regarding the deployment strategy employed in this case, these remain speculative suggestions.