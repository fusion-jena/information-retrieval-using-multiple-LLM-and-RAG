Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

model that adjusts too well to the training data, but it does not generalize to the unseen
before dataset, i.e., a test dataset), after 50,000 iterations, the learning rate was reduced
following an exponential decay parameter of 0.5 by an SGD scheduler. Aside from this,
we used rotation, noise, and ﬂip (as in [50]) for data augmentation, and we were capable
of augmenting the dataset by six times. With the data augmentation technique, we can
make the CNN classiﬁcation more robust and generalize better. In Figure 9, we can see the
schematic diagram for the evaluation process.

DeepLabV3+: The DeepLabV3+ [48] starts with three blocks composed of two convo-
lutions and one polling layer that performs the feature extraction and an initial prediction
map. These features are then processed by a particular layer, called Atrous Spatial Pyramid
Pooling (ASPP) introduced in [49]. This technique involves employing atrous convolution
in parallel to extract features at multiple scales and alleviate the loss of spatial information
due to prior pooling or convolutions with striding operations. The data is then processed
with features extracted from the ﬁrst pooling layer and reﬁned by one extra convolutional
layer. Then three convolutional layers process the concatenated segments upsampled
by a bilinear interpolation producing the ﬁnal prediction map. For more details, see
Figure 7 [48].

Figure 7. DeepLabV3+ architecture. Adapted from [43,48].

Remote Sens. 2021, 13, 3054

7 of 19

Remote Sens. 2021, 13, 3054

8 of 19

Figure 9. Schematic diagram of the evaluation process.

All deep learning-based models exploited in this work were implemented using the
TensorFlow [51], a Python framework conceived to allow efﬁcient analysis and implemen-
tation of deep learning with Graphics Processing Units (GPUs). All experiments conducted
here were performed on a 64-bit Intel i7-8700K@3.70GHz CPU workstation, 64 GB memory,
and NVIDIA® GTX 1080 GPU with 12Gb of memory, under a 10.0 CUDA version. Debian
4.195.98-1 version was used as the operating system.

2.2.2. Evaluation Metrics

The most signiﬁcant variation of performance is concerning the number of parameters
and with training and inference time. Despite being the best architecture in performance,
According to Table 2, DeepLabv3+ needed more parameters than the other architectures,
about 2.75 times more parameters than the U-Net, the least requiring one. The need for a
more signiﬁcant number of parameters often implies a higher demand for training samples
that our dataset or another dataset may not have met that the methods present in this
research paper may be applied, possibly causing the DeepLabV3+ architecture to perform
below its potential.

Remote Sens. 2021, 13, 3054

11 of 19

Figure 11. Convergence of the evaluated networks.

Table 2. Number of Parameters and Processing Time of the proposed approaches. The training time
represents the results for the test set of each method. The inference time stands for the time taken by
each model to make predictions for each image.

Method

FCN

U-Net

SegNet

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the data augmentation techniques applied in the deep learning pipeline (e.g., Fliping, Roating, Scaling)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
In the given context, the authors mention applying several data augmentation techniques to improve their deep learning pipeline's performance. Specifically, they use rotation, noise, and flip for data augmentation. By implementing these techniques, they managed to increase their dataset size by six times. Data augmentation helps create a more extensive and diverse dataset, which allows the model to learn more effectively and generalize better when presented with new, unseen data.

Rotation involves rotating images by various angles, creating new versions of the original images. Noise addition introduces random variations into the images, simulating real-world conditions where images might contain imperfections or distortions. Lastly, flipping refers to horizontally or vertically mirroring images, generating additional examples without altering the essential content.

These data augmentation techniques contribute to making the CNN classification more robust and improving the overall performance of the deep learning pipeline.