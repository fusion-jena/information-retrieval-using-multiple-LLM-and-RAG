Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

For the ML model, training and testing datasets were generated
through reference to existing field datasets and VHR images (Section
2.4.3, Table 2). Areas dominated by the target communities were digi-
tised as polygons and all pixels contained were extracted. These poly-
gons were then split into calibration and validation sets, with ~30% of
pixels for each VT reserved for independent model validation. Splitting
polygons rather than pixels minimises the effect of spatial autocorrela-
tion on model accuracies (Karasiak et al., 2022). We used a python
implementation of the XGBoostClassifier (Chen and Guestrin, 2016) to
classify the VTs, given optimised random trees can be developed
whereby each new tree learns from the errors of those previous. As input
to the ML algorithm, the seasonal vegetation index composites from S2,
backscatter composites from S1, elevation and slope were used, totalling
up to 54 features (Appendix-A). The compositing periods were chosen

>50% cover of U. galli

Molina grassland
>50% cover of M. caerulea
Juncus rushes
>50% cover of Juncus spp.

LWHab classes
(based on Phase-1)

Broadleaved woodland
Needleleaved woodland
Improved grassland,
Arable crops

Bracken
Acid grassland
Neutral grassland
Calcareous grassland
Dry dwarf shrub heath (Ddsh)
Wet dwarf shrub heath (Wdsh)
Fen, Marshy grassland, and Swamp
Modified bog
Blanket bog
Raised bog
Open dune, Dune Grassland, Dune Heath,
Dune Scrub
Saltmarsh

Ulex dominated scrub

Molina grassland

Juncus rushes

* Perennial ryegrass, Trifolium repens, Ranunculus repens, Cynosurus cristatus, Poa trivialis.

Fig. 4. Harmonisation of habitat classes within (a) GMEP to generate (c) GMEPmod demonstrated over one of the GMEP 1 km2 square (SquareID: EYAQHZ). LWHab
map (b) is also shown to demonstrate the similarities and differences with GMEP and GMEPmod.

EcologicalInformatics82(2024)1027147S.M. Punalekar et al.

88
81
93
73
85
58
59
90
81
66
60
63
05
96
28

88
81
93
47
74
73
87
77
60
89

80
92
88
86
27
84
43
39
81
79
62
77
08
96
100

80
92
88
62
74
86
92
55
97
79

88
81
93
73
92
68
59
90
81
66
60
68
16
96
28

88
81
93
47
74
73
87
77
60
89

80
92
88
86
59
84
43
39
81
79
62
77
26
96
100

80
92
88
62
74
86
92
55
97
79

a) Step-1: Comparing LWHabmod and GMEPmod (actual accuracies)
b) Step-2: Applying decision rules based on the peat depth, particularly
those affecting wetland/bog classes, to modify GMEPmod data labels.
c) Step-3: Applying decision rules (in addition to Step-2) based on the
Phase-1 Habitat map, and particularly those impacting on the clas-
sification of grassland, heathland, and scrub classes, to modify the
GMEPmod data labels.

These exercises were repeated for the broad habitat classes by

modifying the GMEPBHmod labels through Step-2 and Step-3.

2.6.2. Accuracy assessment for Pembrokeshire County

We undertook a dedicated survey of vegetated semi-natural habitats,
in Pembrokeshire in 2022 (Fig. 2) using the EarthTrack mobile appli-
cation developed through Living Wales (https://earthtrack.aber.ac.uk/)

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the hyperparameters used in the deep learning model (e.g., learning rate, optimizer)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The text does not provide information about the specific hyperparameters used in the deep learning model, such as the learning rate or optimizer. However, it mentions that a Python implementation of the XGBoostClassifier was used, which is a gradient boosting framework that uses multiple weak prediction models, typically decision trees, to create a strong predictive model. Additionally, it states that optimized random trees were developed where each new tree learned from the errors of those previous. This suggests that some form of optimization was applied during the training process, but the exact details are not specified.