Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

tible to overfitting; therefore, it is crucial to address this issue by tuning
the hyperparameters.

and time overhead (Ke et al., 2017). LightGBM sets itself apart from
other tree-based methods through its leaf-wise splitting approach, which
generates more intricate trees. These trees are adept at minimising loss,
leading to enhanced accuracy. The splitting process is guided by a
unique sampling method called Gradient-Based One Side Sampling
(GBOSS) (Ke et al., 2017). This method excludes data with small gra-
dients while utilising the remainder for estimating information gain and
facilitating tree growth. A collection of hyperparameters, such as lear-
ning_rate, max_depth, bagging_fraction, bagging_freq, and n_estimators,
controls the algorithm. These parameters are crucial in shaping how the
leaves are structured within the trees. The model's complexity gradually
rises as the tree grows, guided by these parameters. Simultaneously, loss
decreases, and the algorithm becomes more adept at learning from the
data, thereby improving its efficiency. Moreover, this model is suscep-

linear to machine learning methods, were fitted in training data to
construct regression equations. We used multiple linear regression, Enet,
SVM, RF, XGboost and LightGBM to predict canopy cover from planet
data. In general, all the mentioned models are used in machine learning
as they use algorithms to automatically learn patterns and relationships
from data to make predictions or decisions. However, we categorised

EcologicalInformatics82(2024)1027065A. Gyawali et al.

Table 4
The optimised hyperparameter values with grid search range in machine
learning models.

Model

Hyperparameters

Grid search

Optimised value

Enet

SVM

RF

Xgboost

LightGBM

α
l1_ratio

Cost (C)
gamma
Kernal
epsilon

n_estimators
max_features
max_depth
min_samples_split
min_samples_leaf

n_estimators
max_depth
colsample_bytree
min_child_weight
subsample
learning_rate

n_estimators
max_depth
learning_rate
num_leaves
feature_fraction
bagging_fraction
bagging_freq

Model

Train

Test

Linear Regression
Elastic Net
Support Vector Machine
Random Forest
Extreme Gradient Boosting
Light Gradient Boosting Machine

R2

0.58
0.58
0.66
0.66
0.66
0.69

R2

0.59
0.59
0.63
0.64
0.64
0.64

RMSE

rRMSE (%)

MAE

0.17
0.18
0.17
0.16
0.16
0.16

23.28
23.30
22.26
22.00
21.95
21.92

0.14
0.14
0.12
0.13
0.12
0.12

cover. The interquartile range for observed: Q1 = 65%, Q2 (median) =
86%, and Q3 = 96%, and predicted: Q1 = 63%–69%, Q2 = 83%–87%,
and Q3 = 88% –91%. The minimum and maximum canopy cover for
observed and all the models are 0% and 100%, respectively. Similarly,
the density of the observed and predicted canopy cover is higher in Q3 as
the violin's shape is expanded in those regions.

3.3. Variable importance

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What optimization techniques are applied in the deep learning pipeline (e.g., SGD, Adam)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:

The given context does not provide specific details about optimization techniques applied in the deep learning pipeline, such as Stochastic Gradient Descent (SGD) or Adaptive Moment Estimation (Adam). Instead, it focuses on various machine learning models like Linear Regression, Elastic Net, Support Vector Machine, Random Forest, Extreme Gradient Boosting, and Light Gradient Boosting Machine. It also discusses their performance metrics, including R2, Root Mean Square Error (RMSE), Relative Root Mean Square Error (rRMSE), and Mean Absolute Error (MAE). Additionally, the text mentions hyperparameters for each model but does not explicitly state any optimization technique used during the training process. Therefore, based on the provided context, I cannot determine what optimization techniques are applied in the deep learning pipeline.