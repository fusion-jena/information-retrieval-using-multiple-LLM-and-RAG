Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

40.32%
35.97%
46.56%
50.21%
38.75%
50.40%
48.38%

For the LU detection task, all deep learning techniques except AlexNet outperformed
XGBoost. Differences were signiﬁcant, with up to 15 percent points in OA. As in the
previous section, the best performing “single-pixel” architecture is DenseNet and the best
“semantic labeling” network is DeepLab. Interestingly, DenseNet reached the best PA,
although DeepLab dominated the remaining metrics.

For the remainder of this study, the best performing “single-pixel” and “semantic
labeling” were selected. There was little difference between the architectures, so the
architectures with the best F1-score for the LU classiﬁcation were chosen arbitrarily.

4.3. Inﬂuence of Neo-Channels and Land Cover as Input on the Learning

All architectures were trained with stochastic gradient descent using a similar protocol,
with a momentum of 0.9 and starting from an initial learning rate of 10−2. Every 20 epochs,
the learning rate is divided by 10 until reaching 10−6.

Neural networks do not perform well when trained with unbalanced data sets [41]. In
the case of “central-pixel labeling” architectures it is possible to make balanced data sets
with the initial pixels selection used for the learning. In the case of “semantic labeling” the
composition of the images makes it more difﬁcult to precisely control the number of pixels
per class. We tried several methods, but found negligible differences in performance. All
reported experiments use the median frequency balancing method.

3.3.1. Central-Pixel Labeling

Remote Sens. 2021, 13, 2257

13 of 22

between 12 land type classes for the classiﬁcation, as described in the nomenclature in
Table 4. Table 8 presents the results of the LU classiﬁcation on the test area and Table A2, in
the Appendix, presents the results of the LU classiﬁcation on the four training areas.

Table 8. Results of Deep Learning architecture and XGBoost for the LU detection task with RGBNIR
as input.

Architectures

XGboost
AlexNet
ResNet
DenseNet
SegNet
DeepLab
FCN

OA

51.56%
45.79%
55.96%
59.59%
58.36
61.45%
56.07%

PA

42.61%
33.93%
43.89%
46.18%
37.16
49.77%
49.59%

UA

38.27%
38.26%
49.58%
55.00%
40.48
51.04%
47.22%

F1-Score

40.32%
35.97%
46.56%
50.21%
38.75%
50.40%
48.38%

To run an XGBoost model, neo-channels and multiple texture ﬁlters were used. The
ﬁlters were: dissimilarity, entropy, homogeneity and mean. Input of 64 × 64 windows
were used for labeling the central pixel. The training data were the same as for the Deep
Learning architectures.

3.3. Deep Learning Architectures

The internal parameters of the employed Convolutional Neural Network (CNN)
architectures were not changed with regards to the originally proposed ones. A CNN [40]
is a machine learning technique based on sequences of layers of three different types:
convolutional, pooling or fully connected layers. Convolution and fully connected layers
are usually followed by an element-wise, non-linear activation function.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which hardware resources are used for training the deep learning model (e.g., GPUs, TPUs)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Unfortunately, there is no information available regarding the specific hardware resources used for training the deep learning models mentioned in the given context. Therefore, I cannot provide any details about whether GPUs, TPUs, or other hardware resources were utilized during the training process.