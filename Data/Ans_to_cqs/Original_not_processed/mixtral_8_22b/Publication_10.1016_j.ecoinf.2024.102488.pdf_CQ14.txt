Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Ke, G., Meng, Q., Finley, T., Wang, T., Chen, W., Ma, W., Ye, Q., Liu, T.-Y., 2017. 
LightGBM: A Highly Efficient Gradient Boosting Decision Tree, 31st Annual 
Conference on Neural Information Processing Systems (NIPS). 

Lang, M.W., Kasischke, E.S., 2008. Using C-band synthetic aperture radar data to monitor 

forested wetland hydrology in Maryland’s coastal plain, USA. IEEE Trans. Geosci. 
Remote Sens. 46 (2), 535–546. 

Li, Q., Wong, F.K.K., Fung, T., 2021. Mapping multi-layered mangroves from 
multispectral, hyperspectral, and LiDAR data. Remote Sens. Environ. 258. 
Li, X., Zhao, C., Kang, M., Ma, M., 2022. Responses of net primary productivity to 

phenological dynamics based on a data fusion algorithm in the northern Qinghai- 
Tibet Plateau. Ecol. Indic. 142, 109239. 

Liu, M., Yang, W., Zhu, X., Chen, J., Chen, X., Yang, L., Helmer, E.H., 2019. An improved

Machine (LightGBM) (Ke et al., 2017) algorithms belong to ensemble 
learning  boosting  and  have  shown  excellent  performance  in  land  use 
classification  (Fu  et  al.,  2022b).  Therefore,  in  this  study,  KNN,  RF, 
AdaBoost, XGBoost, and LightGBM were used as base models, and RF 
was used as the metamodel to jointly develop a stacking ensemble model 
for LRD wetland classification (Cai et al., 2020; Fu et al., 2022a). We 
used a grid-search strategy to determine the optimal parameters for the 
base  and  metamodels.  The  stacking  ensemble  model  was  developed 
using the scikit-learn library in Python 3.7, using the following training 
procedure (Fig. 6):

3.3. Feature selection 

This study used Recursive Feature Elimination and Cross-Validation 
(RFECV) to select the optimal features that could reduce the redundancy 
caused  by  multi-source  feature  datasets  and  improve  model  perfor-
mance. RFECV is a wraparound approach to feature selection based on 

Table 2 
Training samples and validation samples.  

Class 

Number of training samples 

Number of validation samples from image 

Number of validation samples from field survey 

P. australis 
S. salsa 
Tidal flat 
Aquatic environment 
Paddy field 
Aquaculture pond 
Dryland 
Forested region 
Developed land 
Total 

900 
171 
375 
852 
819 
746 
220 
129 
761 
4973 

336 
55 
150 
248 
223 
277 
67 
59 
375 
1790 

71 
18 
5 
134 
82 
35 
0 
0 
0 
345 

Total 

1307 
244 
530 
1234 
1124 
1058 
287 
188 
1136 
7108

Fusion 9 (1), 4–20. 

wetland vegetation (Suaeda salsa) using the pressure state response model, a case of 
the Liao River estuary in China. Int. J. Environ. Res. Public Health 19 (1). 
Stehman, S.V., 1997. Selecting and interpreting measures of thematic classification 

accuracy. Remote Sens. Environ. 62 (1), 77–89. 

Sun, W., Liu, K., Ren, G., Liu, W., Yang, G., Meng, X., Peng, J., 2021. A simple and 
effective spectral-spatial method for mapping large-scale coastal wetlands using 
China ZY1-02D satellite hyperspectral images. Int. J. Appl. Earth Obs. Geoinf. 104, 
102572. 

Swain, R., Sahoo, B., 2017. Mapping of heavy metal pollution in river water at daily 
time-scale using spatio-temporal fusion of MODIS-aqua and Landsat satellite 
imageries. J. Environ. Manag. 192, 1–14. 

Tong, X., Tian, F., Brandt, M., Liu, Y., Zhang, W., Fensholt, R., 2019. Trends of land

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "How are the hyperparameters of the model optimized (e.g., grid search, random search)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The hyperparameters of the model are optimized using a grid-search strategy. This means that a range of possible values for each hyperparameter is defined, and then all combinations of these values are tested to find the best set of hyperparameters for the given problem. In this study, the optimal parameters for both the base and meta-models are determined using this method. The stacking ensemble model is developed using the scikit-learn library in Python 3.7, which provides tools for implementing machine learning algorithms and performing tasks such as hyperparameter optimization.