Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

We  trained  algorithms  with  the  amount  of  data  available  after 
manually  removing  the  testing  set,  as  described  above.  During  the 
training, 10% of data served as the validation set to check for overfitting. 
We used a min-max scaler reverted at the end to compute the perfor-
mance metrics in the test set. In all cases, we used a batch size of 64 
samples and trained the algorithm during 100 epochs using Adam as the 
algorithm  to  optimize  the  network  parameters.  Algorithms  were 
implemented in Pytorch (Paszke et al., n.d.) and models were trained 
and tested in Google Colaboratory.2

‖ps‖2 + ‖qt‖2 + b2

s + b2

t

)

(4) 

Consequently, the unknown parameters bs, bt, ps, qt can be estimated 
optimizing  the  regularized  cost  function  using  stochastic  gradient 
descent: 

ps, qt, bs, bt = argmin
ps,qt ,bs,bt

L .

2.2. Embedding layers 

(5)  

Embedding  layers  are  modules  of  deep  neural  networks  that  are 
generally  implemented  in  natural  language  processing  problems 
(Sharma  et  al.,  2020)  and  collaborative  filtering  (He  et  al.,  2017) 
because they can solve the one-hot encoding problem (Yu et al., 2022), 
where the latent representations in the classic models are composed of 
sparse representations generally using vectors mainly composed of zero 
layers  replace  such  dispersed  vectors  with 
values.  Embedding

Blondel, M., Prettenhofer, P., Weiss, R., Dubourg, V., Vanderplas, J., Passos, A., 
Cournapeau, D., Brucher, M., Perrot, M., Duchesnay, E., 2011b. Scikit-learn: 
machine learning in Python. J. Mach. Learn. Res. 12, 2825–2830. 

Piech, C., Bassen, J., Huang, J., Ganguli, S., Sahami, M., Guibas, L.J., Sohl-Dickstein, J., 
2015. Deep knowledge tracing. In: Cortes, C., Lawrence, N., Lee, D., Sugiyama, M., 
Garnett, R. (Eds.), Advances in Neural Information Processing Systems, vol. 28. 
Curran Associates, Inc, pp. 505–513. 

In: WHO Regional Office for Europe. Tech. Rep. 

Xie, K., Ning, X., Wang, X., Xie, D., Cao, J., Xie, G., Wen, J., 2017. Recover corrupted data 
in sensor networks: a matrix completion solution. IEEE Trans. Mob. Comput. 16 (5), 
1434–1448. 

Xue, H.-J., Dai, X., Zhang, J., Huang, S., Chen, J., 2017a. Deep matrix factorization

lations and adapt well to data generated by WSNs (de Wolff et al., 2021), 
if such data do not present a substantial loss of information (Liu et al., n. 
d.;  Liu  et  al.,  2018).  However,  this  represents  a  significant  challenge 
because, currently, the information generated by low-cost WSNs should 
be pre-processed, and, at the same time, the data assurance and quality 
of their growing volume of information should be maintained. Hence, 
matrix factorization (MF) (Rivera-Mu˜noz et al., 2021), and their variants 
using deep learning (Deep Matrix Factorization - DMF) emerged as an 
alternative because they can recover a significant amount of information 
that was not sampled by modeling non-linear interactions of input data 
(sensors,  time  instants).  This  property  enables  the  exploitation  of  the 
spatial-temporal  correlations  and  a  better  adaptation  to  the  data  of 
WSNs (De Handschutter et al., 2021; Xue et al., 2017a).

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What preprocessing steps are involved before training a deep learning model (e.g., normalization, scaling, cleaning)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer: The text mentions that the authors manually removed the testing set from the dataset before training the algorithms. Additionally, they used a min-max scaler to scale the data, which was then reverted at the end to compute performance metrics on the test set. These are examples of preprocessing steps taken before training a deep learning model. Normalization or scaling is often applied to ensure that different features have similar scales, preventing any feature from dominating the others due to its larger numerical values. Cleaning the data may involve handling missing values, outliers, or incorrect entries. Although the text does not explicitly mention these specific steps, they are common practices when preparing datasets for machine learning tasks.