Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Li, J., Yan, G., Lu, W., Jiang, S., Gong, S., Wu, J., Li, X., 2018, March. SmartShuttle: 
Optimizing off-chip memory accesses for deep learning accelerators. In: 2018 
Design, Automation & Test in Europe Conference & Exhibition (DATE). IEEE, 
pp. 343–348. 

Li, J., Liu, C., Lu, X., Wu, B., 2022a. Fish passage monitoring based on improved 

YOLOv5s and TensorRT deployment. Trans. Chin. Soc. Agric. Machin. 12, 314–322. 
Li, J., Liu, C., Lu, X., Wu, B., 2022b. CME-YOLOv5: an efficient object detection network 

for densely spaced fish and small targets. Water 14 (15), 2412. 

Li, W., Li, F., Li, Z., 2022c. CMFTNet: multiple fish tracking based on counterpoised 

JointNet. Comput. Electron. Agric. 198, 107018. 

Wang, J.J., Hao, Z.Y., Li, H.L., 2019. Training memory access optimization for 

convolutional neural networks. J. Xi’an Univ. Electron. Sci. Technol. 02, 98–107. 

Wang, Q., Wu, B., Zhu, P., Li, P., Zuo, W., Hu, Q., 2020. ECA-net: efficient channel

targeted fish species dataset. This dataset was then divided into training 
and validation sets in an 8:2 ratio using a random selection process.

several  times  higher  than  those  of  other  operations  (Li  et  al.,  2018). 
Therefore,  reducing  memory  access  is  the  key  to  further  enhancing 
model  performance.  By  reconfiguring  the  computation  sequence  of 
‘convolutional layer + batch normalisation + activation layer on NVI-
DIA TESLA V100 GPUs, Wang et al. (2019) reduced memory access by 
33%,  22%,  and  31%  for  the  ResNet-50,  Inception  V3,  and  DenseNet 
models,  respectively,  leading  to  increases  in  the  computational  effi-
ciency  of  20.5%,  18.5%,  and  18.1%.  Lowering  the  memory  access  in 
models can accelerate operations across the three main layers of CNNs, 
thus fully harnessing the model's strengths and more effectively utilising 
the computational resources provided by the embedded devices (Gilan 
et al., 2019; Zhang et al., 2015). Therefore, by reducing the number of 
layers  in  the  network  model,  the  number  of  convolutions  and  data

The  method  described  in  this  article  was  implemented  using  the 
PyTorch deep learning framework and required a GPU computing de-
vice for the efficient execution of LigTraNet. We implemented LigTraNet 
on mobile notebook devices with a hardware configuration consisting of 

EcologicalInformatics82(2024)10270410J. Li et al.                                                                                                                                                                                                                                         

Fig. 10. Detection results of fish in the fishway. Schizothorax oconnori marked in red, Racoma waltoni in pink, Schizopygopsis younghusbandi in green, Schizothorax 
macropogon in orange, Fish in yellow, false detections in blue, and missed detections in magenta. (For interpretation of the references to colour in this figure legend, 
the reader is referred to the web version of this article.)

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Where is the code repository of the deep learning pipeline available (e.g., GitHub, GitLab, BitBucket)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Unfortunately, none of the given sources provide information about where the code repository of the deep learning pipeline is available. The papers cited discuss various aspects of optimizing off-chip memory accesses for deep learning accelerators, improving YOLOv5s for fish passage monitoring, developing an efficient object detection network for densely spaced fish and small targets, creating a multiple fish tracking system based on Counterpoised JointNet, and training memory access optimization for Convolutional Neural Networks. However, they do not mention any specific code repositories or links to their respective implementations. To find out where the code repository of the deep learning pipeline is available, it would be necessary to consult additional sources or contact the authors directly.