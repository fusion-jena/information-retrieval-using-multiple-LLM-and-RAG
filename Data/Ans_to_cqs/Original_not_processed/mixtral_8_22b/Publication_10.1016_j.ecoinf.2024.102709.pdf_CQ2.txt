Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Using this ideal split, a test was conducted using unprocessed data. 
This indicates that the test dataset appeared to be similar to the training 
data  because  it  consisted  of  images  of  the  extracted  clusters  without 
further processing. 

The  dataset  used  in  this  study  included  single-tree  point  clouds, 
images of single-trees, and *. csv containing the attributes used to pro-
duce the images, reference data, clusters of numbers (in two different 
point-thickness settings), labeled numbers, preprocessed images of the 
numbers, numbers from the best split, and tables containing the results 
of  our  digit  recognition  are  freely  available  under:  Doi:  https://doi. 
org/10.5281/zenodo.10663114. 

3. Results 

3.1. Classification accuracy

Three models (Models 4, 5, and 6) were trained using our own data 
(clusters of extracted numbers), as described above, as input for training, 
whereas the other three models (Models 1, 2, and 3) were trained with 
the modified National Institute of Standards and Technology (MNIST) 
dataset of handwritten digits, which can be used to train classification 
models (Deng, 2012).

Image preprocessing was conducted using Python with the OpenCV 
library (Python Software Foundation, 2023b). The last step was image 
inversion, in which white pixels (representing markings) were switched 
to black pixels, and the black pixels (representing the background) were 
switched to white pixels. 

The  YOLOv8-framework,  an  end-to-end  neural  network  (Jocher 
et al., 2023), was used for model-building training, and a Python (Py-
thon Software Foundation, 2023a) script was used to convert all labels 
into the required format. These labels were annotated to the original via 
Labelbox (Labelbox, 2023) and consisted of the numbers that each image 
was  supposed  to  show.  A  separate  script  downloaded  all  scatterplot 
images,  including  labels  created  through  Labelbox.  Moreover,  the 
required data structure was automatically created, and images and la-
bels were moved to the corresponding folders for training, testing, and 
validation.

To determine the ideal training–test split for our model, we used k- 
fold  cross-validation  (k  = 5,  epochs  = 500,  imagesize  = 640).  The 
epochs provide the number of repetitions for training, and the image size 
is  expressed in  pixels. k-fold  cross-validation  (Rodriguez et  al., 2010) 
was used to determine the best training test set for the model. Hereby, 
the data are split into k different training–test sets. The model was not 
trained on the entire dataset but on each training split. The result was an 
investigation of the best data split. Functions of the Python library scikit- 
learn  (scikit-learn  developers,  2023)  were  used  to  split  the  data  and 
investigate the results of each trained model. In addition, YOLO training 
losses and mAP50 values of each model were investigated. The split with 
the  highest  mAP50  value  indicates  the  highest  number  of  correctly 
predicted labels for the model trained on a specific split. We used the

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What data formats are used in the deep learning pipeline (e.g., image, audio, video, CSV)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
In the given context, several types of data formats are mentioned as being part of the deep learning pipeline. Specifically, the dataset used in this study includes single-tree point clouds, images of single trees, and.csv files containing various attributes used to produce the images. Additionally, there is mention of clusters of numbers, labeled numbers, preprocessed images of the numbers, and tables containing the results of digit recognition. Therefore, it appears that the primary data formats used in this particular deep learning pipeline are images and.csv files. However, it should be noted that the use of these specific data formats may depend on the nature of the problem being addressed by the deep learning algorithm, and other studies or applications might employ different data formats such as audio or video files.