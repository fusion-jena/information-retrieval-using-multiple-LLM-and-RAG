Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

The last step in configuring the model involves feeding in predictors 
that  the  advanced  deep  learning  algorithm  feeds  by  the  decomposed 
components  resulting  from  the  previous  steps.  The  primary  model  is 
CNN-BiGRU  with  three  comparative  ML  methods  (KELM,  RVFL  and 
CNN-BiRNN),  which  provide  four  complementary  models  including 
MVMD-CNN-BiGRU,  MVMD-RVFL,  MVMD-KELM  and  MVMD-CNN- 
BiRNN.  These  models  are  used  to  create  the  multi-temporal  fore-
casting model of daily streamflow (Qflow). Setting hyperparameters and 
their structural architecture is the most important aspect of executing 
ML-based  predictive  models  (Jamei  et  al.,  2023b).  Based  on  recent 
research, the main approaches to tuning parameters are algorithms of 
metaheuristic optimization, schemes of cross-validation schemes (Nes-
ted/rolling  basis  cross-validation)  (Huyghues-Beaufond  et  al.,  2020),

MVMD-KELM 

MVMD-CNN-BiRNN 

CNN-BiGRU 

RVFL 

KELM 

CNN-BiRNN 

MVMD-CNN-BiGRU 

MVMD-RVFL 

MVMD-KELM 

MVMD-CNN-BiRNN 

CNN-BiGRU 

RVFL 

KELM 

CNN-BiRNN 

Phase 

Training 
Testing 
Training 
Testing 
Training 
Testing 
Training 
Testing 
Training 
Testing 
Training 
Testing 
Training 
Testing 
Training 
Testing 
Training 
Testing 
Training 
Testing 
Training 
Testing 
Training 
Testing 
Training 
Testing 
Training 
Testing 
Training 
Testing 
Training 
Testing 

R 

0.985 
0.955 
0.918 
0.944 
0.904 
0.928 
0.998 
0.943 
0.903 
0.811 
0.844 
0.783 
0.845 
0.803 
0.895 
0.815 
0.998 
0.924 
0.907 
0.921 
0.904 
0.887 
0.998 
0.911 
0.778 
0.545 
0.623 
0.509 
0.682 
0.525 
0.839 
0.496 

RMSE 

MAPE 

0.179 
0.247 
0.364 
0.257 
0.395 
0.289 
0.072 
0.289 
0.398 
0.432 
0.492 
0.497 
0.491 
0.459 
0.410 
0.429 
0.022 
0.330 
0.386 
0.296 
0.397 
0.387 
0.070 
0.320 
0.619 
0.706 
0.717 
0.654 
0.671 
0.639 
0.511 
0.629

CNN Layers = 2, filters = 64, kernel_size =
[1,4], BiRNN Layers = 1, BiRNN neurons =
30, Optimizer: Adam, activation function =
‘relu’, epochs = 200,batch_size = 32, 
learning_rate = 0.0001, Dense = 100 
CNN Layers = 2, filters = 64, kernel_size =
[1,4], BiRNN Layers = 1, BiRNN neurons =
30, Optimizer: Adam, activation function =
‘relu’, epochs = 200,batch_size = 32, 
learning_rate = 0.0001, Dense = 100

CNN Layers = 2, filters = 64, kernel_size =
[1,4], BiRNN Layers = 1, BiRNN neurons =
30, Optimizer: Adam, activation function =
‘relu’, epochs = 200,batch_size = 32, 
learning_rate = 0.0002, Dense = 100 
CNN Layers = 2, filters = 64, kernel_size =
[1,4], BiGRU Layers = 1, BiGRU neurons =
30, Optimizer: Adam, activation function =
‘relu’, epochs = 40,batch_size = 32, 
learning_rate = 0.000455, Dense = 100 
CNN Layers = 2, filters = 64, kernel_size =
[1,4], BiGRU Layers = 1, BiGRU neurons =
30, Optimizer: Adam, activation function =
‘relu’, epochs = 1000,batch_size = 32, 
learning_rate = 0.0015, Dense = 100 
num_nodes: 20, regular_para = 0.05, 
weight_random_range = [(cid:0) 1, 1], 
bias_random_range = [0, 1], 
num_nodes: 30, regular_para = 2, 
weight_random_range = [(cid:0) 1, 1], 
bias_random_range = [0, 1], 
Regularization_coefficient = 9E+05, 
kernel_parameter =9E+04 
Regularization_coefficient = 1E+06, 
kernel_parameter =9E+04 
CNN Layers = 2, filters = 64, kernel_size =

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which frameworks are used to build the deep learning model (e.g., TensorFlow, PyTorch)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Unfortunately, based on the given information, it is not possible to determine which specific deep learning framework was used to build the described models. The text mentions several machine learning techniques such as CNN-BiGRU, KELM, RVFL, and CNN-BiRNN, but does not specify whether they were implemented using a particular library or framework like TensorFlow or PyTorch. Therefore, without additional context, we cannot definitively identify the framework used for building these models.