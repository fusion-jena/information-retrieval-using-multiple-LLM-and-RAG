Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

As it has been proven, ELMs are an important approach for handling and analysing Big
Data as they require the minimum training time relative to the corresponding engineering
learning algorithms. Moreover ELMs do not require ﬁne manipulations to determine their
operating parameters and ﬁnally they can determine the appropriate output weights
towards the most eﬀective resolution of a problem. What is most important, they have
in contrast to corresponding methods which adjust their
the potential to generalize,

508

K. DEMERTZIS ET AL.

performance based solely on their training data set. It is obvious that the emerging use of
ELM in Big Data analysis as well as DELE creates serious prerequisites for complex systems’
development by low-cost machines.

8. Future research

Before introducing our proposed algorithm, it would be essential to discuss the existing basic
theoretical framework. The question of whether a small Neural Network architecture can
learn a lot, even from huge training data sets, was answered in the aﬃrmative by ELM. An
ELM (Cambria & Guang-Bin, 2013) is a Single-Hidden Layer Feed Forward Neural Network
(SLFFNN) with N hidden neurons, randomly selected input weights and random values of
bias in the hidden layer, while the weights at its output are calculated with a single multipli-
cation of vector matrices. SLFFNNs are used in ELMs because of their ability to approach any
continuous function and to classify any discontinuous areas. An ELM can accurately learn N
samples, and its learning speed can be even thousands of times greater than the speed of
conventional Back Propagation Feed Forward Neural Networks (BP_FFNN).

499

This is a multi-layered neural network model that receives successive OL data streams
and uses the unsupervised GRELMA algorithm as a basic building block in which the
outputs of each level are used as inputs to the next one (Sun, Zhang, Zhang, & Hu, 2017).
An autoencoder is an ANN used for unsupervised learning of eﬃcient coding. The aim
of an autoencoder is to learn a representation (encoding) for a set of data, but with the
output layer having the same number of nodes as the input layer, and with the
purpose of reconstructing its own inputs (instead of predicting target value Y given
inputs X). The algorithm is described below (Sun et al., 2017):

Algorithm 1. GRELMA Algorithm for Clustering (Sun et al., 2017)

i=1 the number of hidden neurons nh, the penalty coeﬃcient κ and λ

Through a series of new learning architectures and algorithms, have been transformed;
DELE methods are now the state-of-the-art in object, speech and audio recognition.
Deng and Yu (2013) had proposed methods and applications of DELE. A large deep
convolutional neural network trained (Krizhevsky, Sutskever, & Hinton, 2012) to classify
1.2 million high-resolution images in the ImageNet LSVRC-2010 contest into 1000
diﬀerent classes.
In recent years, Convolutional Neural Networks (CNNs) have
become very popular and have achieved great success in many computer vision
tasks particularly in object recognition. Cellular Simultaneous Recurrent Networks
(CSRNs) applied (Alom, Alam, Taha, & Iftekharuddin, 2017) to generate initial ﬁlters
of CNNs for features extraction and Regularized Extreme Learning Machines (RELM)
for classiﬁcation. Experiments were conducted on three popular data sets for object
recognition (such as face, pedestrian, and car) to evaluate the performance of the pro-

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What preprocessing steps are involved before training a deep learning model (e.g., normalization, scaling, cleaning)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The provided context does not explicitly mention any specific preprocessing steps involved before training a deep learning model such as normalization, scaling, or cleaning. However, generally speaking, these are common preprocessing techniques employed when preparing datasets for machine learning models including deep learning ones. Normalization typically involves rescaling numeric columns to a standard scale, often between 0 and 1, to prevent attributes with higher magnitudes from dominating those with smaller ones. Scaling is another technique used to bring all features to the same magnitude range, usually between -1 and 1, to ensure equal importance during model training. Cleaning refers to removing noise and inconsistencies within the dataset, such as missing values, outliers, or irrelevant information, to improve the overall quality of the data being fed into the model. These preprocessing steps help enhance the accuracy and efficiency of the deep learning model during both training and prediction phases.