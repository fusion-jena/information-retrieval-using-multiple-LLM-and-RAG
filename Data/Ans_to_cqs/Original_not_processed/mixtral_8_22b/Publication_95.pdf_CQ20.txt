Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

When training a deep convolutional neural network, it is important to split the data
into a training set, a validation set, and a test set. The training set is used for optimizing the
parameters of the network, while the validation set is used for monitoring the performance
of the network during training and for comparing the performance of different networks
with, for example, different hyperparameters or network structures. The test set acts as a
ﬁnal evaluation of a network. To ensure a proper evaluation on both the validation set and
the test set, samples in each set must be independent and have similar class distributions.
The full data set can be split in various ways. The naïve approach is to randomly
sample images from the full data set. However, due to the images being captured in
close proximity and potentially having overlapping ﬁelds of views, information may leak
between the data sets when using the naïve approach. Another approach would be to

5.1.1. Network Training Procedure

In both network structures, the ﬁnal classiﬁcation layer was adapted to match the
seven classes (six IAPS and “no species” (Table 2)). The input image size affects the
processing time of each image, but can also impact the classiﬁcation accuracy. Therefore,
the network models were trained on ﬁve different image sizes: 96 × 128 px, 192 × 256 px,
384 × 512 px, 768 × 1024 px, and 1536 × 2048 px (see Supplementary Materials for a visual
comparison of the image sizes). For each image size, a network was trained using either
random weights or weights pre-trained on ImageNet and with global max pooling or
global average pooling before the ﬁnal classiﬁcation layers.

the collected data. Finally, the deep learning algorithms are evaluated and the challenges
of monitoring IAPS are discussed.

A preliminary test showed that the processing platform could evaluate images with
a resolution of 224 × 224 pixels in real time, using ResNet50-v2 [22]. MobileNet-v2 [23]
is a network structure designed with mobile devices in mind. In other words, it aims
for good performance with a low computational load. Both network structures are avail-
able in Keras [24] that is a high-level API based on Tensorﬂow [25], and they include
weights pre-trained on ImageNet [26], making them easy to evaluate in the case at hand.
Therefore, the two network structures ResNet50-v2 and MobileNet-v2 were explored for
image classiﬁcation.

5.1.1. Network Training Procedure

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which hardware resources are used for training the deep learning model (e.g., GPUs, TPUs)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Unfortunately, there isn't any explicit mention of the specific hardware resources used for training the deep learning model in the given context. It does not provide details about whether GPUs, TPUs, or any other specialized hardware components were utilized for this purpose.