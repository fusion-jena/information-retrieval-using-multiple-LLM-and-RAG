Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

model for extracting the embeddings. 

These are pulled from YAMNet and then fed as input to a sequential 
and  a  reduce  mean  layer  mapping  to  the  classes  mentioned  above 
(Ntalampiras et al., 2021). At this point, the final layers of the network 
map the YAMNet embeddings to the available labels as shown in Fig. 5. 

3.3. Results on goat vocalization detection 

The  dataset  presented  in  Section  3.2  was  divided  into  70%  for 
training, 10% for validation, and 20% for testing purposes. The division 
was  kept  the  same  when  experimenting  with  RF  and  YAMNet-based 

3  The 

librosa  python  package  available  at  https://librosa. 

org/doc/latest/index.html was employed at this stage 

Fig. 3. A close-up picture of a Sensortile.

3.2.2. Transfer learning based on YAMNet 

The second algorithm exploits the representation extracted from a 
deep neural network, i.e. YAMNet, which is pre-trained on data coming 
from 521 classes. Interestingly, YAMNet follows the MobileV1 convo-
lution architecture and is trained on the AudioSet-YouTube corpus (Shor 
et  al.,  2020).  Towards  using  YAMNet,  the  audio  data  is  processed  as 
follows:  

1.  The audio is converted to a monophonic channel and resampled at 

16 kHz.  

2.  The spectrogram is extracted and created using STFT magnitudes of 

25 ms overlapped by 15 ms.  

3.  The Mel spectrogram is calculated by mapping to 64 bins of the Mel 

scale within the range of 125â€“7500 Hz.  

4.  Finally, the algorithm is applied and its outcome is passed to YAMNet 

model for extracting the embeddings.

Fig. 3. A close-up picture of a Sensortile.  

only  bleats  so  that  the  detection  algorithm  elaborates  on  the  specific 
audio structure alone. After constructing the initial dataset, we devel-
oped  two  solutions  for  detecting  goat  vocalizations:  a)  one  based  on 
handcrafted features and a traditional machine learning algorithm, and 
b)  one  relying  on  the  deep  network  YAMNet  designed  to  facilitate 
generalized sound recognition applications. 

3.2.1. Traditional machine learning 

In the first algorithm, the detection of goat vocalizations is based on a 
wide  variety  of  temporal  and  spectral  audio  features  (Mel-Frequency 
Cepstral  Coefficients,  Root  Mean  Square,  Spectral  Centroid,  Spectral 
Bandwidth, Spectral Rolloff, and Zero crossing rate (Alas et al., 2016; 
Ntalampiras  et  al.,  2020))  which,  after  early  experimentations,  have

Farm 

A 
B 
C 
D 
Total 

# Annotated Events 

# Audio Files 

Duration (h) 

1046 
791 
961 
2171 
4969 

3,468,415 
2,939,211 
1,662,819 
1,920,752 
9,991,197 

~ 10,527.82 
~ 12,519.97 
~ 5036.06 
~ 6172.18 
~ 34,256.03  

Therefore, the recording campaign was planned to last an entire year so 
as  to  capture  the  variations  that  goat  vocalizations  demonstrate 
throughout  the  year.  Overall,  we  have  collected  approximately  10  M 
sound  events  lasting  more  than  34,000  h.  Fig.  7  illustrates  the  data 
distribution per farm in terms of number of audio files, annotations and 
durations.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the datasets used in the deep learning pipeline (e.g., MNIST, CIFAR, ImageNet)? "

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:

The dataset used in the deep learning pipeline is not explicitly named but it can be inferred that the dataset consists of goat vocalizations. This dataset was collected over the course of a year and contains approximately 10 million sound events totaling more than 34,000 hours of recordings. The dataset was divided into three parts: training (70%), validation (10%), and testing (20%) sets. The dataset was also used for both traditional machine learning algorithms and transfer learning based on YAMNet. The YAMNet model was pre-trained on data coming from 521 classes and uses the MobileV1 convolution architecture. The audio data was processed by converting it to a monophonic channel, resampling at 16kHz, extracting the spectrogram using STFT magnitudes, calculating the Mel spectrogram, and finally applying the algorithm and passing its output to the YAMNet model for extracting embeddings.