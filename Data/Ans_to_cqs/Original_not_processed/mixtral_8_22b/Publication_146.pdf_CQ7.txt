Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

for deep learning. arXiv 2019, arXiv:1910.05446.

17. Ruder, S. An overview of gradient descent optimization algorithms. arXiv 2016, arXiv:1609.04747.
18. Taqi, A.M.; Awad, A.; Al-Azzo, F.; Milanova, M. The impact of multi-optimizers and data augmentation on
TensorFlow convolutional neural network performance. In Proceedings of the 2018 IEEE Conference on
Multimedia Information Processing and Retrieval (MIPR), Miami, FL, USA, 10–12 April 2018; pp. 140–145.
19. Olson, M.; Wyner, A.; Berk, R. Modern neural networks generalize on small data sets. In Proceedings of
the Advances in Neural Information, Neural Information Processing Systems 31 (NeurIPS 2018), Montreal,
BC, Canada, 3–8 December 2018; pp. 3619–3628.

20. Ammar, A.; Koubaa, A.; Ahmed, M.; Saad, A. Aerial images processing for car detection using convolutional

neural networks: Comparison between faster r-cnn and yolov3. arXiv 2019, arXiv:1910.07234.

3. Results

3.1. Training Evaluation

The model was trained for 350 epochs and evaluated using the scores precision, recall, F1, GIoU,
and mAP, as seen in Table 2. The scores are calculated from model validation data, consisting of
321 image tiles. The F1 score and mAP score are seen to follow each other closely, given indications on
the training at diﬀerent stages, the model quickly reached F1 and mAP scores of ~0.4, whereafter they
continue to increase but at a slower rate. At the end of the training, the model achieved the accuracy
scores of F1 = 0.530 and mAP = 0.557. The GIoU is steadily decreasing, indicating that the model is
becoming better at correctly locating targets.

Table 2. Training metrics at diﬀerent iteration stages.

Epoch

Precision Recall

F1 Score

GIoU

100
200
300
350

0.656
0.583
0.493
0.476

0.321
0.549
0.610
0.600

0.430
0.541
0.534
0.530

2.14
1.58
1.29
1.16

mAP

0.407
0.542
0.548
0.557

Due to the lack of existing quality data, we set out to create our own data set for the purpose of
the project. The data set created is, in a deep learning context, still at a relatively small size. However,
testing the model under very diﬃcult circumstances and complex backgrounds still yielded good
detection capabilities, paving the way for future work.

ISPRS Int. J. Geo-Inf. 2020, 9, x FOR PEER REVIEW 12 of 15  Figure 10 shows an example of iceberg training data used in the model and is a good indicator of a complex situation where data are to be labelled. It could be argued that too many objects are not labelled, leaving them out of training, but in opposition to this, one could say that too many small objects are included, and these are not of great importance. In Figure 11, training objects are also seen to be located within the large piece of floating ice in the right side of the image, this also raises the question of icebergs being present in other types of ice, such as in this study [23], or if such large pieces of floating ice should be in a class of their own or maybe not be included at all.  Figure 10. Example of icebergs detected with an adaptive thresholding algorithm in Sentinel-1 data. Since ships are clearly defined objects, populating a SAR dataset with these does not face the same issues as the icebergs. The

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the criteria used to split the data for deep learning model training (e.g., train, test, validation)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Based on the provided context, there isn't explicit information about the specific criteria used to split the data for deep learning model training into train, test, and validation datasets. However, it can be inferred that the authors have followed common practices in machine learning and deep learning when splitting the data. Typically, the dataset is divided into three subsets: training, validation, and testing. The training set is used to fit the model, while the validation set is employed during the training process to fine-tune hyperparameters and prevent overfitting. Lastly, the testing set is utilized after the model has been fully trained to evaluate its performance on unseen data.

In this case, the authors mention that the model was trained for 350 epochs and evaluated using various metrics like precision, recall, F1, GIoU, and mAP. These evaluations were performed based on model validation data, which consisted of 321 image tiles. This suggests that the authors did use a separate validation dataset to assess the model's performance during training. Although the exact methodology for splitting the data is not mentioned, it is likely that the authors adhered to standard practices in machine learning and deep learning by dividing their dataset into training, validation, and possibly testing subsets.