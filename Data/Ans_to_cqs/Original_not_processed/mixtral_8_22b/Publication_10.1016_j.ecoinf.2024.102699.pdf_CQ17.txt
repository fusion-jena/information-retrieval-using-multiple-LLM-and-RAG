Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

The evaluated augmentation techniques consistently exhibited the
same qualitative effects across all three of our deep learning models.
Specifically, if the performance of an augmentation set improved for one
model, it also improved for the other two, and vice versa. However,
further research is needed to determine if this observation can be
generalized. For optimizing augmentation strategies, a more effective
approach would be to use only the least computationally intensive
models, e.g., DenseNet-161 or ResNet-50. The best combined augmen-
tations would then be applied to the best-performing model (ViT-B/16).
In our future work, we plan on focusing on the creation of so-called
no-call classifiers with training samples that do not contain bird events
in general. For this purpose, as well as to explore different transformer-
based models with improved prediction scores, encompassing, i.a., data-
efficient image transformers (DeiT) as well as hybrid transformers (Han

Table 2
Overview of our augmentation strategies, their IDs, and related information. For DenseNet-161 and ViT-B/16, their training times are provided in minutes per epoch
for the different augmentation methods. For IDs 5 and 6, we added noise of the bird audio detection data set from the DCASE challenge (Berger et al., 2018; Himawan
et al., 2018; Liaqat et al., 2018), which is abbreviated as BAD.

Data augmentation

Time domain

Frequency domain

Spectrogram

Training time [min. / epoch]

DenseNet-161

ViT-B/16

Gaussian noise
Pink noise (background)
Primary background noise soundscapes
Secondary background noise soundscapes
Primary background noise (BAD)
Secondary background noise (BAD)
Background noise (e.g., wind, thunder, or aircrafts)
Mixed up random bird species
Horizontal roll
Vertical roll
Pitch shift
Time mask
Frequency mask
Gain
Loudness normalization
Horizontal flip
Vertical flip
Time stretch
tanh-based distortion

✓
✓
✓
✓
✓
✓
✓

✓

✓
✓

✓

For the ViT models, we adapted the approach of pretraining deep
bidirectional transformers for language understanding (BERT) by Devlin
et al. (2018) for birdsong classification. Table 3 provides an overview of
the investigated ViT models with their respective parameterizations.
ViT-S/16, for example, denotes a ViT variant of reduced complexity with
an input patch size of 16 × 16. The sequence length of the transformer
models is inversely proportional to the square of the provided patch size.
In the following, ViT-B/16 is further investigated as it strikes a balance
between general model complexity and classification performance.

ViT models are often computationally costly compared to conven-
tional SED models. However, our 5 s long log-mel spectrograms are more
feasible to process. The influences of class imbalances were alleviated by
utilizing the binary cross entropy based focal loss as well as the so-called
scaled focal loss (Arunodhayan Sampathkumar, 2021). Our training
setup includes the Adam optimizer (Kingma and Ba, 2015) with a
concatenating cosine-annealing linear scheduler with an initial learning
rate of 0.0001, decaying by a factor of 0.001⋅learning rate, and a batch
size of 32. For validation, we used a 5-fold cross validation. Given the
class imbalance, we additionally deployed a data set sampler by
upsampling and duplicating randomly selected samples and augmenting
them. Our models were trained for 50 epochs without mixing up aug-
mentations as well as for 100 epochs with mixing up augmentations.
Early stopping was introduced to prevent overfitting when no further

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the regularization methods used to prevent overfitting in the deep learning pipeline (e.g., dropout, L2 regularization)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Answer: Based on the given context, there is no explicit mention of specific regularization methods such as dropout or L2 regularization being employed in the deep learning pipeline. However, some measures have been taken to address potential overfitting issues. These include using early stopping during training, which halts the training process once the model's performance on the validation set stops improving. Additionally, the context mentions utilizing the binary cross entropy based focal loss and scaled focal loss, which could potentially help mitigate the impact of class imbalance and improve the model's ability to generalize better. Furthermore, the context discusses employing a data set sampler by upsampling and duplicating randomly selected samples and augmenting them, which might contribute to reducing overfitting by providing more diverse training examples.