Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

In  the  development  stage,  the  preprocessed  data  was  divided  into 
training (80%), validation (10%), and test sets (10%) for model training 
and testing purposes (Shah et al., 2018), followed by the construction of 
predictive  models  using  both  deep  learning  algorithms  (e.g.,  Deep 
Neural  Networks)  and  traditional  machine  learning  approaches  (e.g., 
AdaBoost  Regressor,  Support  Vector  Regressor,  etc.),  with  hyper-
parameter tuning performed via GridSearchCV with cross-validation (cv 
= 10).  While some studies  might  use different proportions, such as  a 
70–30 split between training and testing/validation (Khan et al., 2022), 
the  80–10-10  split  employed  in  this  study  ensured  a  more  extensive 
training set, potentially leading to a better-generalized model. The test 
set,  which  the  model  has  not  previously  seen  during  the  training  or 
validation phases indicates the model’s performance in real-world sce-
narios (Shah et al., 2018).

A R T I C L E  I N F O    

A B S T R A C T    

Keywords: 
Oil palm 
Yield prediction 
Machine learning 
Deep learning 
Agriculture

Employing GridSearchCV ensured that each candidate combination 
of  hyperparameters  is  assessed  using  cross-validation  with  a  fixed 
number of folds, in this case, ten, as highlighted by Shahhosseini et al. 
(2021). This tenfold cross-validation provides a reliable estimate of the 
model’s performance, balancing the trade-off between bias and variance 
and  guarding  against  overfitting.  The  hyperparameter  tuning  process 
implemented  in  this  study  relied  on  a  detailed  and  systematic  search 
across a predefined grid of hyperparameter values. A unique parameter 
grid  was  defined  for  each  model  considered,  targeting specific  model 
characteristics such as the number of estimators in ensemble methods or 
the  depth  of  trees  in  decision  tree-based  algorithms.  This  process 
ensured that the eventual choice of hyperparameters was not arbitrary 
but  is  backed  by  empirical  evidence  that  aligns  with  Schratz  et  al.

Recognizing the significant role of oil palm, extensive research has been 
conducted,  as  evidenced  by  studies  from  Melidawati  et  al.  (2021), 
Tuerxun et al. (2020), and Ang et al. (2022), each contributing insights 
into  oil  palm  cultivation  and  management.  Predicting  oil  palm  crop 
yields is crucial to effectively managing and optimizing the palm supply 
chain. It requires the incorporation of multiple datasets and is influenced 
by numerous variables, including climate patterns, soil quality, fertilizer 
use, and seed varieties (Xu et al., 2019). Applying Machine learning and 
deep learning models can accurately predict crop yields, aiding farmers 
in harvest planning and crop management decisions (Attri et al., 2023). 
Although these techniques have been implemented across various crops 
for environment-based yield forecasting, their deployment for predictive 
analysis of oil palm yields remains in its infancy (Rajakal et al., 2021).

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the criteria used to split the data for deep learning model training (e.g., train, test, validation)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer: In the given context, it is mentioned that the preprocessed data was divided into three parts for model training and testing purposes. These parts include the training set (80%), the validation set (10%), and the test set (10%). The training set is used to fit the model, while the validation set is utilized to tune the parameters of the model. Lastly, the test set is used to evaluate the final performance of the model. This approach ensures that the model does not see the test data during the training phase, allowing for a more accurate assessment of its performance in real-world scenarios.