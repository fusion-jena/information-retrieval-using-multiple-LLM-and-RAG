Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

2. Model training: We process data with a deep neural
network and adjust the training epoch, batch size, and
volume size to output a classiﬁer for prediction.
3. Result output: The point cloud test set is segmented,
and we can obtain the ﬁnal segmentation results. The
output ﬁles include point cloud geometric partition
graphs, SPGs, and segmentation results.

Results and Discussion

2165

Fig. 1 The pipeline of the SPG framework. a Represents the original
input data (taking a tree and a pole as examples). b Is a hand-crafted
point cloud partition, c each partition is converted into a superpoint of

the SPG, and d is the network for superpoint embedding and
segmentation based on PointNet and GRU. The black lines represent
the superedges

with K ¼ P3
adjacency:

i¼1 ki,

E ¼ (cid:3)

3
X

i¼1

ki
K

log

(cid:2) (cid:3)
ki
K

in accordance with the optimal

ð1Þ

The linearity, planarity, and scattering are derived by the

following terms:

linearity ¼

planrity ¼

scattering ¼

k1 (cid:3) k2
k1
k2 (cid:3) k3
k1

k3
k1

ð2Þ

The linearity describes how elongated the adjacency is,
the planarity assesses how plane the adjacency is, the high-
scattering values are used to represent an isotropic and
spherical adjacency. We describe these three point features
as geometric features.

Hu, X., & Yuan, Y. (2016). Deep-learning-based classiﬁcation for
DTM extraction from ALS point cloud. Remote Sensing, 8(9),
730.

Ioffe, S., & Szegedy, C. (2015). Batch normalization: Accelerating
deep network training by reducing internal covariate shift. Paper
presented in International Conference on Machine Learning,
Lille, pp. 448–456.

Landrieu, L., & Boussaha, M. (2019). Point cloud oversegmentation
with graph-structured deep metric learning. Paper presented at

123

2172

Journal of the Indian Society of Remote Sensing (September 2021) 49(9):2163–2172

the 2019 The IEEE Conference on Computer Vision and Pattern
Recognition (CVPR).

Landrieu, L., & Obozinski, G. (2017). Cut pursuit: Fast algorithms to
learn piecewise constant functions. Siam Journal on Imaging
Sciences, 10(4), 1724–1766.

Point Cloud Segmentation

First, we compute the geometric partition. Then, each
geometric partition is converted into a superpoint. Next, we
input the superpoints in the SPG to a PointNet network for
superpoint embedding. The ﬁnal operation is to segment
the point clouds based on context with a graph convolution
network.

We use PyTorch as the deep learning framework and
Ubuntu 16.0 as the experimental platform, and we ﬁnished
the experiments with 32 GB of memory and an NVIDIA
RTX 2070 GPU.

The main experimental pipeline of the experiments is as

follows:

1. Data pre-processing: We only use point coordinate
information in this algorithm, which corresponds to the
label of each point. We pre-process input data with
voxelization subsampling by computing per-voxel

mean positions and observations over a regular 3D
grid, which can help increase the computational
efﬁciency. After that, we convert the information and
labels into the hdf5 format.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which platform was used to deploy the deep learning model (e.g., AWS, Azure, Google Cloud platform)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Based on the given context, it appears that Ubuntu 16.0 was used as the experimental platform for the deep learning model. However, there is no explicit mention of any specific cloud platforms such as AWS, Azure, or Google Cloud Platform being used for deployment. Therefore, it cannot be determined from the provided context which platform was used to deploy the deep learning model.