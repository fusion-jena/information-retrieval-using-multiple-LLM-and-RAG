Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

2.5. Convolutional neural network architecture 

To classify the spectrograms, a two-dimensional convolutional neu-
ral network (CNN) was constructed using the Python package Keras with 
a Tensorflow backend (Abadi et al., 2015; Chollet, 2015). Each of the 
four convolutional layers had a 3 × 3 kernel. The first two layers had 64 
filters, while the latter two had 128 filters. Following each convolution 
block, a batch normalization layer and max pooling layer were applied. 
After the first convolution step, both the kernel and stride of the max 
pooling layer were 2, while for the final three, a kernel and stride size of 
4 were used (see Fig. 5 for more details). 

These network parameters were selected using the Python optimi-
zation library Hyperopt. Hyperopt compares the results of training the 
network  on  different  combinations  of  parameters  using  an  oriented 
random search (Bergstra et al., 2013).

2.4.1. Training database assembly 

To assemble a training database, three randomly selected days from 
each month of the calendar year (see Table 1) were selected for anno-
tation. Select spectrogram images were manually labeled via visual in-
spection by two trained graduate students into a set of sound categories 
that evolved as the year progressed. On average, around 60 images could 
be  annotated  per  minute,  which  corresponds  to  8  min  of  audio  data. 
Therefore,  annotating  every  single  spectrogram  from  a  single  day 
(10,800 images) would take 3 h. Assembling the training database took 
less time in practice because only 10–15% of the spectrograms from each 
of the selected days were actually annotated (many spectrograms which 
contained only background noise were simply not needed). 

In total, this database consists of over 40 k images of bio-, anthro- 
and  geophonies.  The  full  contents  of  the  database  are  presented  in 
Table 2.

Pre-training on the both ResNet50 (He et al., 2016) and Inception 
(Szegedy et al., 2014) neural networks did not meaningfully improve 
classification performance, therefore this simpler architecture, similar to 
those implemented by (Ruff et al., 2020; Sprengel et al., 2016) was used 
instead. 

2.6. Generating prediction record

Transfer learning, where a model pre-trained on one dataset is re- 
trained  to  classify  a  similar  datset,  is  one  convenient  approach  to 
effectively  utilize  the  power  of  CNNs.  Well-known  pre-trained  archi-
tectures such as Inception, MobileNet, and Resnet50 have recently been 
used with great success for the classification of birds in soundscape re-
cordings (Florentin et al., 2020; He et al., 2016; Howard et al., 2017; 
Incze et al., 2018; LeBien et al., 2020; Sevilla and Glotin, 2017; Szegedy 
et  al.,  2014).  Such  networks  are  typically  pre-trained  on  large  image 
databases such as ImageNet, which contains over one million samples 
distributed across 1000 classes (Deng et al., 2009). However, in cases 
where  targeting  foreground  species  is  the  main  task,  or  with  more 
acoustically sparse soundscapes, CNN architectures with far fewer (<10) 
convolutional layers have proven more than sufficient, and indeed, may

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which frameworks are used to build the deep learning model (e.g., TensorFlow, PyTorch)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The deep learning model used in this study is built using the Python package Keras with a Tensorflow backend. This information can be found in section 2.5 of the given context, titled "Convolutional Neural Network Architecture." Specifically, it states, "To classify the spectrograms, a two-dimensional convolutional neural network (CNN) was constructed using the Python package Keras with a Tensorflow backend." Therefore, the frameworks used to build the deep learning model are Keras and Tensorflow.