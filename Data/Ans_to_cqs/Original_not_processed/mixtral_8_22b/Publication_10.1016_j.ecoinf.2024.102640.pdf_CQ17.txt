Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

5.2. Deep GVI learning 

In  GreenCam,  we  measure  photo  GVI  by  SegFormer  (Xie  et  al., 
2021),  a  state-of-the-art  Transformer-based  model  for  semantic  seg-
mentation. As shown in Fig. 12, SegFormer follows the encoder-decoder 
structure, which combines a Transformer-based encoder (i.e., MiT) with 
a  lightweight  decoder  (i.e.,  ALL-MLP)  that  is  composed  entirely  of 
multilayer perceptron (MLP) blocks.

Caesar, H., Uijlings, J., Ferrari, V., 2018. Coco-stuff: Thing and stuff classes in context. In: 

Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, 
pp. 1209–1218. 

Cai, B.Y., Li, X., Seiferling, I., Ratti, C., 2018. Treepedia 2.0: applying deep learning for 
large-scale quantification of urban tree cover. In: 2018 IEEE International Congress 
on Big Data (BigData Congress). IEEE, pp. 49–56. 

Ca˜nas, I., Ayuga, E., Ayuga, F., 2009. A contribution to the assessment of scenic quality of 
landscapes based on preferences expressed by the public. Land Use Policy 26, 
1173–1181. 

Chen, Z., Xu, B., Gao, B., 2015. Assessing visual green effects of individual urban trees 

using airborne lidar data. Sci. Total Environ. 536, 232–244. 

Chen, L.-C., Zhu, Y., Papandreou, G., Schroff, F., Adam, H., 2018. Encoder-decoder with 

atrous separable convolution for semantic image segmentation. In: Proceedings of 
the European Conference on Computer Vision (ECCV).

Parameter (m) 

Flops (g) 

FCN 
HRNet 
PSPNet 
DeeplabV3+
SegFormer 

ResNet50 
HRNet-W18 
MobileNetV2 
MobileNetV2 
MiT-B1 

59.12 
60.74 
54.94 
58.89 
63.73 

78.88 
80.58 
75.97 
78.72 
84.25 

0.719 
0.727 
0.664 
0.695 
0.745 

0.732 
0.739 
0.679 
0.712 
0.756 

0.716 
0.727 
0.689 
0.718 
0.761 

6.67 
2.63 
0.56 
1.39 
1.51 

32.951 
9.639 
2.377 
5.815 
13.665 

277.225 
32.598 
5.971 
52.753 
26.475  

Table 2 
IOU and PA of classes.  

Classes 

IOU 

PA 

classes 

Tree 
Lawn 
Shrub 
Flower 
Flat 

85.19 
72.95 
60.34 
78.13 
79.04 

92.27 
82.19 
74.2 
85.58 
90.88     

sky 
facility 
architecture 
water body 

IOU 

88.84 
32.05 
61.81 
82.63 

PA 

95.2 
42.78 
78.09 
90.5

Fig. 6. Structure of the neural network of learning eye-phone distance, where 
the  number  attached  to  each  layer  is  the  number  of  neurons  included  in 
that layer. 

structure of EPDNet, which works with the face box's width and height 
as  input  and  the  eye-phone  distance  as  output.  The  ReLU  activation 
function  and  sigmoid  are  used  to  cope  with  non-linearity.  The  five 
neuron  layers  following  the  concatenation  are  all  fully  connected.  In 
EPDNet training, we employ the Mean Squared Error (MSE) loss func-
tion and the Adam optimizer with a learning rate of 0.0001. We use the 
R2  metric to assess the model's fit to the observed data. After training, 
this model fits well with the R2  of 0.95.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the regularization methods used to prevent overfitting in the deep learning pipeline (e.g., dropout, L2 regularization)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The context does not provide specific information about the regularization methods used in the deep learning pipeline mentioned in the text. However, some common regularization techniques used to prevent overfitting in deep learning models include dropout, L1/L2 regularization, early stopping, and data augmentation. Dropout randomly sets a fraction of input units to 0 during training time, helping to avoid overfitting. L1/L2 regularization adds a penalty term to the loss function, encouraging smaller weights and reducing complexity. Early stopping stops training when validation performance starts degrading, preventing overfitting due to excessive training. Data augmentation generates new training samples from existing ones through transformations like rotation or scaling, increasing dataset size and diversity.