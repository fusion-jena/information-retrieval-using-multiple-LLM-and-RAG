Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

2. Methods 

2.1. CNN training data

Augmentation was applied to the entire training dataset. The images 
were augmented using rotations between 0 and 360 degrees, reflected 
by the vertical axis, and vertically shifted by +/(cid:0) 5 pixels. In addition, 
standard image normalization for CNNs was applied, mapping the 8 bit 
pixel values to floating-point values between 0 and 1. The dataset was 
then randomly split into training, validation, and test sets, containing 
70%, 15% and 15% of the images, respectively. The validation set was 
used  to  control  (and  terminate)  the  training  process,  while  final  per-
formance metrics were estimated using the test set.

Data availability 

Salmon scale 9056 image dataset: 
doi:10.21335/NMDC-1050865887 
Expert  reading  of  extra  150 

335/NMDC-1462728994 

image  dataset:  doi:10.21 

CNN based architecture: EfficientNet: https://github.com/qubvel/ 

efficientnet 

Pre-trained  network  weights  (EfficientNet–B4):  https://github. 

com/qubvel/efficientnet/blob/master/efficientnet/weights.py 

Declaration of Competing Interest 

The authors declare that they have no known competing financial 
interests or personal relationship that could have appeared to influence 
the work reported in this paper. 

Acknowledgements 

We gratefully acknowledge valuable advice on the CNN architecture 
provided by Hyeongji Kim from the Institute of Marine Research, Ber-
gen, Norway. This project was funded in part by Research Council of 
Norway  projects  270966/O70  (COGMAR  -  Ubiquitous  cognitive com-
puter vision for marine services). 

References

We found that the use of transfer learning when training our CNNs 
was crucial for their performance. Transfer learning is a common tech-
nique within deep learning, where networks trained to perform well on 
one  task  can  be  adapted  with  some  training  towards  similar  tasks 
(Yosinski et al., 2014). This is especially useful when datasets are sparse 
and more narrowly distributed. Often, a significant benefit can be gained 
by starting from a pre-trained network where the first and intermediate 
layers in the network already have been shaped by training on a large 
and  diverse  dataset.  EfficientNet  is  available  pretrained  on  the  large 
benchmark dataset, ImageNet, containing around 1.4 million images in 
1000 classes (Deng et al., 2009), more than 100 times the number of 
labelled salmon scale images used in this study. The network's ability to 
abstract lower level but more generally useful features has then already

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the data augmentation techniques applied in the deep learning pipeline (e.g., Fliping, Roating, Scaling)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
In the given context, several data augmentation techniques were applied to the entire training dataset for the Convolutional Neural Network (CNN) model. These techniques include rotations between 0 and 360 degrees, reflection by the vertical axis, and vertical shifting by ±5 pixels. Additionally, standard image normalization for CNNs was performed, which maps the 8-bit pixel values to floating-point values between 0 and 1. Data augmentation helps improve the generalizability and robustness of the model by creating new training examples through various transformations of existing ones. It also prevents overfitting by increasing the diversity of the training data without collecting additional samples.