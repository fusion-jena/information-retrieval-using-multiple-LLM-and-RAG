Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Our study was mainly to propose a new model based on CNN, which 
provides an efficient and effective approach for single seed classification 
and retrieval. Our network architecture, SeedNet, contains six learnable 
layers, 5 of which are convolutional, and the last is fully-connected. The 
ReLU (Rectified Linear Unit) activation is applied to the output of every 
convolutional  layer.  Moreover,  we  periodically  insert  a  pooling  layer 
between successive convolutional layers, in order to reduce the amount 
of parameters and computation in the network, and hence to also control 
overfitting. More precisely, we employ a Max pooling strategy with a 
3 × 3 filter size, and 1 × 1 stride. The input image size is 224 × 224 × 3. 
According to the chosen dataset, the output of the last fully-connected 
layer  is  fed  to  a  N-way  softmax,  which  produces  a  distribution  over 
the N class labels to predict, i.e. 6 for the Canadian and 23 for the local

3. Results and discussion 

We  now  describe  the  experimentation  conducted  in  this  work.  In 
detail, in Section 3.1 we first describe the experimental setup adopted 
for the classification and retrieval tasks. Then, we report the results of 
the  experiments  performed  on  both  datasets  and  tasks  with  SeedNet, 
compared to existing CNNs (Section 3.2). After a further comparison of 
deep  vs  machine  learning methods  in Section  3.3, we  give  a detailed 
discussion of the obtained results in Section 3.4. 

3.1. Setup 

3.1.1. Seed image classification via deep learning

4. Conclusions 

In this work, we mainly focused to realise and propose a brand new 
CNN  architecture  for  seed  images  classification  and  retrieval  tasks, 
named  SeedNet.  In  addition  to  it,  we  studied  the  performances  of 
different  CNNs  and  compared  them  against  our  CNN  model  for  both 
tasks by using two very different datasets. The aim was to evaluate the 
possibility to find the architecture of the best performing model and the 
best  training  options  for  these  issues.  We  also  compare  deep  against 
traditional  machine  learning  methods,  trained  with  handcrafted  fea-
tures, for both tasks.

3.1.2. Seed image retrieval via deep learning 

Beyond  the  classification  task,  we  verified  the  possibility  of  using 
convolutional neural networks for seed image retrieval and evaluated 
their performances. Generally, a content-based image retrieval system 
searches and retrieves images based on the visual contents of the images, 
i.e. features such as colour, texture, shape, and spatial layout. CNNs can 
replace traditional feature extractors since they have a solid ability to 
extract complex features that express the image in much more detail. So, 

ComputersandElectronicsinAgriculture187(2021)1062695A. Loddo et al.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What strategies are employed to handle randomness in the deep learning pipeline (e.g., random seed value)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The paper does not explicitly discuss any specific strategies employed to handle randomness in the deep learning pipeline, such as managing random seed values. However, some common practices used in deep learning models include setting fixed seeds for reproducible results or averaging multiple runs with different initializations to mitigate the effects of randomness. These techniques help ensure consistent performance across various stages of the deep learning process.

Based on the information given, there is no direct mention of how the authors handled randomness in their proposed model, SeedNet. Therefore, one cannot provide a definitive answer regarding the strategies employed to manage randomness in the deep learning pipeline.