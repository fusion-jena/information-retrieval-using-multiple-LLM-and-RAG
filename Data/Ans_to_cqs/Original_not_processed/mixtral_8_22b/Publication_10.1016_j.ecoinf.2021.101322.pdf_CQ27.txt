Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

2. Methods 

2.1. CNN training data

2.3. Implementation and training 

The  CNN  was  implemented  using  the  Keras  (Chollet,  2015)  and 
TensorFlow  (Abadi  et  al.,  2016)  software  packages  implemented  in 
Python, and computation was performed using CUDA version 9.1 and 
CuDNN  with  Nvidia  (Nvidia  Corp.,  Santa  Clara,  California)  P100 
accelerator cards with 12 GB of GPU memory. We used a Keras imple-
mentation of EfficientNet–B4 called EfficientNet V1.1.0 (https://github. 
com/qubvel/efficientnet).  The  pre-trained  weights  used  for  transfer 
learning were available through this API.

From our own experience, we frequently observe that CNN output is 

EcologicalInformatics63(2021)1013226R. Vabø et al.

Data availability 

Salmon scale 9056 image dataset: 
doi:10.21335/NMDC-1050865887 
Expert  reading  of  extra  150 

335/NMDC-1462728994 

image  dataset:  doi:10.21 

CNN based architecture: EfficientNet: https://github.com/qubvel/ 

efficientnet 

Pre-trained  network  weights  (EfficientNet–B4):  https://github. 

com/qubvel/efficientnet/blob/master/efficientnet/weights.py 

Declaration of Competing Interest 

The authors declare that they have no known competing financial 
interests or personal relationship that could have appeared to influence 
the work reported in this paper. 

Acknowledgements 

We gratefully acknowledge valuable advice on the CNN architecture 
provided by Hyeongji Kim from the Institute of Marine Research, Ber-
gen, Norway. This project was funded in part by Research Council of 
Norway  projects  270966/O70  (COGMAR  -  Ubiquitous  cognitive com-
puter vision for marine services). 

References

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What process was followed to deploy the trained deep learning model (e.g., Model serialization, Platform selection)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Unfortunately, there isn't enough information in the given context to provide a detailed answer about the deployment process of the trained deep learning model. However, it can be inferred that the implementation and training of the Convolutional Neural Network (CNN) were done using Python programming language along with Keras and TensorFlow libraries. Additionally, the computations were carried out using CUDA version 9.1 and CuDNN with Nvidia P100 accelerator cards having 12GB of GPU memory.

As for the specific details regarding the deployment process such as model serialization or platform selection, these are not mentioned in the provided context. Therefore, I cannot provide any further insights into those aspects.