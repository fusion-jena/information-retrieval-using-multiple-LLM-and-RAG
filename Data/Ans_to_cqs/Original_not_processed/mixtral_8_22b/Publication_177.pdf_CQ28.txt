Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

TABLE I.  

PERFORMANCE METRICS FOR UBD_45 DATASET 

Model 

Performance Metrics 

Sensitivity 

Specificity 

Precision 

F1-Score 

InceptionResnet2 

95.93 

Resnet50 

Xception 

Inceptionv3 

Mobilenetv2 

Googlenet 

95.93 

94.44 

91.85 

92.04 

85.00 

99.92 

99.90 

99.87 

99.85 

99.83 

99.62 

97.65 

97.20 

95.90 

94.73 

95.16 

86.15 

96.78 

96.56 

95.16 

93.27 

93.57 

85.57 

TABLE II.  

PERFORMANCE METRICS FOR VP_200 DATASET 

Model 

Performance Metrics 

Sensitivity 

Specificity 

Precision 

F1-Score 

InceptionResnet2 

91.20 

Resnet50 

Xception 

Inceptionv3 

Mobilenetv2 

Googlenet 

88.68 

91.80 

88.65 

85.58 

83.28 

99.96 

99.94 

99.96 

99.94 

99.93 

99.92 

91.92 

89.46 

92.83 

90.47 

87.20 

84.90 

91.56 

89.07 

92.31 

89.55 

86.38 

84.08

Fig. 4.  Classification accuracy for validation and test datasets for UBD_45 

Fig. 5.  Classification accuracy for validation and test datasets for VP_200 

The  other  performance  metrics  including  sensitivity, 
specificity,  precision,  and  F1-measure  for  all  models  for 
UBD_45 and VP_200 datasets are shown in Table I and Table 
II, respectively. The specificity values for all models for both 
datasets  were  found  to  be  above  99%  which  indicates  that 
these  models  were  able  to  highly  correctly  identify  those 

Authorized licensed use limited to: Thueringer Universitaets. Downloaded on September 08,2024 at 16:24:56 UTC from IEEE Xplore.  Restrictions apply.

of 87.8% and 91.2% respectively. A comparative evaluation 
of deep learning models was performed by [20] to identify 109 
plant  species  from  the  28,046  images  collected  online.  The 
results  showed  that  MobileNetV2  emerged  as  the  best 
performing  model  with  an  accuracy  of  83.9%  compared  to 
other models. Unlike the approach of [17],[18],[19], and [20], 
Krause  et  al.  [21]  proposed  a  two-stage  approach  for 
identifying  plant  species  from  the  natural  environment.  In 
their  proposed  method,  the  authors  used  a  deep  learning 
semantic segmentation model to segment the plant from the 
images and then used a multiscale crop of the segmented plant 
to train an Inception-ResNet-V2 model. Using the dataset of 
100  species  with  4,500  training  images,  the  proposed 
approach improved the performance of the model by 5.4% to 
achieve  an  accuracy  of  89.21%.  To  study  the  taxonomic

The  selected  network  models  were  initialized  with  pre-
trained ImageNet weights and then fine-tuned to our datasets. 
The performance of a deep neural network for a dataset highly 
depends on network hyperparameters. The selection and fine-
tuning of  optimized hyperparameters  is  generally  a  difficult 
and  time-consuming  task.  Instead  of  manually  selecting  the 
hyperparameters, we employed Bayesian optimization to find 
their optimal values for each of the six models.  A Gaussian 
process  model  of  the  objective  function  is  used  by  the 
Bayesian optimization technique.  Different variables can be 
optimized using this technique such as network section depth, 
batch size, initial learning rate, momentum, and regularization 
strength. For this study, we optimized the network for batch 
size  (between  1  and  32)  and  initial  learning  rate  (between 
1×10-4  and  1×10-2).  The  optimization  was  performed  by

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which platform was used to deploy the deep learning model (e.g., AWS, Azure, Google Cloud platform)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Unfortunately, there is no information available regarding the deployment platform of the deep learning models discussed in the given context. Therefore, it cannot be determined whether they were deployed on platforms like AWS, Azure, or Google Cloud Platform.