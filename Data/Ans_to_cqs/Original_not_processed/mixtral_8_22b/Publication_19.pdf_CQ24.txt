Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

TABLE II.  

HYPERPARAMETERS DETERMINED USING GRID SEARCH 

Model Name 

Inception-V3 
MobileNet-V2 
ResNet-18 
DenseNet-121 

Batch 
Size 
48 
32 
32 
16 

Learning 
Rate 
0.05 
0.01 
0.005 
0.001 

Parameters 
# of 
Epochs 
75 
100 
150 
100 

Input Image Size 

299 (cid:3400) 299 (cid:3400) 3 
224 (cid:3400) 224 (cid:3400) 3 
224 (cid:3400) 224 (cid:3400) 3 
224 (cid:3400) 224 (cid:3400) 3 

C.  Results 

  As  Table  III  show  all  models  performed  reasonably  well 
with macro-F1 averages above 91%. Because the models are to 
be deployed on IoT edge devices, the size of each model is an 
important  consideration.  As  Table  III  shows 
the  best 
performing model was Inception-V3 with a macro Average F1 
score of 0.93, and the smallest size of 175 MB.   

TABLE III.  

BEST RESULTS FOR EACH NN ARCHITECTURE 

Model 

InceptionV3 
DenseNet-121 
ResNet-18 
MobileNetV2 

Model Size 
(MB) 
175 
446 
480 
507 

Accuracy 

94% 
93% 
92% 
93%

Keywords—deep  learning,  transfer  learning,  convolutional 
neural  networks,  animal  classification,  camera  trap,  wildlife 
monitoring, edge computing, TensorFlow lite, raspberry pi, IoT 

I.  INTRODUCTION

The  purpose  of  research  reported  here  is  to  automatically 
classify  images  retrieved  from  camera  traps  and  to  send  the 
species information instantly to the concerned authorities using 
deep learning and edge analytics. This research is aligned with 
UN  sustainable  goal  15,  “Life  on  Land”  that  focuses  on 
promoting and restoring sustainability on land. This approach 
will  help  accelerate  research  to  address  biodiversity  loss 
because  scientists  will  be  able  to  acquire  this  data  faster  and 
cheaper.

results.  
   This 
However, a number of issues need to be addressed further.  First 
the data is highly unbalanced, and therefore, using SMOTE [23] 
or  similar  data  balancing  techniques  may  help  improve  the 
results further.  Secondly, recent architectures like EfficientNet 
[19]  that  performed  well  in  creating  smaller  networks  can  be 
explored  further.  In  fact,  our  initial  investigations  show  that 
EfficientNetB1 produced performance similar to Inception-V3 
(F1-score  macro  average  =  0.94)  on  this  data  set  as  well  but 
with a much smaller model size (~ 54 MB).  
   This  paper  showed  that  potentially  significant  gains  can  be 
achieved in reducing both the time to reporting, and the effort 
required 
traps.  
Consequently,  using  deep  learning  technologies  on  the  edge 
with  an  IoT  infrastructure  can  potentially  revolutionize  the 
camera  trap  value-chain.  Finally,  since  the  inference  is  being

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What strategies are employed to handle randomness in the deep learning pipeline (e.g., random seed value)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer: The table provided does not contain any specific details about handling randomness in the deep learning pipeline or setting a random seed value. However, it is common practice in deep learning to use a fixed random seed for reproducibility purposes. By setting a fixed random seed, one can ensure that the same results are obtained when training the model multiple times. Additionally, some popular libraries such as Tensorflow and PyTorch provide built-in functions to set a global random seed. It should also be noted that while fixing the random seed ensures reproducibility, it might limit the exploration of different solutions during optimization. Therefore, it is important to strike a balance between reproducibility and exploring various solutions.