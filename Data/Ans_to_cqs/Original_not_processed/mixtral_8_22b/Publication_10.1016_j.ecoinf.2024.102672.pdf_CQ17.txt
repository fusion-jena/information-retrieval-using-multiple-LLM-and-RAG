Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Opposite to other families of ML models that have a narrow range of 
hyperparameters  to  adjust,  ANN  are  defined  by  different  types  of 
hyperparameters,  which  together  with  the  computational  cost  of 
training deep ANN, restricts the options to optimize. On the one hand, 
we have the hyperparameters that define the architecture of the ANN 
(number of layers and number of neurons), while on the other hand we 
have the hyperparameters that control de training process (mainly the 
learning rate, the optimizer, the batch size and the number of epochs 
that the training lasts). In order to avoid an exhaustive search that could 
consume a lot of time, a small dimensional space was initially defined 
and  explored  with  the  original variables.  The initial  hyperparameters 
that composed this space are shown in Table 1. The number of epochs 
was maintained in 500 as it proved to guarantee the stabilization of the

loss curves during the training. As optimizer, the Adam algorithm was 
used, which is a stochastic gradient descent method. Then, one of the 
hyperparameters was modified iteratively following the direction that

The result of this process was added to the dataset as a new cate-
gorical binary variable that stored the existence of stratification or not 
(took the value of 0 when the reservoir was not stratified and 1 when it 
was stratified). 

2.5.3. Forecasting ML models 

A classification model was designed in order to detect if there existed 

Table 1 
Initial hyperparameters space.  

Initial hyperparameters space 

Hyperparameters 

Values 

Layers 

Number of neurons of the dense layer 
Dropout rate of the dropout layer 
Learning rate 
Batch size 

1 dense layer, 1 dense layer +1 dropout 
layer 
32, 64 
0.2, 0.4 
(cid:0) 3, 10
10
32, 64  

(cid:0) 4

67.6 
66.9 
70.4 
70.3 
70.0 
70.6 

P50 

1.47 
1.66 
1.26 
1.18 
1.04 
1.11 

Testing 

MAE 

2.47 
2.63 
2.28 
1.99 
1.99 
2.10 

Percentile 

65.5 
66.7 
70.8 
67.3 
67.3 
67.9 

P50 

1.54 
1.55 
1.23 
0.98 
0.93 
1.25  

* The number of neurons in successive dense layers is separated by a comma, with the dropout rate in parentheses if a dropout layer existed after a dense layer. 

lagged variables were added this improvement only took place for the 
test set. Therefore, in order to reach a balance between the train and test 
fractions, the optimal model to classify the days as presenting thermal 
stratification or not was the model with up to 4 days-lagged variables. 
This model presents a testing accuracy of 96.0% and AUC of 0.99.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the regularization methods used to prevent overfitting in the deep learning pipeline (e.g., dropout, L2 regularization)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Answer: Based on the given context, the regularization method used to prevent overfitting in the deep learning pipeline is Dropout. This can be seen from the table where the dropout rate of the dropout layer is listed as one of the hyperparameters. Dropout is a technique where randomly selected neurons are ignored during training, which helps prevent overfitting. Other common regularization techniques such as L2 regularization are not explicitly mentioned in the provided context.