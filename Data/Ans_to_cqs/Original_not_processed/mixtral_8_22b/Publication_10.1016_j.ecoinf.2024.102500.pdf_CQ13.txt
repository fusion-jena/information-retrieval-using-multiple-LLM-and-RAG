Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

maximum depth, minimum sample split, and learning rate (Bolick et al., 
2023). These refined hyperparameters are selected to enhance the ac-
curacy and predictive capabilities of the models, rendering them suit-
able for effective utilization in academic research and publications.

3.2.2. Tuning hyperparameters

3.2.2.8. LGBM  hyperparameter  tweaking. Table  2  shows  the  LGBM 
model  hyperparameters  selected  for  nitrate  and  DO  prediction  to 
maximize  performance.  Subsamples  reduce  overfitting  and  min_-
child_samples  control local pattern  sensitivity. Overfitting is  prevented 
via reg_lambda. As mentioned, n_estimators, learning_rate, max_depth, and 
random_state were used. 

3.2.2.9. GB  model  hyperparameter  tuning. As  seen  in  Table  2,  the 
hyperparameter values for the nitrate and DO model are reported below. 
As described in the preceding sections, each of these parameters is uti-
lized. These hyperparameter settings were carefully chosen to enhance 
the nitrate and DO model performances.

Hyperparameter  tuning  plays  a  crucial role  in  optimizing  the  per-
formance of a model by improving its ability to predict observed and 
predicted ranges. The tuning process maximizes the models training and 
testing  performance.  It  will  control  overfitting  or  underfitting  issues 
(Elshawi et al., 2019). Though the process is complex and takes a long 
time,  many  optimizing  methods,  such  as  Manual  Tuning,  Bayesian 
Optimization,  and  random  grid  search  methods,  simplify  the  process 
(Yang  and  Shami,  2020).  Nevertheless,  choosing  which  optimizing 
method is best for specific data is challenging. Hyperparameter tuning of 
the decision tree model are usually configured with maximum depth and 
minimum number of samples required to split a node. For the RF model, 
extensive  experimentation  was  conducted  using  varying  numbers  of 
trees  for  the  optimal  fit.  The  gradient  boosting  model  is  tuned  with

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the hyperparameters used in the deep learning model (e.g., learning rate, optimizer)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The text does not provide information on the use of a deep learning model. However, it mentions several hyperparameters used in other machine learning models like Light Gradient Boosting Machine (LGBM) and Gradient Boosting (GB) models.

For the LGBM model, the hyperparameters used include subsamples, min_child_samples, reg_lambda, n_estimators, learning_rate, max_depth, and random_state. Subsamples help reduce overfitting, while min_child_samples control local pattern sensitivity. Reg_lambda prevents overfitting, and n_estimators determine the number of trees in the ensemble. Learning_rate controls how much each tree contributes to the final output, max_depth limits the depth of each tree, and random_state ensures reproducibility.

Similarly, for the GB model, the hyperparameters used are not explicitly stated but are implied to be similar to those used in the LGBM model. The text also mentions that extensive experimentation was conducted for the Random Forest (RF) model using varying numbers of trees for the optimal fit.

However, no mention is made of any hyperparameters related to a deep learning model, such as learning rate, optimizer, batch size, epochs, etc. Therefore, based on the given context, I cannot provide the requested information about the hyperparameters used in a deep learning model.