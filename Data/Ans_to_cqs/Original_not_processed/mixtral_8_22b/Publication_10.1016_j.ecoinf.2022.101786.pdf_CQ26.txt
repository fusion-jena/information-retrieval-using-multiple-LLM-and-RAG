Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

2.5. Model selection 

CNNs are sensitive to overfitting (Domingos, 2012). Throughout the 
training process, the algorithm goes through cycles of training on the 
training set - evaluating performance on the validation set – adjusting 
CNN node weights – before repeating the entire cycle. These cycles are 
referred to as epochs or iterations when the training dataset is too large 
to  be  processed  in  one  stroke  and  needs  to  be  subdivided  in  several 
smaller batches as is the case in this study. There is an optimum number 
of iterations before the performance on the validation and training sets 
(independent data that the CNN has not seen) start to diverge as the CNN 
overfits  and  becomes  more  specialized  at  predicting  the  training  set 
while becoming less able to predict the validation set (generalization).

challenge of collecting representative datasets in the deep sea.

Some model parameters were modified from the default configura-
tion to balance use of resources and training speed. We retained a res-
olution of 704 × 704, batch size 64, 32 subdivisions and trained up to 
6000 iterations. Other parameters were kept to default or set according 
to guidance by the developers (https://github.com/AlexeyAB/darknet). 
Manual annotations were used to generate training, validation and 
testing  datasets.  Biigle  annotations  (label  name,  centre  x,  center  y, 

EcologicalInformatics71(2022)1017863N. Piechaud and K.L. Howell

2.4. Model evaluation 

The testing dataset was composed of 500 manually annotated images 
from  the  same  transect  and  was  only  used  to  calculate  performances 
outside  the  Darknet  framework  by  comparing  CNN  predictions  with 
manual annotations. 

Predictions  come  as  a  .JSON  file  containing  the  coordinate  of  the 
bounding box of each tentative annotation as well as a confidence score 
ranging from 0.05 at minimum (lower confidence scores introduced too 
much  noise  and  therefore  were  not  recorded)  to  1  at  maximum.  Pre-
dictions made on the testing set were compared to the manual annota-
tion of the same images.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What techniques are used to address data bias during preprocessing of the deep learning pipeline (e.g., Stratified splitting, oversampling, undersampling, Diverse data collection)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Based on the given context, there isn't any explicit mention of specific techniques used to address data bias during preprocessing of the deep learning pipeline such as stratified splitting, oversampling, undersampling, or diverse data collection. However, it does discuss some aspects related to managing data for training, validating, and testing their Convolutional Neural Network (CNN).

They mentioned using manually annotated images to create separate datasets for training, validation, and testing purposes. This approach can help ensure that the network learns from a diverse range of examples and reduces potential biases caused by imbalanced classes or non-representative samples.

Additionally, they discussed the challenge of collecting representative datasets in the deep sea, which could imply that efforts have been made to gather diverse data to minimize biases. They also adjusted certain model parameters like resolution, batch size, and subdivisions to optimize resource usage and training speed.

However, without further information about how these datasets were created and whether any specific techniques were employed to handle class imbalance or other forms of data bias, we cannot definitively state what methods were used to address data bias during preprocessing.