Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

for each k-1 folds do 

1: procedure SPLIT  THE  DATASET  TO  K  FOLDS (state)
2: 
3: 
4: 

for each number of iterations do 

Split the dataset to datasets: k-2 folds (tuning set), and 1-fold (validation 

dataset) 

5: 
6: 
7: 
8: 

Train the model using the tuning set and the number of iterations. 
Predict using the 1-fold validation set. 
Calculate the out-of-sample R2. 

Calculate the median of k-1 out-of-sample R2â€™s for each number of iterations to 

pick the best number of iterations. 

9: 

return a matrix of medians for each fold (k folds) in rows and each number of 

iterations in columns.  

4. Simulations and evaluation 

4.1. Study design and investigations

While  the  ensemble  size  for  bagging  is  not  particularly  critical, 
provided it is sufficiently large (500 is a widely used default value), it 
does  matter  for boosting.  In  XGBoost, large  ensemble  sizes  can  cause 
over-fitting because the gradient technique focuses on the most difficult 
cases,  which  can  be  due  to  noise.  To  avoid  the  over-fitting  issue  in 
XGBoost, we use a nested k-fold cross-validation scheme. We split each 
dataset into 3 subsets: the tuning set (k-2 folds), validation set (1-fold), 
and test set (1-fold). For each choice of number of iterations and each 
fold, we train the model on the tuning set and monitor the performance 
on the validation set by calculating the out-of-sample prediction accu-
racy and taking the median of k-1 folds. This gives us k medians for each 
number of iterations, as explained in Algorithm 1 and shown in Fig. S2 in 
Supplement A.3.  

Algorithm 1 Optimize the iteration number 

for each k-1 folds do

regularisation, confirming similar findings in Machine Learning litera-
ture (Sollich and Krogh, 1996). The combination of the proposed RBF- 
GFR  model  with  random  forests  (RBF-GFR-RF)  produced  the  best 
model  overall,  consistently  achieving  a  place  in  the  top  three  perfor-
mance rankings. An important additional finding was that almost all the 
methods proposed in this study outperform the original GFR model from 
Matthiopoulos et al. (2011), which was the initial aim motivating the 
present work. As shown in Fig. 2, the GFR model never achieves a rank 
better than 6. R2
DEV  in Eq. (18) is generally a better behaved measure-
ment than R2  in Eq. (17) for count data as described in Section 4.2. We 
used R2
DEV to calculate the out-of-sample predictive performance in these 
datasets  as  shown  in  Fig. S9  in  Supplement A.9.  However,  the  overall 
ranks using R2
DEV  are not different from the overall ranks using R2  in Eq.

We also include a more detailed summary in Supplement A.2.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What criteria are used to determine when training is complete (e.g., validation loss plateau)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The text does not explicitly state the specific criteria used to determine when training is complete. However, it mentions a process involving splitting the dataset into multiple subsets, including a tuning set and a validation set. It suggests that the model is trained on the tuning set while monitoring its performance on the validation set. This implies that some form of performance metric or error measurement is being tracked during the training process. While the exact criterion isn't specified, common practices often involve tracking metrics such as validation loss or accuracy, and stopping the training once these measures reach a satisfactory level or stop improving significantly. Therefore, based on typical machine learning practices, one could infer that the completion of training might be determined by observing a plateau or minimal improvement in the chosen performance metric on the validation set.