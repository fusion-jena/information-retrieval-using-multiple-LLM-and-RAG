Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Due to the large image size and additional parameters of Faster R-CNN, a minibatch size
of four images per GPU (TITAN Xp) was selected for training the model. The model was
trained   twice,   once   with   a   training   subset   of   498   images   on   a   single   GPU   for   9000
iterations and performance evaluated on the test subset of 155 images, also on a single
GPU   and   then   trained   again   on   all   653   annotated   images   on   three   GPUs   for   18000
iterations   for   predicting   plant   organs   on   another   un-annotated   independent   dataset   to
evaluate   our   method.   This   dataset   consists   of   708   full   scale   herbarium   scans,   with   an
average  size of  ca. 9600  by  6500  pixels,   from  the   Herbarium  Senckenbergianum  (FR)
(Otte et al. 2011) with a different set of species (Fig. 2) and geographical origins, which is
also available at GBIF (Senckenberg 2020). The Python code and the trained model have

This   rising   number   of   digitised   herbarium   sheets   provides   an   opportunity   to   employ
computer-based   image   processing   techniques,   such   as   deep   learning,   to   automatically
identify species and higher taxa (Carranza-Rojas et al. 2017, Younis et al. 2018, Carranza-
Rojas   et   al.   2018)   or   to   extract   other   useful   information   from   the   images,   such   as   the
presence   of   pathogens   (as   done   for   live   plant   photos   by   Mohanty   et   al.   2016).   Deep
learning is a subset of machine learning methods for learning data representation. Deep
learning   techniques   require   huge   amounts   of   training   data   to   learn   the   features   and
representation of those data for the specified task by fine tuning parameters of hundreds or
thousands of neural networks, arranged in multiple layers. Learning the value of these
parameters can take vast computer and time resources, especially on huge datasets.

The most common type of deep learning network architecture being used for extracting
image   features   is   the   Convolutional   Neural   Network   (CNN)   (LeCun   and   Bengio   1995).
A convolutional neural network extracts the features of an image by passing through a
series of convolutional, non-linear, pooling (image downsampling) layers and passes them
to a fully connected layer to obtain the desired output. Each convolutional layer extracts the
visual features of the image by applying convolution operations to the image with kernels,
using a local receptive field, to produce feature maps and passing it as input to the next
layer. The initial layers in the network compute primitive features on the image, such as
corners   and   edges,   the   deeper   layers   use   these   features   to   compute   more   complex
features consisting  of curves and  basic  shapes  and  the   deepest   layers  combine  these

The   model   was   implemented   with   the   Detectron2   (Wu   et   al.   2019)   library   in   PyTorch
framework and trained using Stochastic Gradient Descent optimiser with a learning rate of
0.0025 and momentum of 0.9. The anchor generator in the Region Proposal Network (see
section above on network architecture) had six anchor scales [32, 64, 128, 256, 512, 1024]
(square root of area in absolute pixels) each with three aspect ratios of [1:2, 1:1, 2:1]. The
thresholds for non-maximum suppression (NMS) were 0.6 for training and 0.25 for testing,
respectively.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which hardware resources are used for training the deep learning model (e.g., GPUs, TPUs)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Answer: The deep learning model was trained using Titan Xp GPUs. Specifically, during the first round of training, a single GPU was utilized to train the model on a subset of 498 images for 9000 iterations. In the second round of training, the model was trained on all 653 annotated images using three GPUs for 18000 iterations. No mention of any other specific hardware resources, such as TPUs, was made in the given context.