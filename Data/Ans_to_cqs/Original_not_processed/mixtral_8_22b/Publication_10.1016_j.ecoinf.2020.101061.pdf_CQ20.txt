Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Tesla K80 GPU for 5 epochs. To align these unsupervised classiﬁcations
with the ImageNet pretraining weights, we normalized the RGB chan-
nels by subtracting the ImageNet mean from each channel. We then
retrained the network using the hand-annotated data for 40 epochs. For
more details of this approach see Weinstein et al. (2019). Data aug-
mentation of random ﬂips and translations was tested and found to
have little eﬀect on the ﬁnal score.

Collecting a suﬃcient number of training samples will often be a
bottleneck in developing supervised methods in airborne imagery. It is
therefore useful to test the number of local training samples needed to
achieve maximum performance. We performed a sensitivity study by
training models using diﬀerent proportions of training data. We se-
lected 5%, 25%, 50% and 75% of the total hand-annotations to com-
pare to the full dataset for the within-site results for each site. We reran
this experiment ﬁve times to account for the random subsampling of
annotations. In addition, we ran the evaluation plots for the pretraining
model only (i.e. 0% hand-annotated data) to assess whether the addi-
tion of hand-annotated data improved the within-site pretraining.

3. Results

This method uses the Retinanet one-stage object detector (Gaiser et al.,
2018) with a Resnet-50 classiﬁcation backbone, which allows pixel
information to be shared at multiple scales, from individual pixels to
groups of connected objects. We used a Resnet-50 classiﬁcation back-
bone pretrained on the ImageNet dataset (He et al., 2016). Since the
entire 1 km RGB tile cannot ﬁt into GPU memory, we cut each tile into
40 m by 40 m windows with an overlap of 5% (n = 729). The
40mx40m window size was adopted since this is the spatial extent of
the NEON tower plots. The order of tiles and windows were randomized
before training to minimize overﬁtting among epochs. To reduce po-
tential spatial autocorrelation in tree appearance between evaluation
plots and pretraining data, we removed any training tiles within 1 km of
an evaluation tile. Using the pool of unsupervised LiDAR-based tree
predictions, we pretrained the network with a batch size of 20 on 2

Fig. 1. Conceptual workﬂow of proposed approach for airborne de-
tection of individual tree crowns. Pretraining data is generated by
overlaying predicted trees from a LiDAR-based unsupervised algorithm
on to RGB imagery. These RGB images are used to pretrain a deep
learning neural network. The resulting model is retrained based on
RGB hand-annotations.

2

B.G. Weinstein, et al.

Ecological Informatics 56 (2020) 101061

Table 1
The number of tree annotations used for pretraining, retraining and evaluation.
Pretraining annotations are generated automatically using a LiDAR-based un-
supervised algorithm. Training and evaluation annotations were hand-drawn.

Forest type

Pretraining
annotations

Training
annotations

Evaluation
annotations

Oak Woodland
Mixed Pine
Alpine
Eastern Deciduous

550,905
2,522,855
3,121,036
3,131,283

2533
3405
9730
1231

293
747
1699
489

Alpine forest, and completely connected crowns in the Eastern
Deciduous forest.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which hardware resources are used for training the deep learning model (e.g., GPUs, TPUs)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
A Tesla K80 GPU was used for training the deep learning model for 5 epochs during the pretraining phase. However, it is not explicitly mentioned what specific hardware resources were used during the retraining phase or if additional resources were utilized beyond the Tesla K80 GPU.