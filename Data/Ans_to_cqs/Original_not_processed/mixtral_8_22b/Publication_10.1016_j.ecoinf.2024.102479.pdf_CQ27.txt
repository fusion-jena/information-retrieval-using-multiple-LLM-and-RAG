Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Friedman, J.H., 2002. Stochastic gradient boosting. Comput. Stat. Data Anal. 38, 

367–378. https://doi.org/10.1016/S0167-9473(01)00065-2. 

Fritsch, S., Guenther, F., Guenther, M.F., 2019. Package ‘neuralnet’. In: Training of 

Neural Networks, 2, p. 30. 

Gamble, J.S., Fischer, C.E.C., 1915–1935. Flora of the Presidency of Madras, Vol. 1–3, 

21, Hart Street, W.C.  

Gascon, F., Ramoino, F., Deanos, Y., 2017. Sentinel-2 Data Exploitation with ESA’s 

Sentinel-2 Toolbox, 19. EGU Gen. Assem, p. 19548 [Google Scholar].  

Ghasemi, N., Sahebi, M.R., Mohammadzadeh, A., 2011. A review on biomass estimation 
methods using synthetic aperture radar data. Int. J. Geomat. Geosci. 1 (4), 776–788 
[Google Scholar].  

Gholamy, A., Kreinovich, V., Kosheleva, O., 2018. Why 70/30 or 80/20 relation between 

training and testing sets: a pedagogical explanation [Google Scholar].

hyperparameters  in  a  model.  It  identifies  the  most  effective  set  of 
hyperparameters  that  enhance  the  model's  performance.  During 
training,  GSCV  generates  a  series  of  models,  each  characterized  by  a 
different  set  of  hyperparameters.  The  purpose  of  this  technique  is  to 
systematically train and assess the performance of these various models 
through cross-validation. The process concludes with the selection of the 
model that demonstrates the most superior performance, determined by 
its optimal hyperparameter combination (Adnan et al., 2022). Details of 
the primary tuning parameters, their range and the optimal combination 
of  hyperparameters  utilized  for  each  algorithm  for  each  model  are 
shown in Table 1.

EcologicalInformatics80(2024)1024796K. Ayushi et al.

EcologicalInformatics80(2024)1024795K. Ayushi et al.                                                                                                                                                                                                                                  

Table 1 
Hyperparameters tuned for each algorithm with their ranges and optimal values for the study.  

Algorithms 

Random forest 

Multivariate adaptive regression splines 

Penalized regression 

Support vector machine 

Gradient boosting 

Artificial neural network 

k-Nearest Neighbors 

Tuned Parameter 

Parameter Range  MODEL 1  MODEL 2  MODEL 3  MODEL 4  MODEL 5  MODEL 6  MODEL 7 

ntree 
mtry 
degree 
nprune 
alpha 
lamda 
cost 
sigma 
epsilon 
shrinkage 
interaction.depth 
n.minobsinnode 
n.trees 
Hiddenlayer 
Neurons_per_layer 
threshold 
k 

100–1000 
2–35 
1–3 
3–70 
0–1 
0.001–10 
0.01–100 
0.01–100 
0.01–1 
0.01–0.2 
1–6 
1–20 
100–1000 
1–5 
5–100 
0.01–10 
3–19

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What process was followed to deploy the trained deep learning model (e.g., Model serialization, Platform selection)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The information provided does not contain details about the deployment process of the trained deep learning model. Therefore, I cannot provide specific information regarding the method used for model serialization or platform selection. However, generally speaking, after training a deep learning model, it can be deployed through several methods such as model serialization, where the model is saved into a file format like.pkl or.h5, which can then be loaded onto any system for prediction purposes. For platform selection, depending upon the use case, one might choose cloud platforms like AWS, Google Cloud, Azure, etc., or edge devices like Raspberry Pi, Jetson Nano, etc. Again, without more specific information, I cannot give a detailed response to this query.