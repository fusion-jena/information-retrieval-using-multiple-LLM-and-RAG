Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

−

Our choices of hyperparameters such as k and the
training parameters such as the stopping criterion were
based on preselected values that were not ﬁne-tuned
on any data set. In extensive simulations, this simple
procedure was necessary due to computational reasons.
When applying in practice on real data, it is possible to
ﬁne-tune all the hyperparameters using a validation set.
We can ﬁrst randomly select a subset of the reference
species as the validation set, use these as testing data
to tune the parameters for the given data set, and then
train one last time with all the data with the ﬁne-tuned
parameters. Note that such a procedure will require
repeated training and can be slow, and our preliminary
results (Table S2 of the Supplementary material available
on Dryad) show that the gain in accuracy obtained can
be small.

by a running average of its recent magnitude to speed
up training (Tieleman and Hinton 2012). The batch size
is ﬁxed to 32. We check the training loss every 50 epochs
and stop the training when the value of the loss function
fails to decrease in two consecutive checks. The model
with the optimal objective function value is chosen.

{

=

=

n
i

n
i

Di}
{

DR
i }

1 and

Evaluation on Simulated Data Sets
DEPP training and parameter sensitivity.—We start by
evaluating DEPP on simulated data sets, testing the
ability to train the CNN model in reasonable times. As
the training epochs advance, the loss function (1) drops
rapidly and stabilizes after around 500 epochs in a typical
case (Fig. S1 of the Supplementary material available on
Dryad). Here, training, which is a one-time process for
each reference tree, ﬁnished in around 20 min for the 200-
taxon data set and 260 minutes for 10,000-taxon data set,
on a machine with one 2080Ti NVIDIA GPU and 8 CPU
cores. Placement of 1000 queries took 4 seconds for the
200-taxon and 30 s for the 10,000-taxon data sets using a
single CPU core. On the small 200-taxon data set, EPA-ng
has an advantage in terms of running time. However, in
the larger HGT data set (10,000-taxon), DEPP placements
are faster than the alternatives with half the running time
of EPA-ng. In terms of the memory usage, APPLES+JC

DEPP implementation details.—We implemented DEPP
using PyTorch and treeswift python packages (Moshiri
2020) and trained the models on 2080Ti NVIDIA GPUs.
The embedding size k is set to 128 for data sets with 200
taxon and 512 for larger data sets (including the real web-
of-life [WoL] data set). Other hyperparameters are ﬁxed
to their defaults (Table S2 of the Supplementary material
available on Dryad) unless otherwise speciﬁed. DEPP
is trained on the reference tree and is used to compute
distances that are then fed to APPLES-II (Balaban
et al. 2022), used identically to APPLES-II+JC (see
below). Branch lengths of the backbone tree provided
to DEPP are re-estimated using RAxML-8 (Stamatakis
2014) under the GTR+CAT model. Given more than one
gene, DEPP has two options: concatenating genes or
computing a summary of distances. For each query, we
can compute the distance between a query and backbone
species j according to each of the N genes, obtaining

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the hyperparameters used in the deep learning model (e.g., learning rate, optimizer)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:

In the provided context, there isn't explicit mention of specific hyperparameters like learning rate or optimizer used in the deep learning model. However, some information about hyperparameters can still be extracted from the text.

One important hyperparameter mentioned is the embedding size 'k', which is set to 128 for datasets with 200 taxa and 512 for larger datasets including the real Web-of-Life dataset. Another hyperparameter discussed is the batch size, which is fixed to 32.

Additionally, the authors note that they did not fine-tune the hyperparameters based on any particular dataset but rather chose them based on preselected values due to computational limitations. They also suggest that in practical applications, it would be beneficial to fine-tune all hyperparameters using a validation set.

However, without further context or additional information, I cannot provide exact details regarding other hyperparameters such as learning rate or optimizer used in the deep learning model.