Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

[34]. Second,

from the input image (see Fig. 2). It can be a pre-trained
CNN architecture such as Inception [32], Residual Neural Net-
work (Resnet) [33], and Dense Convolutional Network (Den-
senet)
the RPN module proposes object
locations of the feature maps. Third, a regressor and classiﬁer
are trained using the loss function L in (1) for the CNN detec-
tion network to adjust these proposed locations and to predict
single or multi-object classes with the corresponding bounding
box area in the resulted image, as shown in Fig. 2.

Lð pif g;

tif gÞ ¼

1
Ncls

X

i

Lclsðpi

i Þ þ k 1
; p(cid:3)
Nreg

X

i

i Lregðti; t(cid:3)
p(cid:3)

i Þ: ð1Þ

3.2. Faster R-CNN approach

The Faster R-CNN presents recent advancement of both Fast
R-CNN and R-CNN by Ren et al. [16]. It merges a Region
Proposal Network (RPN) as object bounds predictor and Fast
R-CNN for target detection in processed images. The role of
RPN module is to serve as the ‘‘attention” mechanism of this
uniﬁed Faster R-CNN, as depicted in Fig. 2. Three basic com-
ponents of the Faster R-CNN can be described as follow.
First, the feature extractor network to generate feature maps

[34]. Second,

IoU ¼

A \ B
A [ B

ð2Þ

Next, the Region of Interest (RoI) pooling layer takes the
region corresponding to a proposal from the backbone feature
map and dividing it into sub-windows. The maximum pooling
is performed over these sub-windows to give the output of RoI
pooling layer, which has a size of (N, 7, 7, 512), and N is the
number of generated region proposals by the RPN mechanism,
as shown in Fig. 2. After passing through two fully connected
layers (FCs), the features are fed into the classiﬁer and regres-
sor branches as follow. The classiﬁcation layer calculates the
probability of the region proposal contains an object such that
the probability Pi of each element in the feature map i contains
the target object using softmax function. The regions with the
top score of 300 Pi in the total rankings present the detected
target object. In addition, the regressor provides the IoU index

A new mobile application of agricultural pests recognition

4427

Fig. 3

performance utilization of
the RPN module with the
bounding box regression, as depicted in Fig. 2. Moreover,
the computational time of this deep learning approach is not
a problem in this study, because the detection and classiﬁca-
tion procedures of agricultural insect pests can be executed
in a few seconds in the cloud computing system, saving all
required hardware resources.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What optimization techniques are applied in the deep learning pipeline (e.g., SGD, Adam)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Based on the given context, there is no explicit mention of any specific optimization technique used in the deep learning pipeline, such as Stochastic Gradient Descent (SGD) or Adaptive Moment Estimation (Adam). However, we do see that the Faster R-CNN model uses a loss function L (Equation 1) for training the regressor and classifier. This loss function consists of two parts: classification loss (Lcls) and regression loss (Lreg). These losses help optimize the weights during the training process, but the exact optimization algorithm used is not specified. Therefore, without further information, I cannot provide a definitive answer regarding the optimization techniques employed in the deep learning pipeline.