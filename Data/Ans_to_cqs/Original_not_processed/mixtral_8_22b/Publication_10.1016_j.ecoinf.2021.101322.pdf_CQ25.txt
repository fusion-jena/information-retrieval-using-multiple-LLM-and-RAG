Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

2. Methods 

2.1. CNN training data

2.3. Implementation and training 

The  CNN  was  implemented  using  the  Keras  (Chollet,  2015)  and 
TensorFlow  (Abadi  et  al.,  2016)  software  packages  implemented  in 
Python, and computation was performed using CUDA version 9.1 and 
CuDNN  with  Nvidia  (Nvidia  Corp.,  Santa  Clara,  California)  P100 
accelerator cards with 12 GB of GPU memory. We used a Keras imple-
mentation of EfficientNet–B4 called EfficientNet V1.1.0 (https://github. 
com/qubvel/efficientnet).  The  pre-trained  weights  used  for  transfer 
learning were available through this API.

Performance of the CNN models were assessed using four different 
metrics (test loss, mean squared error - MSE, mean average percentage 
error – MAPE and accuracy - Acc). Accuracy of the regression tasks was 
calculated  by  rounding  the  prediction  to  the  nearest  integer  age  and 
comparing it with the ground truth. The labelling provided by human 
readers  are  treated  as  the  ground  truth,  and  accuracy  and  other  per-
formance metrics relates directly to this. 

The CNN hyperparameters configurations used for all four networks 
during training are shown in Table 1. During training we use minibatch 
gradient descent. 

2.4. Comparing the CNN and six expert readers using an independent 
dataset

Data availability 

Salmon scale 9056 image dataset: 
doi:10.21335/NMDC-1050865887 
Expert  reading  of  extra  150 

335/NMDC-1462728994 

image  dataset:  doi:10.21 

CNN based architecture: EfficientNet: https://github.com/qubvel/ 

efficientnet 

Pre-trained  network  weights  (EfficientNet–B4):  https://github. 

com/qubvel/efficientnet/blob/master/efficientnet/weights.py 

Declaration of Competing Interest 

The authors declare that they have no known competing financial 
interests or personal relationship that could have appeared to influence 
the work reported in this paper. 

Acknowledgements 

We gratefully acknowledge valuable advice on the CNN architecture 
provided by Hyeongji Kim from the Institute of Marine Research, Ber-
gen, Norway. This project was funded in part by Research Council of 
Norway  projects  270966/O70  (COGMAR  -  Ubiquitous  cognitive com-
puter vision for marine services). 

References

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What is the purpose of the deep learning model (e.g., classification, segmentation, detection)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The purpose of the deep learning model in this case is not explicitly stated as either classification, segmentation, or detection. However, given that the model is a Convolutional Neural Network (CNN), which is commonly used for image analysis tasks, and considering that the performance of the model is evaluated using metrics such as test loss, mean squared error (MSE), mean average percentage error (MAPE), and accuracy, it can be inferred that the model is likely being used for some form of image-based regression task. Furthermore, the fact that the accuracy of the regression tasks is calculated by rounding the prediction to the nearest integer age suggests that the model might be used for predicting the age of salmon scales based on their images.