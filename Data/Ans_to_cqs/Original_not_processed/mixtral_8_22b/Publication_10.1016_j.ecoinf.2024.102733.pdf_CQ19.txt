Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

EcologicalInformatics82(2024)1027339N. Canovi et al.

Various parameter values, including learning rate (i.e., 0.0001, 0.001,
0.01, and 0.1), batch size (i.e., 32, 64, 128, 256, and 512), and latent
dimension (i.e., 128, 256, 512, 2048), have been explored and
evaluated.

The MLP employed consists of four fully connected layers with the
size of 256, 128, 64, and 12, each comprising a linear layer followed by
PRelu as non-linearity. Only the third layer differs, as it is provided with
Batch Normalization (Ioffe and Szegedy, 2015). During optimization,
Batch Normalization was also applied to other layers as well, but the
network performance was not as good. The network gets the input of size
512 consisting of learned features extracted from the diffusion model
and the last layer has 12 neurons. The maximum neuron value from this
layer is then used for predicting the event class, as each neuron corre-
sponds to one of the events. The values of the 12 neurons are then
compared to the real event ground truth through a loss, which serves to
update the model parameters and perform the training.

During the training of the MLP, Adam optimizer (Kingma and Ba,
2015) is used, as well as the scheduler which adjusts the learning rate
when the network reaches a plateau. For the training, various parameter
values and different regularization techniques were explored, with the
option of using either Cross-Entropy or Focal Loss (Lin et al., 2017). In
detail, the learning rate was set to 0.00001 and 0.0001, batch sizes of 8,
16, 32, and 64 were tested, and weight decay was varied between
0.0001 and 0.001 with a dropout of 0.1. Additionally, Focal Loss (Lin
et al., 2017) introduce additional parameters to investigate: α and γ. The
former serves as a balancing factor, either as a fixed value for all classes
or as the inverse of each class frequency. The latter regulates the impact
of the scaling factor; specifically, when set to zero, Focal Loss is equiv-
alent to Cross-Entropy Loss. We experimented with α set as the inverse of

parameters. The parameter values explored alongside the aforemen-
tioned autoencoder include the following: learning rates of 0.00005,
0.0005, 0.0001, 0.005, 0.001, and 0.01; batch sizes of 8, 16, 32, 64, and
128; weight decay values of 0, 0.00001, 0.0001, and 0.001, with
dropout set to 0.05, 0.1, 0.2, and 0.25. For the focal loss parameters, α
was defined as the inverse of class frequency, 0.25, or 0.5, while γ was
set to 0.25, 0.5, 0.75, 1, 1.5, and 2.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which frameworks are used to build the deep learning model (e.g., TensorFlow, PyTorch)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Unfortunately, based on the given information, there isn't any explicit mention of the specific deep learning framework used to build the described models. Therefore, I cannot provide a definitive answer regarding whether they used TensorFlow, PyTorch, or another framework.