Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

2. Methods 

Fig. 2 summarizes a series of processes in designing a deep-learning 
architecture that acts as a toxicovigilance tool. Subsequent sections will 
provide a comprehensive description of each section. 

2.1. Data collection

2.6. Performance metrics 

Conventional  metrics  were  used  to  evaluate  the  model’s  perfor-
mance, such as confusion matrices, accuracy, recall, precision, F1-score, 
Cohen  Kappa,  and  the  area under  the  ROC curve,  some of  which  are 
defined below (Johnson and Khoshgoftaar, 2019).  

Table 1 
List of hyperparameters utilized for training the Recurrent Neural Network 
model.  

Hyperparameter 

Value 

Optimizer 
Learning rate 
Batch size 
Epochs 
Dropout rate 
Loss function 

ADAM (Kingma and Ba, 2017) 
0.003 
32 
100 
0.5 
Binary Cross Entropy  

●  Confusion Matrix

The model was trained using varying disjoint subsets of the dataset in 
order to assess the number of recordings necessary to yield satisfactory 
classification  metrics.  These  subsets  corresponded  to  different  time 
steps, namely 5, 10, 15, 20, and 25 days of flight activity recordings. 
Subsequent  experiments  included  training  the  model  with  various 
combinations of datasets: 1, 2, 3, or all four datasets combined. These 
raw  and curated versions of the datasets are  readily accessible in the 
Code and Data Availability section. 

2.3. Deep neural network architecture

This study used the train_test_split function from the scikit-learn library 
(version 1.2.2), a function that facilitates randomized shuffling and di-
vision of datasets into distinct training and testing subsets. Specifically, 
70%  of  the  data  was  designated for  training  the  classification  model, 
while the remaining 30% was set aside for testing (Dobbin and Simon, 
2011). Individuals from the control and pesticide-exposed groups were 
evenly  distributed  between  these  subsets,  guaranteeing  a  balanced 
representation of each class. The recurrent neural network (RNN) model 
was designed to incorporate three primary input parameters: the bee’s 
age, the daily number of flights, and the total time spent outside daily. 
Following  data  preparation,  labels  for  both  training  and  testing 
datasets  underwent  a  transformation  known  as  one-hot  encoding, 
facilitated  by  the  OneHotEncoder  function  from  the  scikit-learn  library

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the datasets used in the deep learning pipeline (e.g., MNIST, CIFAR, ImageNet)? "

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:

The text does not explicitly mention specific datasets like MNIST, CIFAR, or ImageNet. However, it mentions that the model was trained using varying disjoint subsets of the dataset corresponding to different time steps, namely 5, 10, 15, 20, and 25 days of flight activity recordings. It also states that subsequent experiments included training the model with various combinations of datasets: 1, 2, 3, or all four datasets combined. These raw and curated versions of the datasets are readily accessible in the Code and Data Availability section. Therefore, while the exact names of the datasets are not mentioned, we can infer that they consist of flight activity recordings over different periods and possibly other unspecified datasets.