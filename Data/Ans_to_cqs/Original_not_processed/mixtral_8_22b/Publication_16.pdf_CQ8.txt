Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

CNN  approaches  require  a  large  corpus  of  high-quality 
annotated  data  that  can  be  used  to  train  the  network.  Given 
that there is limited availability of publicly available data that 
satisfy this requirement there are currently no viable models 
capable of classifying within species animal types.  Another 
major challenge to overcome is the deployment and automated 
inference  of  acoustic  sensors.  Individually,  sensors  may 
generate  reasonable  amounts  of  data,  but  collectively  the 
amount  of  data  that  needs  to  be  processed  will  increase 
exponentially based on the number of sensors deployed. The 
first challenge relates directly to how the data is obtained. The 
second  is  the  cost  of  compute  needed  to  process  the  data. 
Deploying  trained  models  on  edge  devices  for  real-time 
inferencing will take some consideration which has not been 
sufficiently  reported  in  the  literature.  Centralising  inference

true  positive  rate  while 

the 

The  trained  model  is  hosted  using  TensorFlow  2.2  and 
served  through  a  public  facing  website  developed  by  the 
authors 2 .  CUDA  11  and  cuDNN  7.6.5  enables  the  GPU 
accelerated learning aspect of the pipeline. A Samsung S10 is 
used  to  record  garden  birds  and  automatically  upload  the 
acquired audio to the platform using the Simple Mail Transfer 
Protocol (SMTP) for classification. Figure 6 shows the end-
to-end inferencing pipeline starting with the sensor and ending 
with the public facing conservationAI site as shown in Figure 
7.  Due  to  the  use  of  standard  protocols,  the  system  can 
interface  with  a  variety  of  sensors  for  real-time  inference. 
Where in field communication is unavailable, audio files can 
be batch uploaded through the website for offline inferencing. 

Figure 6. End-to-end Inferencing Pipeline 

Figure 7. ConservationAI Platform 

Inferencing

Index  Termsâ€”  Conservation;  Audio  Classification;  Acoustic 

Monitoring; Modelling Biodiversity; Deep Learning 

I. 

INTRODUCTION 

G

Figure 7. ConservationAI Platform 

Inferencing 

is  undertaken  on  a  custom-built  server 
containing an Intel Xeon E5-1630v3 CPU, 64GB of RAM and 
a  NVidia  Quadro  RTX  8000  GPU.  Figure  8  shows  the 
individual stages of the inferencing data pre-processing stages. 

Figure 5. Summary of the Compiled Model 

The MLP was trained over 100 epochs as the results show 
this was a sufficient number for the model to converge without 

2 www.conservationai.co.uk 

Authorized licensed use limited to: Thueringer Universitaets. Downloaded on November 16,2023 at 09:46:32 UTC from IEEE Xplore.  Restrictions apply. 

 
                                                 
 
 
 
Get Audio From SMTP 
Directory

Segment Acquired Audio 
File into a Fixed Length 

Extract MFCC Features

Run Classification

Return Predicted Vector

Figure 8. Date Pre-processing Stages

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Where is the code repository of the deep learning pipeline available (e.g., GitHub, GitLab, BitBucket)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Unfortunately, the given context does not provide information about where the code repository of the deep learning pipeline is available. It only mentions that the trained model is hosted using TensorFlow 2.2 and served through a public-facing website developed by the authors. However, it does not specify any links or repositories containing the source code of the pipeline. Therefore, I cannot determine where the code repository of the deep learning pipeline is available.