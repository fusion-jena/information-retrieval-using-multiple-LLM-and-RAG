Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

In  order  to  determine  more  accurate  training  results  and  also  to 
explore the effect of epoch upon training result, apart from 150 epochs, 
the model with attention layer is trained with epoch values 100, 200, 
and  250  under  a  uniform  training  environment  and  with  the  same 
dataset.  The  training  summary  for  each  of  these  epochs  is  shown  in 
Tables 5, 6 and 7 for epochs 100, 200, and 250, respectively. The trends 
of mAP values with increasing epochs are shown in Figs. 14 and Fig. 15. 
The size of the dataset used for custom training is sufficiently large. 
Further, the DL model used in this work is tuned with optimized hyper 
parameters  for  which  overfitting  and  under  fitting  situations  are  pre-
vented from occurring. As mentioned above, the effort to over-train the 
model has been avoided and graded MSE convergence (Figs. 7 to 11) has 
been  adopted  to  fine-tune  the  model.  Results  obtained  for  different

Table 8 
Average test of results for four different datasets with four epoch values. Average 
values for preprocessing, inference and NMS values is in millisecond. The last 
row is the average accuracy for different epochs.   

Computation time (milliseconds) 

Parameters 

Epoch-100 

Epoch-150 

Epoch-200 

Epoch-250 

Preprocessing 
Inference 
NMS 
Accuracy 

0.85 
140.68 
0.73 
92.6 

0.85 
141.38 
0.8 
94.25 

0.875 
145.83 
0.75 
94 

0.8 
147.95 
0.75 
92.9

Fig.  4. SENet  attention  mechanism.  Different  blocks  of  the  attention  mecha-
nism with sizes are shown. 

Table 2 
Hyper  parameters and their values used in  training the  proposed model. The 
hyper parameters are based on the optimized values for YOLOv5 COCO training 
from scratch.  

Parameter Name 

lr0 
Lrf 
momentum 
weight_decay 
warmup_epochs 
warmup_momentum 
warmup_bias_lr 
box 
cls 
cls_pw 
obj 
obj_pw 
iou_t 
anchor_t 

Value 

0.01 
0.01 
0.937 
0.0005 
3.0 
0.8 
0.1 
0.05 
0.5 
1.0 
1.0 
1.0 
0.2 
4.0 

Parameter Name 

fl_gamma 
hsv_h 
hsv_s 
hsv_v 
degrees 
translate 
scale 
shear 
Perspective 
flipud 
fliplr 
mosaic 
mixup 
copy_paste 

Value 

0.0 
0.015 
0.7 
0.4 
0.0 
0.1 
0.5 
0.0 
0.0 
0.0 
0.5 
1.0 
0.0 
0.0

The confusion matrix (Fig. 6), F1 curve (Fig. 7), P curve (Fig. 8), PR 
curve (Fig. 9), R curve (Fig. 10) and final training plots (Fig. 11) are 
shown for the training of the model with attention layer with epoch-150. 
Some training batch outputs are shown in Fig. 12, and some validation 
outputs are shown in Fig. 13. 

EcologicalInformatics79(2024)10239812B. Bhagabati et al.                                                                                                                                                                                                                              

Fig. 12. Training Output (Batch-1) showing the labels of the detected object.  

Fig. 13. Validation Output (with images from the dataset). The bounding box and class name are generated and shown for the validated object by the model.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What measures were taken to ensure the generalizability of the deep learning model (e.g., Diverse dataset, cross-validation, Stratified splitting)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
To ensure the generalizability of the deep learning model, several measures have been implemented. Firstly, the size of the dataset used for custom training is sufficiently large, providing diverse examples for the model to learn from. This helps prevent overfitting and improves the model's ability to perform well on unseen data. Secondly, the model was trained using optimized hyperparameters, preventing both overfitting and underfitting situations. To achieve this, graded Mean Squared Error (MSE) convergence was adopted to fine-tune the model. Additionally, efforts to over-train the model were avoided. Lastly, the model was tested with various epoch values (100, 150, 200, and 250) under a uniform training environment and with the same dataset. This allowed for the exploration of the effect of epoch upon training results and helped determine more accurate training outcomes. These steps collectively contribute to ensuring the robustness and generalizability of the deep learning model.