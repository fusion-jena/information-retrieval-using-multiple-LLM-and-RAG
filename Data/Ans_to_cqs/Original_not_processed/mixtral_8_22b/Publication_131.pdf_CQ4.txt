Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

As mentioned in the data augmentation section above, a CNN was ﬁrst trained for
the 4 sound classes covered in the classiﬁcation model developed in previous work [20–23].
Later, a second CNN was trained to expand the classiﬁcation system to the total of the
5 classes detailed in Table 1.

For the ﬁrst network, the best results were obtained with training in only 8 epochs
(number of passes of the entire training dataset) and a batch size (number of samples
utilized in one training iteration) equal to 32. For the second network, the best training was
achieved with 6 epochs and, again, a batch size equal to 32. For both networks, the initial
learning rate [33] with 0.001 and the “adam” optimizer [34] were the parameters used in
the training process.

3. Results
3.1. CPS Performance

11 of 19

2.2. CNN Classiﬁcation System

In order to carry out the design of the CNN classiﬁcation system, a set of stages
were followed. These stages are represented in Figure 9 and described in the following
subsections.

Figure 9. Stages in the classiﬁcation system.

Each of the stages was programmed with Python using the Keras library [30] for CNNs.

2.2.1. Data Augmentation

In order to generate a more robust training set, an augmentation process was carried
out using the sound database. When one deals with CNN and images, data augmenta-
tion consists of extending the set of images from their transformations (rotations, size
modiﬁcations, etc.). For the purpose of the present work on sounds, the transformations
must be made on the audios, and later these transformations will be reﬂected in the
mel-spectrogram images.

In this way, for each of the 865 audio samples in the database, 10 additional audios

were generated:
•
•
•

proper databases for CNN training.

Sensors 2021, 21, x FOR PEER REVIEW 14 of 18    Figure 11. Structure of the designed CNN. For network training, 80% of the samples were used as training samples, and 20% as tests. This strategy is widely used to enhance the generalization of a machine learning model and prevent overfitting. A balanced sampling was carried out for the test set. For it, one audio sample (with its corresponding data augmentation samples) out of five was selected for each type of anuran call. Thus, 7623 samples were used for training and 1892 for testing. As mentioned in the data augmentation section above, a CNN was first trained for the four sound classes covered in the classification model developed in previous work [18–21]. Later, a second CNN was trained to expand the classification system to the total of the five classes detailed in Table 1. For the first network, the best results were obtained with training in only eight epochs (number of passes of the entire training dataset) and a batch size

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the data augmentation techniques applied in the deep learning pipeline (e.g., Fliping, Roating, Scaling)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer: The text does not provide specific details about the exact data augmentation techniques applied to the audio samples. However, it mentions that for each of the 865 audio samples in the database, 10 additional audios were generated. It also states that when dealing with convolutional neural networks (CNNs) and images, data augmentation typically involves extending the set of images through transformations such as rotations, size modifications, etc. In the context of this work on sounds, the transformations must be made on the audios, which would then be reflected in the mel-spectrogram images. Therefore, while the specific techniques are not explicitly stated, we can infer that similar transformations might have been applied to the audio samples, such as pitch shifting or time stretching, before generating the mel-spectrogram images.