Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

diversify  the  training  data,  and  the  3-s  window  length  enables  the 
implementation of this data augmentation method.

overall process mostly followed current best practices in deep learning 
which are well summarized in (Chollet, 2017).

followed  the  original  Wide  ResNet  design.  Our  downsampling  blocks 
employed the changes suggested in (Xie et al., 2018). The third and final 
component, the classification block, was derived from (Schlüter, 2018) 
and resulted in probability predictions for all 987 classes per second (i. 
e., three predictions per 3-s input spectrogram) followed by global log- 
mean-exponential  pooling  and  sigmoid  activation.  Most  convolutions 
use 3 × 3 kernels with padding and are succeeded by batch normali-
zation  (Ioffe  and  Szegedy,  2015)  and  ReLU  activation  (if  not  noted 
differently).  Because  we  treated  spectrograms  as  monochrome  input 
images, the input was a single channel mel spectrogram of size 64 × 384, 
visualizing three seconds of audio at a sampling rate of 48 kHz. 

2.5. Training

Table 1 
Our  model  design  follows  the  Wide  ResNet  approach  by  Zagoruyko  and 
Komodakis and consists of 157 layers, of which 36 are weighted.  

Group 

Name 

Input shape 

Output shape 

Pre-processing 

ResStack 1 

ResStack 2 

ResStack 3 

ResStack 4 

Classification 

5×5 Conv+BN+ReLU 
Ma× pooling 
Downsampling block 
2 × ResBlock 
Downsampling block 
2 × ResBlock 
Downsampling block 
2 × ResBlock 
Downsampling block 
2 × ResBlock 
4×10 Conv+BN + ReLU + DO 
1×1 Conv+BN + ReLU + DO 
1×1 Conv+BN + DO 
Global LME pooling 
Sigmoid activation 

(1×64×384) 
(32×64×384) 
(32×64×192) 
(64×32×96) 
(64×32×96) 
(128×16×48) 
(128×16×48) 
(256×8×24) 
(256×8×24) 
(512×4×12) 
(512×4×12) 
(512×1×3) 
(1024×1×3) 
(987×1×3) 
(987×1) 

(32×64×384) 
(32×64×192) 
(64×32×96) 
(64×32×96) 
(128×16×48) 
(128×16×48) 
(256×8×24) 
(256×8×24) 
(512×4×12) 
(512×4×12) 
(512×1×3) 
(1024×1×3) 
(987×1×3) 
(987×1) 
(987×1)

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What techniques are used to address data bias during preprocessing of the deep learning pipeline (e.g., Stratified splitting, oversampling, undersampling, Diverse data collection)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The text does not provide explicit information on specific techniques used to address data bias during preprocessing of the deep learning pipeline. However, it mentions diversifying the training data, which could be a strategy to mitigate data bias. This is achieved through a data augmentation method enabled by the 3-s window length implementation. Data augmentation can help improve the diversity of the dataset and reduce overfitting. Additionally, the overall process followed current best practices in deep learning, which often include strategies to handle data imbalance or bias. These may include stratified splitting, oversampling, undersampling, or diverse data collection, although these methods are not explicitly mentioned in the given context.