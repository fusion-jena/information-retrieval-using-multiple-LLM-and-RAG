Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

4.2. Number classification 

When  the  YOLOv8n  model  was  trained  exclusively  on  MNIST,  it 
failed to accurately predict or recognize the clusters. To enhance image 
recognition, preprocessing techniques, such as inpainting or thickening 
points to generate lines, can be employed. 

However, if the model was trained on our data and MNIST, the model 
was overfitted to the MNIST data and seemed to ignore the parameters 
learned  from  our  dataset.  Overfitting  occurred  because  of  the  high 
number  of  training  examples  in  the  MNIST  dataset  compared  to  our 
small test set (Table 6). Thus, Model 4, which was trained solely on our 
data,  performed  the  best  in  the  current  scenario  (Tables  6  and  7). 
Although this model performs with high precision during training, it can 

still be observed that there are many numbers that cannot be recognized 
when testing the preprocessed images (Table 8).

0.2672 
1.1551 
0.7954 
0.9286 
1.3280 
0.9879  

helps  the  network  learn  the  probabilities  of  the  values  around  the 
continuous locations of the target bounding boxes (X. Li et al., 2020b). 
Thus, it focuses on the values near a label y, by explicitly increasing the 
probabilities of yi and yi + 1. This metric is used for the bounding box 
estimation. 

Classification loss (cls loss) measures the error in the predicted class 
probabilities  for  each  object  in  the  image  compared  with  the  ground 
truth.  When it is lower, the model is more accurate in predicting the 
class of the objects. This value was computed using a cross-entropy loss 
function (Terven and Cordova-Esparza, 2023).

Table  7  depicts  the  six  models  in  greater  detail  by  comparing 
different loss training values, which indicate how well the model learned 
during training. The goal of training was to minimize the loss value. The 
YOLO loss function was divided into three parts (Zafar et al., 2018). 

The box loss is a regression loss that measures the error in the pre-
dicted bounding box coordinates and dimensions relative to the ground 
truth. When the value is lower, the bounding boxes are more accurate (Li 
et al., 2023; Wang et al., 2023). This value is computed by YOLO using 
Intersection  over  Union  (IoU)  (Zheng  et  al.,  2016)  and  distributional 
focal  loss  (DFL)  (X.  Li  et  al.,  2020b).  The  IoU  measures  the  distance 
between the ground truth and the actual box (Zheng et al., 2016). DFL

To determine the ideal training–test split for our model, we used k- 
fold  cross-validation  (k  = 5,  epochs  = 500,  imagesize  = 640).  The 
epochs provide the number of repetitions for training, and the image size 
is  expressed in  pixels. k-fold  cross-validation  (Rodriguez et  al., 2010) 
was used to determine the best training test set for the model. Hereby, 
the data are split into k different training–test sets. The model was not 
trained on the entire dataset but on each training split. The result was an 
investigation of the best data split. Functions of the Python library scikit- 
learn  (scikit-learn  developers,  2023)  were  used  to  split  the  data  and 
investigate the results of each trained model. In addition, YOLO training 
losses and mAP50 values of each model were investigated. The split with 
the  highest  mAP50  value  indicates  the  highest  number  of  correctly 
predicted labels for the model trained on a specific split. We used the

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the regularization methods used to prevent overfitting in the deep learning pipeline (e.g., dropout, L2 regularization)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Based on the given context, no explicit mention of regularization methods like dropout or L2 regularization has been made. However, the issue of overfitting was encountered when the model was trained on both MNIST and custom datasets due to the large number of training examples in MNIST compared to the small test set. To address this, Model 4 was trained only on the custom dataset, resulting in better performance. Additionally, k-fold cross-validation was used to find the optimal train-test split for the model. While these strategies help mitigate overfitting, they do not directly correspond to traditional regularization methods like dropout or L2 regularization.