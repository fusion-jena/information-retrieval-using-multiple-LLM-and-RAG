Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

2.1. Data filtering

environmental  data  to  ecological  processes  (Chave,  2013;  Pettorelli 
et al., 2014).

Flexible data scaling is challenging not only because data may sub-
stantially differ across sensors in terms of spatial and temporal charac-
teristics, but also because EOS data acquisition often includes hundreds 
or even thousands of scenes to process. Despite the promising possibility 
to  collect  multi-sensor  multi-temporal  time  series  spanning  decades, 
sequential process steps of such EOS big data are only possible through 
advanced frameworks and enhanced computational power (Ma et al., 
2015). In this direction, online data repositories and cloud computing 
platforms  (e.g.  Google  Earth  Engine;  GEE;  Gorelick  et  al.,  2017)  are 
progressively  providing  a  compelling  solution,  given  their  ever- 
increasing  capacity  to  store  data  from  multiple  satellites,  combined 
with big data fast computation (Gorelick et al., 2017; Ma et al., 2015). In 
particular,  the  GEE  platform  has  witnessed  a  significant  increase  in

multiple  sensors  and  how  to  soften  associated  shortcomings  (e.g. 
memory limits) is routinely neglected. Therefore, it remains challenging 
how these issues can be bridged in a replicable framework, especially 
when considering that working on native imageries may lead to other 
problematics  (e.g.  clouds),  potentially  hampering  data  extraction. 
Motivated  by  this,  our  overall  objective  was  to  develop  and  describe 
flexible and ready-to-use codes (JavaScript and Python language) that 
can be tested within the GEE interface for different satellites (Sentinel-2, 
Landsat, and MODIS). This framework was designed for a plethora of 
applications  requiring  the  collection  of  high-quality  EOS  data,  the 
calculation  of  novel  metrics,  and  the  extraction  of  data  at  multiple 
spatio-temporal scales matching (near) ground ecological observations. 
The GEE_xtract codes also provide considerable speed increases in the

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which frameworks are used to build the deep learning model (e.g., TensorFlow, PyTorch)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer: The text does not mention any specific deep learning frameworks like TensorFlow or PyTorch. Instead, it discusses the use of JavaScript and Python languages for developing flexible and ready-to-use codes within the Google Earth Engine (GEE) interface for various applications involving Earth Observation System (EOS) data.