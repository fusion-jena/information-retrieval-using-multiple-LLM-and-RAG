Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

mAP =

1
k

∑k

i=1

APi

(3) 

We  also  consider  Params  and  FLOPs  to  evaluate  the  model.  The 
“Params”  metric  in  a  neural  network  model  refers  to  the  number  of 
learned variables used for making predictions. It is an essential metric 
for  evaluating  the  model's  complexity  and  computational  efficiency. 
Models  with  more  parameters  generally  require  more  resources  for

It is worth noting, however, that increasing the network depth also 
comes with some potential downsides, such as increased computational 
complexity and a greater risk of overfitting the model to the training 
data. So, adding the P2 layer to the YOLOv8 architecture is a tradeoff 
that needs to be carefully balanced with other considerations, such as 
model size and performance requirements. In this sense, we proposed in 
this work a modification in the C2f layer due to its importance in the 
general architecture of YOLOv8, in the sense of making it lighter and 
counterbalancing  the  increase  obtained  with  the  addition  of  the  P2 
feature level layer. In our work, we call this new layer C2f2.

The  YOLOv8  algorithm  offers  a  range  of  network  structures, 
including  YOLOv8n,  YOLOv8s,  YOLOv8m,  YOLOv8l,  and  YOLOv8x. 
While they differ in width and depth, they follow the same principles 
and can be chosen according to specific needs. The deeper the structure, 
the higher the precision, but the slower the training and inference speed. 
YOLOv8n was chosen as the base structure to prioritize speed without 
compromising  accuracy,  with  further  enhancements  to  improve 
performance. 

Adding the P2 feature level to the YOLOv8 architecture makes the 
network  deeper  because  an  additional  layer  is  added  to  the  overall 
network structure. The YOLOv8 architecture already includes a series of 
convolutional  layers  and  a  neck  section  that  combines  features  from 

Fig. 6. Proposed C2f2 layer structure showing the number and order of filters.

C2f2 diverges from C2f insofar as they have a different number of 
filters  in  the  bottleneck  blocks  but  have  a  similar  network  structure, 
Fig.  6.  Both  implementations  utilize  the  CSP  bottleneck  block,  which 
commonly incorporates two convolutions found in convolutional neural 
network architectures. The block consists of a 1 × 1 convolution layer, a 
3 × 3 depthwise convolution layer, and another 1 × 1 convolution layer. 
The input tensor is split into two equal parts, with the first part going 
through the first 1 × 1 convolution and being split again. The second 
part goes through bottleneck modules, which consist of two separable 
convolution layers and an optional shortcut connection. The two split 

parts and the outputs of the bottleneck modules are concatenated and 
passed through the second 1 × 1 convolution layer to produce the block 
output. An ‘n’ parameter determines the number of bottleneck modules; 
in this case, it is 1.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which frameworks are used to build the deep learning model (e.g., TensorFlow, PyTorch)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Unfortunately, based on the given context, there is no information about the specific frameworks used to build the deep learning model. Therefore, I cannot provide a helpful answer to this query.