Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

2.6. Performance metrics 

Conventional  metrics  were  used  to  evaluate  the  model’s  perfor-
mance, such as confusion matrices, accuracy, recall, precision, F1-score, 
Cohen  Kappa,  and  the  area under  the  ROC curve,  some of  which  are 
defined below (Johnson and Khoshgoftaar, 2019).  

Table 1 
List of hyperparameters utilized for training the Recurrent Neural Network 
model.  

Hyperparameter 

Value 

Optimizer 
Learning rate 
Batch size 
Epochs 
Dropout rate 
Loss function 

ADAM (Kingma and Ba, 2017) 
0.003 
32 
100 
0.5 
Binary Cross Entropy  

●  Confusion Matrix

2.4. Model training and hyperparameters 

The  model’s  weights  were  randomly  initialized  using  a  specific 
integer seed to guarantee consistent reproducibility of results. Further-
more, meticulous manual tuning of hyperparameters was conducted to 
achieve  optimal  model  performance.  The  selected  hyperparameters, 
which yielded the best performance metrics, are presented in Table 1. 

2.5. Model validation 

Two distinct validation methodologies were implemented. The first 
method  involved  partitioning  the dataset into  training and  validation 
sets, with 70% of the data designated for training and 30% for valida-
tion.  This  division  was  performed  through  random  selection  (Dobbin 
and Simon, 2011).

point has been included in the training and validation sets throughout 
the K iterations (Santos et al., 2018).

The model was trained using varying disjoint subsets of the dataset in 
order to assess the number of recordings necessary to yield satisfactory 
classification  metrics.  These  subsets  corresponded  to  different  time 
steps, namely 5, 10, 15, 20, and 25 days of flight activity recordings. 
Subsequent  experiments  included  training  the  model  with  various 
combinations of datasets: 1, 2, 3, or all four datasets combined. These 
raw  and curated versions of the datasets are  readily accessible in the 
Code and Data Availability section. 

2.3. Deep neural network architecture

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the postprocessing steps involved after the model training (e.g., Saliency maps, Metrics calculation, Confusion matrix)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer: After the model training process, several postprocessing steps can be taken to further analyze and understand the model's performance. Some common postprocessing techniques include calculating performance metrics, creating saliency maps, and generating confusion matrices.

Performance metrics are quantitative measures used to evaluate the effectiveness of machine learning models. In this study, conventional metrics like confusion matrices, accuracy, recall, precision, F1-score, Cohen Kappa, and the area under the ROC curve were employed to gauge the model's performance. These metrics provide insights into the model's ability to correctly classify instances, its sensitivity towards positive classes, and overall robustness.

Confusion matrices offer a visual representation of the model's predictions compared to actual values. They consist of four categories: true positives, false positives, true negatives, and false negatives. By examining these categories, one can determine the model's strengths and weaknesses in predicting certain classes.

Saliency maps are another useful tool for understanding deep learning models. They highlight areas within input data that significantly impact the model's output. By analyzing saliency maps, researchers can identify patterns and features that contribute most to the model's decision-making process. However, it is important to note that saliency maps were not explicitly mentioned in the given context; thus, their use may vary depending on the specific application and requirements.