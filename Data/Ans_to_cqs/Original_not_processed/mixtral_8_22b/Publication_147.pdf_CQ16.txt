Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Table 2. Full comparison of training time, prediction time, optimization time (i.e., time to properly
tune the model), and hardware for each model.

Model

Training Time
(Hours)

Prediction Time (Hours)

Optimization
Time (Hours)

Hardware

CNN

XGB

4

4

2.4. Validation

4

Unknown

Desktop with 64 Gb of
RAM and one Titan X
(Maxwell) GPU.

72—can be reduced by
distributing prediction to more
cores or more machines.

2

Desktop with 64 GB of
ram and 64 logical cores.

right by 90 degrees, ﬂipped horizontally or vertically, or left as is. Since marsh and swamp wetland
classes were somewhat rarer than the other classes, during batch creation (using a batch size of 24),
we ensured that there were at least six patches containing each of those labels. Using a geometrically
decaying learning rate, the model was trained for 110 epochs, where each epoch was composed of 4800
training samples. Model training took approximately 3–4 h and prediction over all the study area at
10 m resolution took a similar amount of time. Training and prediction was done on a desktop with
64 Gb of RAM and one Titan X (Maxwell) GPU. A full comparison of computation time between the
models can be seen in Table 2.

Vienna, Austria, 2013.

77. Hacker Earth.

Beginners Tutorial on XGBoost and Parameter Tuning in R. Available
online: https://www.hackerearth.com/practice/machine-learning/machine-learning-algorithms/beginners-
tutorial-on-xgboost-parameter-tuning-r/tutorial/ (accessed on 29 August 2019).

78. Parisien, M.-A.; Parks, S.A.; Miller, C.; Krawchuk, M.A.; Heathcott, M.; Moritz, M.A. Contributions of
ignitions, fuels, and weather to the spatial patterns of burn probability of a boreal landscape. Ecosystems
2011, 14, 1141–1155. [CrossRef]

79. Atienza, R. Advanced Deep Learning with Keras: Apply Deep Learning Techniques, Autoencoders, Gans, Variational
Autoencoders, Deep Reinforcement Learning, Policy Gradients, and More; Packt Publishing Ltd.: Birmingham,
UK, 2018.

Table 3. Model validation statistics (overall accuracy, Kappa statistic, and mean F1-score) of the CNN
and XGB models for the two independent validation data sets.

Validation Data

Model

Overall Accuracy (%)

Kappa Statistic

Mean F1-Score

ABMI plots
ABMI plots

CCMEO
CCMEO

CNN
XGB

CNN
XGB

81.3
75.6

80.3
72.1

0.57
0.49

0.52
0.41

0.56
0.52

0.59
0.52

The per-class F1-scores for the ABMI and CCMEO data are seen in Figure 3 (blue showing the
F1-score for the CNN model and orange the F1-score for the XGB model). The open water class shows

Remote Sens. 2020, 12, 2

10 of 20

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What criteria are used to determine when training is complete (e.g., validation loss plateau)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Based on the given information, it appears that the CNN model was trained using a geometrically decaying learning rate for 110 epochs, with each epoch consisting of 4800 training samples. However, the specific criteria used to determine when training should be stopped, such as reaching a validation loss plateau, are not explicitly mentioned in the provided text. Therefore, I cannot provide a definitive answer based solely on this information.