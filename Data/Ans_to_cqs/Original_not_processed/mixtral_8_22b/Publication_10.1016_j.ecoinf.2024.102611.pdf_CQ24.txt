Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Table  3  gives  insights  into  the  distribution  of  trained,  tested,  and 
validated samples across  the groups. The data suggest that consistent 
ratios across groups are maintained in the sampling process to avoid any 
potential bias during classification. Different samples are present across 
groups to establish the reliability and generalizability of the model. For 
evaluation,  both  validation  and  test  sets  are  considered  separately  to 
fine-tune the model’s hyperparameters, leading to generalizability and 
scalability towards unseen datasets. 

4.5. Classifier specifications 

The Random Forest (RF) classifier is used in both levels of the hier-
archical classification model for performing group and plant-level pre-
dictions. Let several estimators N and Fi(x) be the function of predicting 
̂
the ith  decision tree for the input X, then the prediction 
C by RF is given 
by (9). 

̂C =

1
N

∑N

i=1

Fi(X)

(9)

4.4. Level-wise training, validation, and testing strategies with Random 
Forest classifier 

The  data  collection  is  split  into  eleven  groups  based  on  visual 
morphological  characteristics,  as  discussed  in  Section  2.  Each  group 
consists of several plant species varieties in the range of 7–14 plants per 
group covering  100  medicinal  plant  species with  training,  validation, 
and testing proportion as 70:20:10 in both the levels, apart from GSL100 
datasets,  a  completely  new  datasets  RTL80  and  RTP40  comprising 
random collections captured in real-time is used to assess the efficiency 
of the proposed hierarchical classification model. The main evaluation 
objective using random groups is to analyze the sensitivity of classifier 
samples collected in various real-time scenarios.

Kaur, P.P., Singh, S., 2022. Random forest classifier used for modelling and classification 

of herbal plants considering different features using machine learning. In: Mobile 
Radio Communications and 5G Networks: Proceedings of Second MRCN 2021. 
Springer Nature Singapore, Singapore, pp. 83–94. 

Kumar, N., Belhumeur, P.N., Biswas, A., Jacobs, D.W., Kress, W.J., Lopez, I.C., Soares, J. 

V., 2012. Leafsnap: A computer vision system for automatic plant species 
identification, 12. Springer Berlin Heidelberg, pp. 502–516. 

L´opez-Jim´enez, E., Vasquez-Gomez, J.I., Sanchez-Acevedo, M.A., Herrera-Lozada, J.C., 
Uriarte-Arcia, A.V., 2019. Columnar cactus recognition in aerial images 5using a 
deep learning approach. Eco. Inform. 52, 131–138. 

Malik, O.A., Ismail, N., Hussein, B.R., Yahya, U., 2022. Automated real-time 

identification of medicinal plants species in natural environment using deep learning 
models—a case study from Borneo region. Plants 11 (15), 1952.

Azadnia, R., Al-Amidi, M.M., Mohammadi, H., Cifci, M.A., Daryab, A., Cavallo, E., 2022. 
An AI based approach for medicinal plant identification using deep CNN based on 
global average pooling. Agronomy 12 (11), 2723. 

Bambil, D., Pistori, H., Bao, F., Weber, V., Alves, F.M., Gonçalves, E.G., Bortolotto, I.M., 
2020. Plant species identification using color learning resources, shape, texture, 
through machine learning and artificial neural networks. Environ. Syst. Decis. 40 
(4), 480–484. 

Barhate, D., Pathak, S., Dubey, A.K., 2023. Hyperparameter-tuned batch-updated 
stochastic gradient descent: plant species identification by using hybrid deep 
learning. Eco. Inform. 75, 102094 https://doi.org/10.1016/j.ecoinf.2023.102094. 

Barr´e, P., St¨over, B.C., Müller, K.F., Steinhage, V., 2017. LeafNet: a computer vision 
system for automatic plant species identification. Eco. Inform. 40, 50–56.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What strategies are employed to handle randomness in the deep learning pipeline (e.g., random seed value)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Based on the provided context, there isn't explicit information about handling randomness in the deep learning pipeline, such as managing random seed values. However, we can infer some strategies related to handling variability and ensuring robustness in the models.

Firstly, the authors use a Random Forest (RF) classifier for their hierarchical classification model. This choice might help mitigate the effects of randomness since ensemble methods like RF combine multiple weak learners to create a strong learner, reducing overfitting and improving overall performance.

Secondly, the dataset is divided into eleven groups based on visual morphological characteristics. By creating these distinct groups, the researchers aim to maintain consistency across them and prevent potential biases during classification. This strategy could indirectly address randomness by providing more structured and balanced data for training, validation, and testing purposes.

Thirdly, the paper mentions using separate validation and test sets for fine-tuning the model's hyperparameters. This practice helps ensure the model's generalizability and scalability when dealing with unseen datasets. Although not directly addressing randomness, this method contributes to building a more reliable and robust model capable of handling diverse inputs.

Lastly, the authors evaluate their model using two additional datasets, RTL80 and RTP40, which consist of random collections captured in real-time. These datasets serve to assess the efficiency of the proposed hierarchical classification model under varying conditions. Analyzing the model's sensitivity to different real-time scenarios may provide insights into its ability to manage randomness and adapt to changing environments.

In conclusion, while the provided context does not explicitly discuss strategies for handling randomness in the deep learning pipeline, it suggests several approaches aimed at enhancing the model's robustness and reliability. These include employing ensemble methods, maintaining consistent ratios across groups, fine-tuning hyperparameters, and evaluating the model under diverse real-time scenarios.