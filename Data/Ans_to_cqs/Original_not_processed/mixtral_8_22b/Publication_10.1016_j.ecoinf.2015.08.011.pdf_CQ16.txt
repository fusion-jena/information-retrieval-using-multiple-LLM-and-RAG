Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

The ANN requires that the learning rate, number of nodes in a single
hidden layer, and maximum number of training epochs are speciﬁed
(Hill and Minsker, 2010). In this study, we used the optimal number
error approach. The number of nodes in the hidden layer was varied be-
tween 5 and 23, and the learning rate was varied from 0.01 to 1.0 in in-
crements of 0.05. For each conﬁguration, the mean square error (MSE)
between the model output and the measured data was calculated.
Fig 2 illustrates the optimal number of neurons in the hidden layer

and the optimal learning rate having the maximum model performance
as indicated by MSE. The number of neurons in the hidden layer and the
optimal learning rate were selected using a trial-and-error method.
The ﬁnal ANN structure had ﬁve input variables with one node
accounting for bias, 19 hidden neurons with one node accounting for
bias, a 0.7 learning rate, and one output variable of the output layer
(Figs. 2 and 3).

To develop a robust ANN, we have to consider the selection of the
number of layers, the number of neurons in the hidden layer, the learn-
ing rates, and the number of epochs for model training carefully. For ex-
ample, if we consider an insufﬁcient number of neurons in the hidden
layer, then the ANN cannot reﬂect nonlinearity within the training
data. Conversely, if we consider too many neurons, then the ANN has
an overﬁtting problem, and hence, this leads a lack of generalizability.
In this study, we applied a trial-and-error method, which is known to
be the best method to determine the appropriate number of neurons
and learning rate (Shamseldin, 1997; Hill and Minsker, 2010), and an
early stopping technique to hinder overﬁtting.

For the purpose of prediction, the most important property of a
model is its competence to generalize. While generalization compe-
tence indicates a model's power to perform well on data that were not
used to train it, overﬁtting prevents model generalization in the face
of new situations (Schlink et al., 2003). To avoid overﬁtting, early stop-
ping the most frequently used regularization technique was employed.
In order to apply it, the data set was randomly split into two sets, 80% for
model training (to compute the gradient and updating of the network
parameters, such as weights and biases—the training set) and 20% for
model testing (to test the model error validation—the validation set).
The model weights were randomly initialized and the training process
was stopped when the network began to overﬁt the data, i.e., the
error on the validation set.

5

0

0

5

6

7

8

9

10

11

12

13

14

15

16

17

18

19

20

21

22

23

24

25

Neurons in hidden layer

0.05

0.1

0.15

0.2

0.25

0.3

0.35

0.4

0.45

0.5

0.55

0.6

0.65

0.7

0.75

0.8

0.85

0.9

0.95

1

Learning rate

Fig. 2. Mean square error between measured data and model output from variation with the number of neurons in the hidden layer (A) and variation with the learning rate (B).

k days (Zuur et al., 2007). The cross-correlation was calculated by
(Diggle, 1990; Chartﬁeld, 2003)

ρ̂

YX kð Þ ¼

8

>>>><
>>>>:

1
N

1
N

(cid:2)

X

N−k
t¼1

X
N
t¼1−k

Y t−Y
sY sX
(cid:2)
Y t−Y
sY sX

(cid:2)
(cid:3)

(cid:3)

Xtþk−X

(cid:3)

(cid:2)

(cid:3)

Xtþk

−X

if k ≥0

if k b 0

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What criteria are used to determine when training is complete (e.g., validation loss plateau)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Answer: The text mentions that the training process is stopped when the network begins to overfit the data, specifically when the error on the validation set increases. This is referred to as early stopping, a commonly used regularization technique to prevent overfitting. Overfitting occurs when the model performs well on the training data but poorly on unseen data due to excessive complexity or noise in the training data. Early stopping helps mitigate this issue by halting the training process before the model becomes too complex and loses its ability to generalize to new data. Therefore, the criterion used to determine when training is complete is the increase in error on the validation set during the training process.