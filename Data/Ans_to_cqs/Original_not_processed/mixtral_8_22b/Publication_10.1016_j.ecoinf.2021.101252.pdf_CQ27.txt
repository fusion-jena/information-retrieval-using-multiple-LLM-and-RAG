Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

0.91 

Architecture 

Case study 2 

ResNet 
InceptionTime 
LSTM 
CNN 
ResNet 
LSTM 
InceptionTime 
CNN 
CNN 
ResNet 
InceptionTime 
LSTM 
ResNet 
CNN 
InceptionTime 
LSTM 
CNN 
InceptionTime 
LSTM 
ResNet 

Accuracy of 
candidate 
models (% 
correct) 

AUC of 
selected 
model 

Architecture 

Accuracy of 
candidate 
models (% 
correct) 

0.67  
0.63  
0.52  
0.82 
0.61  
0.52  
0.67  
0.52  
0.48  
0.67  
0.66  
0.52  
0.66  
0.77  
0.67  
0.52  
0.52  
0.75  
0.52  
0.7  

0.95 

Case study 3 

ResNet 
InceptionTime 
LSTM 
CNN 
ResNet 
LSTM 
InceptionTime 
CNN 
CNN 
ResNet 
InceptionTime 
LSTM 
ResNet 
CNN 
InceptionTime 
LSTM 
CNN 
InceptionTime 
LSTM 
ResNet 

0.5  
0.81 
0.8  
0.69  
0.5  
0.81  
0.76  
0.51  
0.5  
0.49  
0.5  
0.75  
0.5  
0.66  
0.5  
0.61  
0.5  
0.51  
0.77  
0.5

hyperparameters  (i.e.,  ‘AutoML’;  He  et  al.,  2021).  This  represents  an 
important  advantage  for  non-experts  in  deep  learning,  as  it  does  not 
require  the  manual  assembly  of  the  models  and  definition  of  their 
hyperparameters. The AutoML procedure starts by generating a set of 
candidate models with architectures and hyperparameters (e.g. number 
of layers; learning rate) selected at random from a prespecified range of 
values (see Fig. 2). Each candidate model is trained using a small subset 
of the data (data partition At; Fig. 2) during a small number of epochs. 
After  training,  the  performance  of  the  candidate  models  is  compared 
using a left-out validation data set (Av; Fig. 2). The selected candidate 
model (usually the best performing among candidates) is then trained on 
the full training data (Bt; Fig. 2). In this step it is required to identify an 
optimal number of training epochs, to avoid under- or overfitting of the

time, from the onset of candidate model training to the 72nd training 
epoch of the selected model, took 26 min on a desktop PC. On the high- 
end workstation, a distinct modelling event took 3 min.

Table 1 
Type of architecture and accuracy of candidate models and predictive performance of selected models (bold). The accuracy of candidate models was measured using 
the proportion of correctly classified cases. The accuracy of selected models was measured using the area under the receiver operating characteristic curve (AUC).  

Candidate 
model 

Architecture 

Accuracy of 
candidate 
models (% 
correct) 

AUC of 
selected 
model 

1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
17 
18 
19 
20 

Case study 1 

ResNet 
InceptionTime 
LSTM 
CNN 
ResNet 
LSTM 
InceptionTime 
CNN 
CNN 
ResNet 
InceptionTime 
LSTM 
ResNet 
CNN 
InceptionTime 
LSTM 
CNN 
InceptionTime 
LSTM 
ResNet 

0.32  
0.66  
0.31  
0.7  
0.46  
0.32  
0.57  
0.68  
0.39  
0.32  
0.32  
0.39  
0.32  
0.49  
0.85 
0.39  
0.6  
0.79  
0.36  
0.42  

0.96 

AUC of 
selected 
model  

0.91 

Architecture 

Case study 2

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What process was followed to deploy the trained deep learning model (e.g., Model serialization, Platform selection)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The text does not provide information about the specific process used to deploy the trained deep learning model after its final training phase. However, common practices include model serialization, which involves saving the model parameters into a file format that can be loaded later for prediction tasks. Another practice is platform selection, where the chosen deployment environment could be cloud services like AWS, Azure, or Google Cloud, or local servers depending on the use case requirements. Without further details, we cannot determine the exact method used in this scenario.