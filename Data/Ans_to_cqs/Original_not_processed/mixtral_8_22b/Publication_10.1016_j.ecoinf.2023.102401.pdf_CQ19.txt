Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

To extract the input information, the SRC3 block employs a parallel 
analysis  of  the  input  feature  map  using  two  convolution  kernels.  In 
contrast to the C3 block, the SRC3 block incorporates two convolution 
kernels prior to the input of the bottleneck block. One of the kernels is 
responsible  for  halving  the  dimension  of  the  feature  map,  while  the 
other  maintains  the  dimension  unchanged.  This  approach  allows  for 
more  comprehensive  processing  of  the  input  features,  enabling  the 
model  to  capture  both  high-level  semantic  information  and  preserve 
relevant details during the feature extraction process. The convolution 
kernel size utilized is 3 × 3, which leads to a broader receptive field of 
information and richer characteristics compared to the 1 × 1 convolu-
tion kernel. The output semantic information can be augmented by the 
action of two convolution kernels. The information output from the first

specific steps are outlined: 

Step 1: Select appropriate water downloading gear and sensors for 
data collection. Pre-processing of the acquired data, such as denoising, 
image enhancement, and correction. In order to train and evaluate un-
derwater target detection models, the dataset needs to be labeled. Then 
separate underwater images collected from the underwater environment 
into training and test images. 

Step 2: Prepare hardware servers capable of training deep learning 
models to deploy the YWnet network. This allows learning weights to 
recognize  underwater  organisms.  Tune  the  hyperparameters  of  the 
model such as learning rate, batch size and network depth to achieve the 
best performance of the model.

their ability to automatically learn and extract low- and high-level visual 
features  directly  from  the  data.  Traditional  methods  often  require 
manual  feature  engineering,  where  domain-specific  knowledge  and 
expertise are used to design handcrafted features. Deep learning algo-
rithms,  on  the  other  hand,  can  learn  feature  representations  directly 
from the raw input data, eliminating the need for manual feature engi-
neering.  Efficiently  handling  these  multiscale  features  is  crucial  for 
network performance, given their diverse resolutions. Feature pyramid 
networks  (FPNs)  have  made  significant  advancements  by  integrating 
multiscale  features  in  a  top-down  manner.  The  path  aggregation 
network  (PANet)  (Liu  et  al.,  2016)  further  extends  the  FPN  by  intro-
ducing a bottom-up path. Another notable network learning mechanism, 
the bidirectional feature pyramid network (BiFPN) (Tan et al., 2020),

Table 7 shows that, when compared to other models, the model we 
propose  achieves  the  best  performance.  Compared  with  Centernet, 
YWnet  outperforms  by  11.5 and  11.7 in  mAp and  mAp50–95  respec-
tively. When compared to Efficientdet, the mAp of YWnet is increased by 
9.3 mAp and mAp50–95 is increased by 7.1 mAp50–95. Compared with 
FasterRCNN, the mAp of YWnet is increased by 2.9 mAp and mAp50–95 
is increased by 7.7 mAp50–95, and the number of parameters is only half 
that  of  FasterRCNN.  Compared  with  YOLOv4,  the  mAp  of  YWnet  is 
increased by 30.4 mAp, and mAp50–95 is increased by 23.1 mAp50–95. 
When  compared  to  YOLOv7,  the  mAp  of  YWnet  is  increased  by  15.5 
mAp, mAp50–95  is  increased by  12.2 mAp50–95, and the  number of 
parameters  is  only  half  that  of  YOLOv7.  Compared  with  YOLOx,  the 
mAp of YWnet is increased by 9.0 mAp, and mAp50–95 is increased by 
7.5  mAp50–95.  When  compared  to  YOLOv5,  the  mAp  of  YWnet  is

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which frameworks are used to build the deep learning model (e.g., TensorFlow, PyTorch)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The text does not provide explicit information about the specific deep learning framework used to build the YWnet model. However, it mentions that the model was trained on hardware servers capable of training deep learning models, implying that popular deep learning frameworks like TensorFlow or PyTorch could have been employed. These frameworks offer tools and libraries that facilitate building, training, and evaluating deep learning models. Without additional context, it cannot be definitively stated which framework was used for developing the YWnet model.