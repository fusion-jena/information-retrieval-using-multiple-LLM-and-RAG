Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

overall process mostly followed current best practices in deep learning 
which are well summarized in (Chollet, 2017).

Our model is based on a residual network or ResNet. ResNets are easy 
to implement and can be scaled in both width and depth to fit the needs 
of the training scenario best. (Zagoruyko and Komodakis, 2016) showed 
that wide residual networks provided similar performance compared to 
extremely  deep  architectures  despite  limited  depth.  This  can  be 
explained by improved regularization in the residual blocks and scaling 
of network in width (scaling factor K) and depth (scaling factor N) to 
identify  the  best  possible  layout.  We  followed  this  design  and  chose 
scaling factors of K = 4 and N = 3 to build our network, which resulted in 
a  sequence  of  157  total  layers  of  which  36  are  weighted.  Three  core 
components formed the succession of layers in our model. First, a pre- 
processing block transformed the original input spectrogram before it 
was passed through a series of residual stacks. Second, this sequence of

followed  the  original  Wide  ResNet  design.  Our  downsampling  blocks 
employed the changes suggested in (Xie et al., 2018). The third and final 
component, the classification block, was derived from (Schlüter, 2018) 
and resulted in probability predictions for all 987 classes per second (i. 
e., three predictions per 3-s input spectrogram) followed by global log- 
mean-exponential  pooling  and  sigmoid  activation.  Most  convolutions 
use 3 × 3 kernels with padding and are succeeded by batch normali-
zation  (Ioffe  and  Szegedy,  2015)  and  ReLU  activation  (if  not  noted 
differently).  Because  we  treated  spectrograms  as  monochrome  input 
images, the input was a single channel mel spectrogram of size 64 × 384, 
visualizing three seconds of audio at a sampling rate of 48 kHz. 

2.5. Training

Table 1 
Our  model  design  follows  the  Wide  ResNet  approach  by  Zagoruyko  and 
Komodakis and consists of 157 layers, of which 36 are weighted.  

Group 

Name 

Input shape 

Output shape 

Pre-processing 

ResStack 1 

ResStack 2 

ResStack 3 

ResStack 4 

Classification 

5×5 Conv+BN+ReLU 
Ma× pooling 
Downsampling block 
2 × ResBlock 
Downsampling block 
2 × ResBlock 
Downsampling block 
2 × ResBlock 
Downsampling block 
2 × ResBlock 
4×10 Conv+BN + ReLU + DO 
1×1 Conv+BN + ReLU + DO 
1×1 Conv+BN + DO 
Global LME pooling 
Sigmoid activation 

(1×64×384) 
(32×64×384) 
(32×64×192) 
(64×32×96) 
(64×32×96) 
(128×16×48) 
(128×16×48) 
(256×8×24) 
(256×8×24) 
(512×4×12) 
(512×4×12) 
(512×1×3) 
(1024×1×3) 
(987×1×3) 
(987×1) 

(32×64×384) 
(32×64×192) 
(64×32×96) 
(64×32×96) 
(128×16×48) 
(128×16×48) 
(256×8×24) 
(256×8×24) 
(512×4×12) 
(512×4×12) 
(512×1×3) 
(1024×1×3) 
(987×1×3) 
(987×1) 
(987×1)

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "Which frameworks are used to build the deep learning model (e.g., TensorFlow, PyTorch)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The given context does not provide information about the specific frameworks used to build the deep learning model. Therefore, I cannot determine whether TensorFlow, PyTorch, or any other framework was utilized.