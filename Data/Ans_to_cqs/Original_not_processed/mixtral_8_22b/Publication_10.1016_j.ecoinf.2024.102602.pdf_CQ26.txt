Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

2.5.1. Model selection and parametrization 

For  the  classification  task,  before  the  implementation  of  deep 
learning models, all images were resized to the same resolution (227×
197  pixels)  by  considering  the  mean  dimensions  of  the  set,  and  then 
normalized to the [0,1] range (Na and Fox, 2020). Then, six open source 
CNNs  were  selected:  VGG16  (Simonyan  and  Zisserman,  2015), 
ResNet50,  ResNet101  (He  et  al.,  2016),  Inception-v3  (Szegedy  et  al., 
2016), DenseNet201 (Huang et al., 2017) and EfficientNetB0 (Tan and 
Le,  2019).  These  algorithms  were  selected  because  of  their  ease  for 
transfer  learning and  high  performance  on  similar classification  tasks 
(Arun  and  Viknesh,  2022;  Vallabhajosyula  et  al.,  2022).  For  model 
optimization, we used the Adam optimizer algorithm (Kingma and Ba, 
2015), a batch size of 10 and 100 epochs. The learning rates were chosen 
(cid:0) 6 showing 
from empirical trials over 100 epochs, with and 10

A.1b),  with  high  performances  (e.g.,  f1-score  values  above  93.09%; 
Table  4).  Unlike  the  training  task,  the  best  results  were  obtained  by 
(cid:0) 4,  in  terms  of  accuracy 
EfficientNetB0  with  a  learning  rate  of  10
(97.50%),  sensitivity  (96.00%)  and  f1-score  (97.46%),  followed  by 
(cid:0) 4),  which  also  showed 
Inception-v3  with  the  same  learning  rate  (10
high accuracy (96.88%), sensitivity (94.00%), specificity (99.75%) and 
f1-score (96.78%). In the case of the EfficientNetB0 model, only 4% of 
the  images  displaying  the  Cortaderia  selloana  were  confused  by  the 
model as showing no C. selloana (false negatives; Fig. A.1c). Likewise, 
from  the  images  showing  no  C.  selloana,  in  1%  of  the  cases  Effi-
cientNetB0  incorrectly  predicted  the  class  “With  Cortaderia  selloana” 
(false  positives;  Fig.  A.1d).  A  similar  pattern  was  verified  for  the 
remaining CNNs (see confusion matrices in Tables A.6 and A.7).

the  best  performances. We  also  implemented  an  early  stop  approach, 
with a patience value of 16 to regularize the model and minimize the loss 
function (binary cross entropy). The early stop approach is a common 
technique in machine learning to halt the training process of a model 
prematurely  if  performance  on  a  validation  dataset  fails  to  improve 
beyond  a  predefined  threshold,  thereby  preventing  overfitting  and 
conserving computational resources.

EcologicalInformatics81(2024)1026029Faster R-CNN ResNet101 iNaturalistFaster R-CNN ResNet101 MS COCOFaster R-CNN ResNet50 iNaturalistFaster R-CNN ResNet50 MS COCOFaster R-CNN Inception-v2 MS COCOAverage inference time per image (ms)3951063668958mAP@0.50IOU76.8579.2374.9380.8081.71Total loss2.241.142.241.201.08A.S. Cardoso et al.                                                                                                                                                                                                                              

with other plant species. Moreover, there are no other plant species in 
Portugal (our study area) with the same features as C. selloana. Both of 
these particularities may be the source of the high results observed in 
this study. 

4.4. Monitoring the invasive alien Cortaderia selloana from online digital 
images

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What techniques are used to address data bias during preprocessing of the deep learning pipeline (e.g., Stratified splitting, oversampling, undersampling, Diverse data collection)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The paper does not explicitly mention any techniques used to address data bias during preprocessing of the deep learning pipeline. However, it can be inferred that some form of stratification or balanced sampling might have been employed due to the high performance metrics achieved in the classification task. Additionally, the use of transfer learning with popular convolutional neural networks (CNNs) such as VGG16, ResNet50, ResNet101, Inception-v3, DenseNet201, and EfficientNetB0 could help mitigate potential biases in the dataset since these architectures have shown good performance on various computer vision tasks. Furthermore, the authors mentioned using the Adam optimizer algorithm, a batch size of 10, and 100 epochs for model optimization, but they did not discuss any specific strategies to handle imbalanced classes or data bias. Lastly, the paper mentions implementing an early stop approach with a patience value of 16 to prevent overfitting and conserve computational resources, which could indirectly contribute to addressing data bias.