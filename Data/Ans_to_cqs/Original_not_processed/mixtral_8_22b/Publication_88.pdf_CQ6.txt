Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Table 1. Number of samples in the training, validation and test sets for Amazon database.

Set

Tiles

Available Def.
Samples

Available No-def.
Samples

Balanced Samples
(per Class)

Total Samples

Training

Validation

1, 7, 9, 13

5, 12

2706

963

78,431

39,697

Test

2, 3, 4, 6, 8, 10, 11, 14, 15

40,392

1,675,608

8118

2889

-

16,236

5778

1,716,000

The EF network architecture consisted of three convolutional layers (Conv) including the
Rectiﬁed Linear Unit (ReLU), two Max-pooling layers (MaxPool), and two Fully Connected layers
(FC), with a softmax layer at the end with two outputs, corresponding to “deforestation” and
“no-deforestation” classes. The ﬁlter and output size of each layer are summarized in Table 3.

132456789101112131415Remote Sens. 2020, 12, 910

11 of 28

Table 2. Number of samples in the training, validation and test sets for Cerrado database.

Set

Tiles

Available Def.
Samples

Available No-def.
Samples

Balanced Samples
(per Class)

Total Samples

For training the EF and SN models, we selected the following setup empirically: batch size equal
to 32 with 100 number of epochs, early stopping after 10 epochs with no improvement (over the
validation set) and a dropout rate of 0.2 in the ﬁnal FC layer. Additionally, Adam optimizer was
selected empirically with weight decay equal to 0.9 and learning rate equal to 10−3. As loss function,
we used the binary cross-entropy.

6 of 28

Figure 3. Procedure to train the SVMs ﬁlter bank. Mini-patches are extracted from input patches,
and they are vectorized to compose the training set of SVMs.

2.3.2. Training the SVMs Filter Bank

After the global training set is built, m subsets of N random selected samples are created to train
m SVMs ﬁlters. These m subsets are composed of n samples per class, which are randomly selected
from the global training set. The weights of the SVMs ﬁlters are learned using a conventional forward
supervised learning layer by layer in a greedy fashion. To make the most of available training samples
and to avoid data duplication in the subsets, in our study, the value of n was set to the ratio between
the number of training samples (N) and the amount (m) of SVM ﬁlters.

2.3.3. Generation of Feature Maps

2.6. Inﬂuence of the Number of Training Samples

To evaluate the inﬂuence of the number of training samples, four scenarios were considered.
Speciﬁcally collecting samples from the training set of a one, two, three and four tiles, denoted as Ni,
where i corresponds to the number of tiles used in each scenario. For EF and SN methods, the validation
set (val) was used to stop training once the loss increased in 10 consecutive epochs (early stopping).
As mentioned before, for CSVM and SVM the samples in this set were added to the training set (tr).
The number of training samples in each scenario for the Amazon and Cerrado databases is presented
in Tables 6 and 7, respectively.

Table 6. Training tiles used for the Amazon database.

Training Set

Tiles

Available Def.
Samples

Available No-def.
Samples

Balanced Samples
(per Class)

Total Samples
(tr + val)

1 Tile
2 Tiles
3 Tiles
4 Tiles

13
1, 13
1, 7, 13
1, 7, 9, 13

239
709
1807
2706

20,306
40,515
59,102
78,431

717
2127
5421
8118

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What preprocessing steps are involved before training a deep learning model (e.g., normalization, scaling, cleaning)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Based on the given information, it appears that there isn't any explicit mention of specific preprocessing steps such as normalization, scaling, or cleaning applied to the dataset before training the deep learning model. However, some general procedures can be inferred from the context.

Firstly, the datasets consist of deforestation and non-deforestation samples, indicating that the raw satellite imagery has been processed into labeled samples suitable for supervised learning. This could involve various image processing techniques like segmentation, feature extraction, etc.

Secondly, the table shows that the total number of samples varies significantly across different sets (training, validation, and testing), suggesting that the dataset might have undergone some form of splitting or partitioning.

Lastly, the description of the EF network architecture mentions Rectified Linear Units (ReLUs) and max-pooling layers, both of which are common components in Convolutional Neural Networks (CNNs) often used for image classification tasks. ReLUs help introduce non-linearity into the model, while max-pooling reduces the spatial dimensions of the input volume.

However, without more detailed information about the exact preprocessing steps taken, it would not be possible to provide a comprehensive list of all the preprocessing steps involved before training the deep learning model.