Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

model for extracting the embeddings. 

These are pulled from YAMNet and then fed as input to a sequential 
and  a  reduce  mean  layer  mapping  to  the  classes  mentioned  above 
(Ntalampiras et al., 2021). At this point, the final layers of the network 
map the YAMNet embeddings to the available labels as shown in Fig. 5. 

3.3. Results on goat vocalization detection 

The  dataset  presented  in  Section  3.2  was  divided  into  70%  for 
training, 10% for validation, and 20% for testing purposes. The division 
was  kept  the  same  when  experimenting  with  RF  and  YAMNet-based 

3  The 

librosa  python  package  available  at  https://librosa. 

org/doc/latest/index.html was employed at this stage 

Fig. 3. A close-up picture of a Sensortile.

3.2.2. Transfer learning based on YAMNet 

The second algorithm exploits the representation extracted from a 
deep neural network, i.e. YAMNet, which is pre-trained on data coming 
from 521 classes. Interestingly, YAMNet follows the MobileV1 convo-
lution architecture and is trained on the AudioSet-YouTube corpus (Shor 
et  al.,  2020).  Towards  using  YAMNet,  the  audio  data  is  processed  as 
follows:  

1.  The audio is converted to a monophonic channel and resampled at 

16 kHz.  

2.  The spectrogram is extracted and created using STFT magnitudes of 

25 ms overlapped by 15 ms.  

3.  The Mel spectrogram is calculated by mapping to 64 bins of the Mel 

scale within the range of 125–7500 Hz.  

4.  Finally, the algorithm is applied and its outcome is passed to YAMNet 

model for extracting the embeddings.

In  addition,  most  of 

Thus, the YAMNet-based  classification algorithm was immediately 
put into production to assist in the finer annotation of the detected vo-
calizations as described in the following section. At the same time, the 
present  algorithm  is  updated  on  a  regular  basis  with  new  data  as 
extracted by the clustering process described in Section 4.3 in order to 
further improve its performance. 

Table 1 
Confusion matrix obtained using the YAMNet-based classifier (%). The highest 
rates are emboldened.  

PresentedPredicted 

Goat 

Machinery 

Milk. Mach. 

Noise 

People 

Goat 
Machinery 
Milking machine 
Noise 
People 

98.1 
– 
– 
– 

2.2 

– 

61.9 
6.3 
1.6 
– 

– 

23.8 
81.3 
0.8 
– 

1.3 
9.5 
12.5 
97.6 
– 

0.6 
4.8 
– 
– 

97.8  

3.4. The smartphone application

Farm 

A 
B 
C 
D 
Total 

# Annotated Events 

# Audio Files 

Duration (h) 

1046 
791 
961 
2171 
4969 

3,468,415 
2,939,211 
1,662,819 
1,920,752 
9,991,197 

~ 10,527.82 
~ 12,519.97 
~ 5036.06 
~ 6172.18 
~ 34,256.03  

Therefore, the recording campaign was planned to last an entire year so 
as  to  capture  the  variations  that  goat  vocalizations  demonstrate 
throughout  the  year.  Overall,  we  have  collected  approximately  10  M 
sound  events  lasting  more  than  34,000  h.  Fig.  7  illustrates  the  data 
distribution per farm in terms of number of audio files, annotations and 
durations.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What metrics are used to evaluate the performance of the deep learning model (e.g., accuracy, precision, recall)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Based on the given context, it appears that the performance of the deep learning model, specifically the YAMNet-based classifier, is evaluated using a confusion matrix. This matrix provides insights into the true positive, false positive, true negative, and false negative rates of the model. However, the context does not explicitly mention specific metrics such as accuracy, precision, or recall. Nevertheless, these metrics can be derived from the values in the confusion matrix. For instance, accuracy can be calculated as the sum of true positives and true negatives divided by the total number of instances. Precision can be computed as the ratio of true positives to the sum of true positives and false positives. Recall, also known as sensitivity, can be determined as the ratio of true positives to the sum of true positives and false negatives. Therefore, while the context does not directly state the use of these metrics, they can still be inferred from the information provided.