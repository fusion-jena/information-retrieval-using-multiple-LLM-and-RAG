Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

The training dataset, including 268 sample plots with 39 features in a 
tabulated format, was used as input during the training process (opti-
mizing  hyper-parameters  and  fitting  models  with  these  data).  The 
training data set was divided into two parts, in which 80% was used for 
training/validation, and the remaining 20% was kept as unseen data for 
testing. To eliminate bias, 10-fold cross-validation was used during the 
training  process,  and  mean  RMSE  was  used  as  the  objective  function 
(lost function). Table 4 shows RMSE, MAE, and R2  using different op-
timizers. In addition, we tested the differences between the RMSEs in 
Table 4 using the Wilcoxon Signed-Rank test with paired samples. The 
differences between (XGBoost-BO vs. XGBoost-TDO, XGBoost-BOHB vs. 
XGBoost-TDO) or (LightGBM-BO vs. LightGBM-TDO, LightGBM-BOHB 
vs.  LightGBM-TDO)  are  significant.  However,  the  performance  of 
XGBoost-TDO  versus  LightGBM-TDO  appears  to  be  the  same (Fig.  3),

MSAVI =

GREEN (cid:0) BLUE 
2NIR + 1 (cid:0)

√

̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅̅
(2NIR + 1)2 (cid:0) 8(NIR (cid:0) RED)

predictive efficiency, handle large datasets, and reduce training time. It 
is typically recommended for tabular datasets. LightGBM differs from 
other tree-based methods by implementing leaf-wise splits that create 
more  complex  trees,  which  are  more  efficient  in  reducing  loss  and 
resulting  in  higher  accuracy.  The  split  is  based  on  a  novel  sampling 
method named Gradient-Based One-Side Sampling (Ke et al., 2017), in 
which data with small gradients are excluded, and the rest are used for

As  machine  learning  models  have  been  increasingly  deployed  in 
critical applications, there may be a growing demand for interpretable 
and explainable hyperparameter optimization techniques. Methods that 
provide transparency and explainability in the hyperparameter tuning 
process  could  gain  importance  to  ensure  fairness,  accountability,  and 
transparency in developing machine learning models. Machine learning 
algorithms are considered robust classification and regression methods 
in which models are trained and learned from input data to improve the 
prediction of unseen data. However, the internal process is not under-
standable, as  it is  considered a  black-box stage. To  better understand 
interactions  between  features,  we  evaluated  several  performance  in-
dicators,  such  as  feature  importance,  feature  interactions,  and  contri-
butions of all features. The Shapley values provide a way to distribute

2. Data and methods 

The overall workflow of the proposed method is shown in (Fig. 1). 
For  simplicity,  the  workflow  starts  with  collecting  sample  plots  and 
image processing to generate a tabulated dataset, including on-field AGB 
and  independent  features.  This  data  set  is  fed  into  hybrid  models,  in 

which  Bayesian  optimizers  and  TDO  tune  the  hyperparameters  of 
XGBoost and LightGBM using RMSE as the objective function. The best 
model  (with  the  smallest  RMSE)  is  selected  to  estimate  AGB  for  the 
entire study area. This model was also interpreted to understand better 
what operates inside the ‘black box.’ More detailed descriptions of the 
study area,  data specifications and preparation, and  algorithm justifi-
cations are presented in the following sections. 

2.1. Field data

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What data formats are used in the deep learning pipeline (e.g., image, audio, video, CSV)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:

Answer: The text mentions that the training dataset includes 268 sample plots with 39 features in a tabulated format. This suggests that the data used in this deep learning pipeline is likely in a structured format, possibly a CSV file or similar. There is no mention of other data formats like images, audio, or video being used in the pipeline. Therefore, it can be inferred that the primary data format used in this deep learning pipeline is a tabulated format, such as a CSV file.