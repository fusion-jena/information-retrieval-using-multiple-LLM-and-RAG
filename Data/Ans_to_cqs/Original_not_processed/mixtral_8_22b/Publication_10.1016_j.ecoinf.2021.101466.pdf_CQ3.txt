Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

To train the EfficientNet, we prepared 4000 images for each category 
using the data augmentation method proposed above. We used 80% of 
the 4000 images for training and the remaining 20% for validation. The 
EfficientNet was trained by the Adagrad in 100 epochs. The dropout rate 
for each task was set at 0.5. The batch size was set at 20. 

All evaluations were performed on the NVIDIA GeForce RTX 2080Ti 
GPU with 11G memory, and the software was Windows 10, Python 3.7, 
CUDA 10.2. Keras 2.4.3 were used to build all models. 

To compare model results with the test video, we used IoU as the 
threshold  for  positives  or  negatives  based  on  the  object  confidence 
scores estimated by the object detector. IoU was defined as the inter-
section  over  the  union  of  the  two  bounding  boxes,  which  were  the 
ground-truth  bounding  box  and  the  predicted  bounding  box.  In  this 
paper, we set the threshold of IoU at 0.3 to consider correct or incorrect 
detection results.

2.3. Data augmentation 

Although  optimizing  many  parameters  of  CNN  based  on  deep 
learning required a large dataset, there were only small datasets for pest 
detection and identification. Existing datasets only had approximately 
100 images for each type (Samanta and Ghosh, 2012; Rustia et al., 2018; 
Xia  et  al.,  2018;  He  et  al.,  2019;  Wang  et  al.,  2012;  Venugoban  and 
Ramanan, 2014; Xie et al., 2018; Deng et al., 2018). To obtain a more 
generalized model, training data should have fine diversity as the ob-
jects varied in size, lighting conditions, and poses. To circumvent the 
limited quantity and diversity of training data, data augmentation was a 
useful technique that could increase the size of the training set without

these methods. By applying random erasing to the training dataset of the 
EfficientNet, performance was also moderately improved (Table 6).

Tan, M., Le, Q., 2019. EfficientNet: rethinking model scaling for convolutional neural 
networks. In: Chaudhuri, K., Salakhutdinov, R. (Eds.), Proceedings of the 36th 
International Conference on Machine Learning. PMLR, pp. 6105–6114. 

Tresson, P., Carval, D., Tixier, P., Puech, W., 2021. Hierarchical classification of very 
small objects: application to the detection of arthropod species. IEEE Access 9, 
63925–63932. 

Tresson, P., Tixier, P., Puech, W., Bagny Beilhe, L., Roudine, S., Pages, C., Carval, D., 

2019. CORIGAN: assessing multiple species and interactions within images. Methods 
Ecol. Evol. 10, 1888–1893. 

Valan, M., Makonyi, K., Maki, A., Vondr´aˇcek, D., Ronquist, F., 2019. Automated 

taxonomic identification of insects with expert-level accuracy using effective feature 
transfer from convolutional networks. Syst. Biol. 68, 876–895. 

Van Etten, A., 2018. You only look twice: rapid multi-scale object detection in satellite

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the data annotation techniques used in the deep learning pipeline (e.g., bounding box annotation, instance segmentation)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The given context does not explicitly mention any specific data annotation techniques used in their deep learning pipeline. However, it can be inferred that they might have used bounding box annotations since they discuss Intersection over Union (IoU), which is commonly used when working with bounding boxes. Additionally, they use the term 'object detector,' which often involves detecting objects within bounding boxes. Instance segmentation is not mentioned nor implied in the given context.