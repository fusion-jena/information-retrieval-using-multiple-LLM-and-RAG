Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

In  the  development  stage,  the  preprocessed  data  was  divided  into 
training (80%), validation (10%), and test sets (10%) for model training 
and testing purposes (Shah et al., 2018), followed by the construction of 
predictive  models  using  both  deep  learning  algorithms  (e.g.,  Deep 
Neural  Networks)  and  traditional  machine  learning  approaches  (e.g., 
AdaBoost  Regressor,  Support  Vector  Regressor,  etc.),  with  hyper-
parameter tuning performed via GridSearchCV with cross-validation (cv 
= 10).  While some studies  might  use different proportions, such as  a 
70–30 split between training and testing/validation (Khan et al., 2022), 
the  80–10-10  split  employed  in  this  study  ensured  a  more  extensive 
training set, potentially leading to a better-generalized model. The test 
set,  which  the  model  has  not  previously  seen  during  the  training  or 
validation phases indicates the model’s performance in real-world sce-
narios (Shah et al., 2018).

The  choice  and  tuning  of  parameters  played  a  critical  role  in  the 
performance of these models (Yang and Shami, 2020). Parameters like 
‘max_depth’ in tree-based models and ‘learning_rate’ in boosting models 
impacted the ability of the model to learn the data without overfitting. 

Similarly, the number of estimators or iterations controlled the extent of 
learning, making it a crucial parameter for model optimization.

Employing GridSearchCV ensured that each candidate combination 
of  hyperparameters  is  assessed  using  cross-validation  with  a  fixed 
number of folds, in this case, ten, as highlighted by Shahhosseini et al. 
(2021). This tenfold cross-validation provides a reliable estimate of the 
model’s performance, balancing the trade-off between bias and variance 
and  guarding  against  overfitting.  The  hyperparameter  tuning  process 
implemented  in  this  study  relied  on  a  detailed  and  systematic  search 
across a predefined grid of hyperparameter values. A unique parameter 
grid  was  defined  for  each  model  considered,  targeting specific  model 
characteristics such as the number of estimators in ensemble methods or 
the  depth  of  trees  in  decision  tree-based  algorithms.  This  process 
ensured that the eventual choice of hyperparameters was not arbitrary 
but  is  backed  by  empirical  evidence  that  aligns  with  Schratz  et  al.

2.3. Analysis workflow 

This analysis utilized a structured methodology to predict oil palm 

yield (Fig. 2). The methodology encompasses several stages. 

2.3.1. Data acquisition 

The  first  stage  was  data  acquisition,  which  involved  gathering 
remote  sensing data from Landsat 7  and various field data,  including 
environmental  factors,  plant  growth  and  anatomy,  agricultural  prac-
tices, and actual production outcomes, discussed in Section 2.2. 

Fig. 2. The analysis workflow that shows the relationships, the data, and the methods employed in this study.  

EcologicalInformatics81(2024)1025954E.J. Jamshidi et al.                                                                                                                                                                                                                             

2.3.2. Preprocessing

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the postprocessing steps involved after the model training (e.g., Saliency maps, Metrics calculation, Confusion matrix)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Unfortunately, the given context does not provide information about any postprocessing steps involved after the model training. Therefore, I cannot provide a helpful answer based solely on the provided text. However, common postprocessing steps include evaluating the model's performance using metrics such as accuracy, precision, recall, F1 score, ROC curves, and confusion matrices. Additionally, techniques like saliency maps can be used to visualize and understand the features contributing most significantly to the model's predictions.