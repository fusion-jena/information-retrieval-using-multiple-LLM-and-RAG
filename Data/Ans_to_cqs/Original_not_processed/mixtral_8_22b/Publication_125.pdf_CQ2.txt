Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

Table 3. CNN Architecture.

No.

Layers

Output Shape

Parameters

Dropout Rate

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

Input
Convolutional
Activation (ReLu)
MaxPooling
Convolutional
Activation (ReLu)
MaxPooling
Convolutional
Activation (ReLu)
MaxPooling
Dropout
Flatten
Fully Connected
Activation (ReLu)
Fully Connected
Activation (softmax)

128 × 128 × 3
128 × 128 × 32
—
64 × 64 × 32
64 × 64 × 32
—
32 × 32 × 32
32 × 32 × 64
—
16 × 16 × 64
16 × 16 × 64
16,384
64
—
4
—

—
896
—
—
9248
—
—
18,496
—
—
—
—
1,048,640
—
—
260

—
—
—
—
—
—
—
—
—
—
0.4
—
—
—
—
—

4.2.1. Data Augmentation

except for the ﬁrst and last modules. The FC layer is replaced with a global average
POOL layer and the default input size is 299 × 299 × 3 [25].
DenseNet121: Huang et al. (2017) proposed the architecture of the DenseNet121 model,
another CNN-based architecture trained on the ImageNet dataset. DenseNet121 is
composed of 5 dense blocks. The ﬁrst block consists of a convolution layer with
a 7 × 7 ﬁlter and stride of 2 and a MaxPooling layer with a 3 × 3 max ﬁlter and
stride of 2. The remaining blocks consist of BatchNormalization, the ReLU activation
function, and two CONV layers with 1 × 1 and 3 × 3 ﬁlters. A transition layer follows
each block except for the last, which instead is followed by a classiﬁcation layer. In
DenseNet121, all previous feature-maps are used as input in each layer. The default
input size is 224 × 224 × 3 [26].

•

•

Case 1: Training and testing the proposed CNN model with unencrypted data. The
results from training the model with plain data achieved 96.91% and 96.84% accuracy
for training and validation, respectively, on the training dataset, as well as 93.84%
accuracy for the testing dataset. Figure 7 demonstrates the accuracy results for training
and validating the CNN model over plain satellite images.
Case 2: Training and testing the proposed CNN model over encrypted data. The
results of training the model on encrypted data achieved 94.04% and 94.30% accuracy
for training and validation, respectively, on the training dataset, as well as 90.92%
accuracy for the testing dataset. Figure 8 demonstrates the accuracy results for training
and validating the CNN model on encrypted satellite images.

Remote Sens. 2021, 13, 2221

18 of 26

There are several different DL approaches commonly used for data processing [11],
but the CNN is one of the most common speciﬁcally for image-based data processing.
CNN is a category of deep neural networks (DNN), which itself is a substantial model of
machine learning (ML). CNN is often applied to visual image processing and computer
vision [12]. The most substantial presumption regarding issues addressed by CNN is
regarding spatially-based characteristics. For instance, in a n object recognition system,
we do not need to give thought to the objects’ location in the images. The main concern
is to detect them throughout the provided images, regardless of their actual location
therein. Another essential characteristic of CNN is found in how it acquires conceptual
characteristics as data spread into the deeper layers. For instance, the edge could be
identiﬁed throughout the ﬁrst layer of the image classiﬁcation, and then simple features

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What data formats are used in the deep learning pipeline (e.g., image, audio, video, CSV)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
The given context does not explicitly mention the specific data format used in the deep learning pipeline. However, based on the information provided about the use of Convolutional Neural Networks (CNN) and the discussion of satellite images, we can infer that the data format used in this case is likely image data. CNNs are particularly effective for image-based data processing and computer vision tasks. Therefore, it is reasonable to conclude that the deep learning pipeline discussed here involves using image data. Other possible data formats such as audio or video are not mentioned in the context, nor is there any indication that structured data like CSV files were used.