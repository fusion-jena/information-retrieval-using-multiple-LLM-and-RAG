Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

3.4. Sampling Method

The SPOT6 satellite data for our ﬁve study areas were preprocessed to be fed into the
different Deep Learning architectures and the XGBoost model. First, the data were split
into three mutually exclusive parts: a learning set, a validation set and a test set totally
independent of the two previous ones.

Four of the ﬁve areas were used for learning and validation. The last, isolated scene
was then used as the test set. It contained all the classes for the two nomenclatures, the ﬁve
LC classes, and the 12 LU classes. In addition, this image contained all the environments
representing the New Caledonian landscape: urban, mining, mountainous and forest
environment with variations from the coastline to the inland mountain areas. It is on this
entire scene that the ﬁnal confusion matrix and quality metrics were computed.

All architectures were trained with stochastic gradient descent using a similar protocol,
with a momentum of 0.9 and starting from an initial learning rate of 10−2. Every 20 epochs,
the learning rate is divided by 10 until reaching 10−6.

Neural networks do not perform well when trained with unbalanced data sets [41]. In
the case of “central-pixel labeling” architectures it is possible to make balanced data sets
with the initial pixels selection used for the learning. In the case of “semantic labeling” the
composition of the images makes it more difﬁcult to precisely control the number of pixels
per class. We tried several methods, but found negligible differences in performance. All
reported experiments use the median frequency balancing method.

3.3.1. Central-Pixel Labeling

Remote Sens. 2021, 13, 2257

13 of 22

between 12 land type classes for the classiﬁcation, as described in the nomenclature in
Table 4. Table 8 presents the results of the LU classiﬁcation on the test area and Table A2, in
the Appendix, presents the results of the LU classiﬁcation on the four training areas.

Table 8. Results of Deep Learning architecture and XGBoost for the LU detection task with RGBNIR
as input.

Architectures

XGboost
AlexNet
ResNet
DenseNet
SegNet
DeepLab
FCN

OA

51.56%
45.79%
55.96%
59.59%
58.36
61.45%
56.07%

PA

42.61%
33.93%
43.89%
46.18%
37.16
49.77%
49.59%

UA

38.27%
38.26%
49.58%
55.00%
40.48
51.04%
47.22%

F1-Score

40.32%
35.97%
46.56%
50.21%
38.75%
50.40%
48.38%

Learning techniques barely distinguished mines and bare soil classes, but this task is very
difﬁcult to perform, even for a human operator, without contextual information and based
only on a small picture (128 × 128 pixels).

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What is the strategy implemented to monitor the model performance during training?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:

Answer: During the training process, the model performance was monitored through a specific strategy involving splitting the dataset into three distinct parts: a learning set, a validation set, and a test set. Four out of five areas were utilized for learning and validation purposes, while the remaining isolated scene served as the independent test set. This test set encompassed all classes for both nomenclatures, including the five Land Cover (LC) classes and twelve Land Use (LU) classes. Additionally, this image represented various environments characteristic of the New Caledonian landscape, such as urban, mining, mountainous, and forest environments, spanning from coastal regions to inland mountain areas.

To evaluate the final performance of the models, a confusion matrix and quality metrics were calculated using the entire test scene. Furthermore, all architectures were trained using stochastic gradient descent with a consistent protocol, employing a momentum of 0.9 and initiating with an initial learning rate of 10^-2. After every 20 epochs, the learning rate was reduced by dividing it by 10 until it reached 10^-6.