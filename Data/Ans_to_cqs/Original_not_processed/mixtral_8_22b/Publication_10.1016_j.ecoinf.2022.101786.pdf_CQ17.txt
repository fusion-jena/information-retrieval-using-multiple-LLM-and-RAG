Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

2.5. Model selection 

CNNs are sensitive to overfitting (Domingos, 2012). Throughout the 
training process, the algorithm goes through cycles of training on the 
training set - evaluating performance on the validation set – adjusting 
CNN node weights – before repeating the entire cycle. These cycles are 
referred to as epochs or iterations when the training dataset is too large 
to  be  processed  in  one  stroke  and  needs  to  be  subdivided  in  several 
smaller batches as is the case in this study. There is an optimum number 
of iterations before the performance on the validation and training sets 
(independent data that the CNN has not seen) start to diverge as the CNN 
overfits  and  becomes  more  specialized  at  predicting  the  training  set 
while becoming less able to predict the validation set (generalization).

iterations  also  showed  default  parameters  (6000  iterations)  set  by 
Bochkovskiy et al. (2020) may not apply to all cases. Here, testing with 
less iteration showed that slightly higher recall and precision could be 
achieved with half the training time before overfitting starts affecting 
accuracy. This is a known phenomenon that affects CNNs (Domingos, 
2012).  Closely  monitoring  the  performances  throughout  training  and 
applying early stopping (Ying, 2019) can yield a significant gain when it 
saves 8 or 9 h and maximizes recall and precision. Picking an arbitrarily 
low number of iterations could save time in the analysis phase if speed of 
analysis  is  an  objective  in  itself  and  the  best  performance  are  not 
necessarily required. An example situation would be during an explo-
ration phase of a sampling exercise when the area of highest concen-
tration of a target for physical sampling is sought. Quickly mapping the

Some model parameters were modified from the default configura-
tion to balance use of resources and training speed. We retained a res-
olution of 704 × 704, batch size 64, 32 subdivisions and trained up to 
6000 iterations. Other parameters were kept to default or set according 
to guidance by the developers (https://github.com/AlexeyAB/darknet). 
Manual annotations were used to generate training, validation and 
testing  datasets.  Biigle  annotations  (label  name,  centre  x,  center  y, 

EcologicalInformatics71(2022)1017863N. Piechaud and K.L. Howell

2.4. Model evaluation 

The testing dataset was composed of 500 manually annotated images 
from  the  same  transect  and  was  only  used  to  calculate  performances 
outside  the  Darknet  framework  by  comparing  CNN  predictions  with 
manual annotations. 

Predictions  come  as  a  .JSON  file  containing  the  coordinate  of  the 
bounding box of each tentative annotation as well as a confidence score 
ranging from 0.05 at minimum (lower confidence scores introduced too 
much  noise  and  therefore  were  not  recorded)  to  1  at  maximum.  Pre-
dictions made on the testing set were compared to the manual annota-
tion of the same images.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What are the regularization methods used to prevent overfitting in the deep learning pipeline (e.g., dropout, L2 regularization)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Based on the given context, there is no explicit mention of specific regularization methods such as dropout or L2 regularization being used to prevent overfitting in the deep learning pipeline. However, the text does discuss the issue of overfitting in Convolutional Neural Networks (CNNs), which is a common problem in deep learning models. The authors note that there is an optimal number of iterations before the performance on the validation and training sets begins to diverge due to overfitting. They suggest closely monitoring the performance throughout training and applying early stopping to avoid overfitting and improve accuracy. While these techniques do not directly address regularization methods like dropout or L2 regularization, they are still relevant strategies for preventing overfitting in deep learning pipelines.