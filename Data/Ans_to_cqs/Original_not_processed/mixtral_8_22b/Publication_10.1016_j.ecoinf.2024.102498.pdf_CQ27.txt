Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.

An alternative approach to enhancing the accuracy of LULC maps is 
to leverage deep learning techniques. These techniques operate patch- 
wise,  where  each  patch  incorporates  sophisticated  features  extracted 
from satellite imagery. This enables them to recognize intricate patterns 
effectively.  Particularly,  Convolutional  Neural  Networks  (CNNs)  are 
highly  effective  for  LULC  classification.  These  models  automatically 

EcologicalInformatics80(2024)10249824M. Ganjirad and H. Bagheri

Due to processing limitations in GEE, it is impossible to utilize many 
samples and automate hyperparameter tuning. To fill this gap and avoid 
overfitting,  the  validation  data  were  employed  for  tuning  the  key 
hyperparameters for each model. Table 3 presents the hyperparameters 
set for each model during training and validation. 

5.3.2. Pixel-based approach 

The  pixel-based  classification  approach  relies  on  the  spectral 

Table 3 
Hyperparameters were set for each machine learning technique within the GEE 
platform.  

Model 

CART   

RF   

GTB   

SVM   

Hyperparameters 

• Max nodes: No limit  
• Min leaf population: 1 

• Number of trees: 264  
• Bag fraction: 0.5  
• Variables per split: Root of the number of variables 

• Number of trees: 20  
• Shrinkage: 0.005  
• Sampling rate: 0.7  
• Loss: Least absolute deviation 

• Kernel type: RBF  
• SVM type: C_SVC  
• Decision procedure: Voting

Table 1 
USGS 24 LULC classes defined for WRF simulation.  

Category Index 

Name of the Category 

1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
17 
18 
19 
20 
21 
22 
23 
24 

Urban and Built-up Land 
Dryland Cropland and Pasture 
Irrigated Cropland and Pasture 
Mixed Dryland/Irrigated Cropland and Pasture 
Cropland/Grassland Mosaic 
Cropland/Woodland Mosaic 
Grassland 
Shrubland 
Mixed Shrubland/Grassland 
Savanna 
Deciduous Broadleaf Forest 
Deciduous Needleleaf Forest 
Evergreen Broadleaf 
Evergreen Needleleaf 
Mixed Forest 
Water Bodies 
Herbaceous Wetland 
Wooden Wetland 
Barren or Sparsely Vegetated 
Herbaceous Tundra 
Wooden Tundra 
Mixed Tundra 
Bare Ground Tundra 
Snow or Ice

Fig. 11. The updated USGS 24 LULC map through the proposed framework against the default LULC map employed in WRF. Both maps are displayed in the second 
domain of WRF. 

best models in terms of OA and KC. SVM and CART had lower perfor-
mance  but  still  provided  meaningful  results.  It  is  noteworthy  that 
ensemble  methods,  such  as  RF  and  GTB,  outperformed  individual 
methods,  highlighting  the  effectiveness  of  ensemble  methods  in 
handling complex relationships for LULC classification.

Question: %INSTRUCTIONS:
Use the provided pieces of context to answer the query in less than 400 words. If you don't know the answer, just say that you don't know, don't try to make up an answer.

%Query
Query: "What process was followed to deploy the trained deep learning model (e.g., Model serialization, Platform selection)?"

Provide your answer as follows:

Answer:::
Answer: (provide your answer to query in less than 400 words)

Answer:::

Helpful Answer:
Unfortunately, there isn't enough information available from the given context to provide a detailed explanation about how the trained deep learning model was deployed. However, based on common practices in deploying deep learning models, some possible steps could include:

1. Model Serialization: After training the deep learning model, it can be saved or serialized into a file format like.h5,.pkl, or.onnx. This allows the model to be reused later without having to train it again.

2. Platform Selection: Once the model has been serialized, it needs to be integrated with a platform or application that will use it for predictions. Depending on the specific requirements of the project, different platforms may be chosen. For example, if real-time predictions are needed, then a cloud-based platform like AWS, Google Cloud, or Azure might be used. Alternatively, if the focus is on mobile applications, then TensorFlow Lite or Core ML could be suitable options.

Without further details regarding the specific implementation of the deep learning model mentioned in the context, these general steps should give you an idea of what processes might have been involved in deploying the trained model.