Answer: 

Unfortunately, the provided context does not mention specific strategies employed to handle randomness in the deep learning pipeline, such as setting a random seed value. The context primarily focuses on the application of machine learning methods, including deep learning, to species distribution predictions and modeling. It discusses the use of various machine learning algorithms, such as artificial neural networks, random forest, and gradient boosting machines, but does not delve into the details of handling randomness in the deep learning pipeline.

However, it is worth noting that the context does mention the use of PyTorch, a deep learning library, in one of the cited references (Paszke et al., 2019). PyTorch provides features to handle randomness, such as setting a manual seed for reproducibility, but this is not explicitly discussed in the provided context.

In general, handling randomness in deep learning pipelines involves techniques such as setting a fixed random seed, using reproducible random number generators, and controlling the sources of randomness in the model architecture and training process. However, these strategies are not mentioned in the provided context.