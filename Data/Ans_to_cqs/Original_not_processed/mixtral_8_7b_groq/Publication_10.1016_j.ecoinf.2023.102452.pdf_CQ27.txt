Based on the provided context, there is no explicit information about the process followed to deploy the trained deep learning model. However, it can be inferred that the models were trained and compared using various deep learning approaches such as Neural Networks, Support Vector Machines, Long Short-Term Memory, and Multi-gene Genetic Programming (Uncuoglu et al., 2022; Mortazavizadeh et al., 2023).

Moreover, the study by Mortazavizadeh et al. (2023) compared LSTM, CNN, and ConvLSTM for hourly short-term streamflow forecasting using deep learning approaches. The study utilized the Eureqa Pro software for GP modeling, which was developed by Cornell Universityâ€™s Data Science Order and released in 2009 (Eureqa, 2009). However, the context does not provide information on how the trained models were serialized or deployed on a platform.

In general, deploying a trained deep learning model involves several steps, including model serialization, platform selection, and integration with other systems. Model serialization involves saving the trained model in a format that can be loaded and used for making predictions. Common formats for model serialization include JSON, XML, and binary formats specific to the deep learning framework used.

Platform selection involves choosing a platform to deploy the model, such as a cloud-based platform, an edge device, or a local server. The choice of platform depends on factors such as the required latency, the volume of data to be processed, and the available resources.

Integration with other systems involves connecting the deployed model to other systems, such as databases, data streams, or user interfaces. This may involve using APIs, message queues, or other communication protocols.

Therefore, while the provided context does not give specific information on the process followed to deploy the trained deep learning model, it can be inferred that the models were trained using various deep learning approaches, and the Eureqa Pro software was used for GP modeling. However, the context does not provide information on how the trained models were serialized or deployed on a platform.