Based on the provided context, there is no explicit information about the specific postprocessing steps applied after training the ResNet50V2 models or the YOLOv3 model. However, it can be inferred that some form of evaluation was performed, such as calculating metrics like recall (Figure 8) and possibly creating a confusion matrix.

For the ResNet50V2 models, the training procedure involved adapting the final classification layer to match the seven classes (six IAPS and "no species") and training the network on five different image sizes using either random weights or pre-trained ImageNet weights (5.1.1. Network Training Procedure). The validation set was used to plot the recall as a function of the annotation size relative to the image size (Figure 8). This suggests that metrics were calculated to evaluate the model's performance.

For the YOLOv3 model, the model was trained using an average training loss to determine when to stop the training, and it was tested using the images from the test data set scaled to a pixel size of 608 Ã— 608. However, there is no explicit mention of postprocessing steps like generating saliency maps or calculating specific metrics.

In summary, while the context does not provide explicit details about the postprocessing steps, it can be inferred that metrics like recall were calculated for the ResNet50V2 models, and the YOLOv3 model was tested using the test dataset. There is no mention of other postprocessing steps such as generating saliency maps or creating confusion matrices.

Answer::: The provided context does not offer explicit details about the postprocessing steps after training the ResNet50V2 models or the YOLOv3 model. However, it can be inferred that metrics like recall were calculated for the ResNet50V2 models, and the YOLOv3 model was tested using the test dataset. There is no mention of other postprocessing steps such as generating saliency maps or creating confusion matrices.