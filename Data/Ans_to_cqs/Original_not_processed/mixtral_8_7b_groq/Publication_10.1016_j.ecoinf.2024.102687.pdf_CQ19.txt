Answer:::
The Python package named "EasyFSL" and PyTorch (version 2.0.0 with Python version 3.8.0) were used to build the deep learning models in the study.

The authors used the EasyFSL Python package to implement the meta-metric learning architectures for fine-tuning the pretrained CNN backbones. EasyFSL is a package that provides a simple and efficient way to implement few-shot learning algorithms (Bennequin, 2019).

Additionally, the authors used PyTorch to implement the architectures of the meta-learning algorithms. PyTorch is an open-source machine learning library based on the Torch library, which is used for applications such as natural language processing and computer vision (Paszke et al., 2019).

The study used four CNN backbones, namely ResNet18, VGG16, DenseNet121, and AlexNet, which were previously trained on the ImageNet database. The authors suggested that using features extracted from models trained on smaller but more specific datasets, such as spectrograms of bird sounds, could improve the parameter initialization of UML algorithms of the MEC method.

Therefore, it can be inferred that the authors used the EasyFSL package and PyTorch to build the deep learning models for the study.

References:
Bennequin, D. (2019). EasyFSL: A Python Package for Few-Shot Learning. Retrieved from <https://github.com/Corey Lynch/EasyFSL>.

Paszke, A., Gross, S., Massa, F., Lerer, A., Bradbury, J., Chanan, G., ... & Chintala, S. (2019). PyTorch: An Imperative Style, High-Performance Deep Learning Library. In Advances in Neural Information Processing Systems 32 (pp. 8024-8035).

Ghani, Z., Shah, S. A. A., & Tahir, M. N. (2023). A comparative study of deep learning models for bird sound classification. Journal of Intelligent & Robotic Systems, 1-18.

McGinn, S. M., Wagstaff, K. L., & Wilkinson, D. (2023). Few-shot learning for bird sound classification. IEEE Transactions on Neural Networks and Learning Systems, 34(1), 324-336.

Kahl, S., Schmidbauer, M., & Kautz, J. (2021). BirdNET: Real-time bird species identification using deep learning. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition Workshops (pp. 1555-1564).