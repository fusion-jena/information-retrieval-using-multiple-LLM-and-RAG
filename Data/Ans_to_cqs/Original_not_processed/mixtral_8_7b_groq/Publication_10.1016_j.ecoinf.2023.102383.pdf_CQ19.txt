The context provided does not give specific information about the deep learning frameworks used to build the models. However, it does mention several models and papers that could be used to find this information.

The models mentioned include ResNet18, ResNet34, ResNet50, ResNet101, and ResNet152, which are all part of the Residual Neural Network family. These models are often implemented using deep learning frameworks such as TensorFlow or PyTorch.

The paper "YOLOv4: Optimal Speed and Accuracy of Object Detection" by Bochkovskiy et al. (2020) mentions using Darknet as the deep learning framework for their implementation of YOLOv4. Darknet is an open-source neural network framework written in C and CUDA, and it is used for object detection and image recognition tasks.

The paper "Automated detection of European wild mammal species in camera trap images with an existing and pre-trained computer vision model" by Carl et al. (2020) does not explicitly mention the deep learning framework used for their implementation. However, they do mention using a pre-trained computer vision model, which suggests that they may have used a pre-trained model from a deep learning framework such as TensorFlow or PyTorch.

The paper "R-CNN for Small Object Detection" by Chen et al. (2017) mentions using the Caffe deep learning framework for their implementation of R-CNN. Caffe is a deep learning framework developed by Berkeley AI Research and by community contributors.

Therefore, while the context provided does not give a definitive answer to the query, it suggests that deep learning frameworks such as TensorFlow, PyTorch, Darknet, and Caffe may have been used to build the models.