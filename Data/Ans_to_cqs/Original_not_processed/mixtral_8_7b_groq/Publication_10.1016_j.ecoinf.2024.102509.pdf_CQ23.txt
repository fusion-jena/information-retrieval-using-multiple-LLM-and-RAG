Based on the provided context, the following measures were taken to ensure the generalizability of the deep learning model:

Firstly, the accuracy of the Artificial Neural Network (ANN) model's training process relied on the quality and quantity of the sample dataset. This implies that a diverse dataset was used to ensure that the model can make accurate predictions on new, unseen data. However, the text does not explicitly mention how the dataset was diversified.

Secondly, the over-fitting problem was addressed by determining the optimal numbers of hidden layers of the ANN model. Over-fitting occurs when a model learns the training data too well, including its noise and outliers, and performs poorly on new data. By determining the optimal number of hidden layers, the model's complexity was controlled, preventing it from learning the training data's noise and outliers.

Thirdly, repeated training and testing were necessary to develop an optimal neural network and attain high SOC values of the validation dataset. This process is similar to cross-validation, where the dataset is divided into several subsets, and the model is trained and tested on each subset. Cross-validation helps in evaluating the model's performance on new data and preventing over-fitting.

Lastly, the 'neuralnet' package of R 4.1.2 software was considered for training multi-layer perceptrons in regression analyses. This software package provides functions for training feed-forward neural networks, which are a type of deep learning model. The package's functions include cross-validation and early stopping, which help in preventing over-fitting and ensuring the model's generalizability.

In summary, the generalizability of the deep learning model was ensured by using a diverse dataset, controlling the model's complexity, repeated training and testing, and using a software package that provides functions for preventing over-fitting. However, the text does not explicitly mention stratified splitting, which is a technique for dividing the dataset into subsets based on a specific criterion, such as class labels.