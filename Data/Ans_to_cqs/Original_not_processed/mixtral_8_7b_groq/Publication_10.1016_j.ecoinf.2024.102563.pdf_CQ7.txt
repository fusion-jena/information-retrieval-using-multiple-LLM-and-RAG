Answer:::

The criteria used to split data for deep learning model training, such as train, test, and validation sets, are not specified in the provided contexts. However, the contexts do provide some insight into data processing and model evaluation methods used in remote sensing and digital soil mapping.

In the context "Land cover classification in a complex urban-rural landscape with QuickBird imagery" by Lu, D., Hetrick, S., and Moran, E. (2010), the authors used a training-testing strategy to evaluate the classification accuracy of land cover classes. They randomly selected 70% of the available data for training and the remaining 30% for testing.

In "Digital soil assessments: beyond DSM" by CarrÂ´e, F., McBratney, A.B., Mayr, T., and Montanarella, L. (2007), the authors mentioned the importance of using independent validation data sets to assess the accuracy of digital soil maps. They emphasized the need for a separate validation data set that is not used in the model training process.

In "Support vector machine versus artificial neural network for land use classification" by Sheykhmousa, M., Mahdianpari, M., and Ghanbari, H. (2020), the authors used a 70-30% split for training and testing their support vector machine (SVM) and artificial neural network (ANN) models.

In "Random forests" by Breiman, L. (2001), the author mentioned the use of out-of-bag (OOB) samples for model evaluation. In random forests, each tree is built using a random subset of the training data. The remaining samples, called OOB samples, are used to estimate the error rate of the model.

In summary, while the specific criteria for splitting data for deep learning model training are not provided in the contexts, there are some common practices in remote sensing and digital soil mapping. These include using a random split of the data into training and testing sets, using a separate validation data set, and using OOB samples for model evaluation. The choice of criteria depends on the specific research question, data availability, and model complexity.